{
    "project": {
        "name": "ose-bundle",
        "description": "Open Smart Environment Bundle",
        "version": "0.1.2"
    },
    "files": {
        "examples/media/config.js": {
            "name": "examples/media/config.js",
            "modules": {
                "bundle.media": 1
            },
            "classes": {
                "bundle.examples.media.config": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "examples/media/run.js": {
            "name": "examples/media/run.js",
            "modules": {},
            "classes": {
                "bundle.example.media": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Gruntfile.js": {
            "name": "Gruntfile.js",
            "modules": {},
            "classes": {
                "bundle.Gruntfile": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "doc.js": {
            "name": "doc.js",
            "modules": {},
            "classes": {
                "bundle.doc": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "index.js": {
            "name": "index.js",
            "modules": {
                "bundle": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "../ose/lib/entry/command.js": {
            "name": "../ose/lib/entry/command.js",
            "modules": {
                "ose.data": 1
            },
            "classes": {
                "ose.lib.entry.link": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../ose/lib/entry/index.js": {
            "name": "../ose/lib/entry/index.js",
            "modules": {},
            "classes": {
                "ose.lib.entry": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../ose/lib/entry/master.js": {
            "name": "../ose/lib/entry/master.js",
            "modules": {},
            "classes": {
                "ose.lib.entry.master": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../ose/lib/entry/slave.js": {
            "name": "../ose/lib/entry/slave.js",
            "modules": {},
            "classes": {
                "ose.lib.entry.slave": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../ose/lib/field/object.js": {
            "name": "../ose/lib/field/object.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "../ose/lib/http/content.js": {
            "name": "../ose/lib/http/content.js",
            "modules": {
                "ose.http": 1
            },
            "classes": {
                "ose.lib.http.content": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../ose/lib/http/index.js": {
            "name": "../ose/lib/http/index.js",
            "modules": {},
            "classes": {
                "ose.lib.http": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../ose/lib/peer/here.js": {
            "name": "../ose/lib/peer/here.js",
            "modules": {
                "ose.peer": 1
            },
            "classes": {
                "ose.lib.peer.here": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../ose/lib/peer/index.js": {
            "name": "../ose/lib/peer/index.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "../ose/lib/peer/list.js": {
            "name": "../ose/lib/peer/list.js",
            "modules": {},
            "classes": {
                "ose.lib.peer.list": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../ose/lib/peer/remote.js": {
            "name": "../ose/lib/peer/remote.js",
            "modules": {},
            "classes": {
                "ose.lib.peer.remote": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../ose/lib/peer/rx.js": {
            "name": "../ose/lib/peer/rx.js",
            "modules": {},
            "classes": {
                "ose.lib.peer.rx": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../ose/lib/shard/index.js": {
            "name": "../ose/lib/shard/index.js",
            "modules": {},
            "classes": {
                "ose.lib.shard": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../ose/lib/shard/master.js": {
            "name": "../ose/lib/shard/master.js",
            "modules": {},
            "classes": {
                "ose.lib.shard.master": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../ose/lib/shard/slave.js": {
            "name": "../ose/lib/shard/slave.js",
            "modules": {},
            "classes": {
                "ose.lib.shard.slave": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../ose/lib/space/index.js": {
            "name": "../ose/lib/space/index.js",
            "modules": {},
            "classes": {
                "ose.lib.space": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../ose/lib/space/list.js": {
            "name": "../ose/lib/space/list.js",
            "modules": {},
            "classes": {
                "ose.lib.space.list": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../ose/lib/ws/browser.js": {
            "name": "../ose/lib/ws/browser.js",
            "modules": {},
            "classes": {
                "ose.lib.ws.browser": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../ose/lib/ws/index.js": {
            "name": "../ose/lib/ws/index.js",
            "modules": {},
            "classes": {
                "ose.lib.ws": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../ose/lib/ws/master.js": {
            "name": "../ose/lib/ws/master.js",
            "modules": {},
            "classes": {
                "ose.lib.ws.master": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../ose/lib/ws/node.js": {
            "name": "../ose/lib/ws/node.js",
            "modules": {},
            "classes": {
                "ose.lib.ws.node": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../ose/lib/ws/relay.js": {
            "name": "../ose/lib/ws/relay.js",
            "modules": {},
            "classes": {
                "ose.lib.ws.relay": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../ose/lib/ws/slave.js": {
            "name": "../ose/lib/ws/slave.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "../ose/lib/ws/worker.js": {
            "name": "../ose/lib/ws/worker.js",
            "modules": {},
            "classes": {
                "ose.lib.ws.slave": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../ose/lib/browser.js": {
            "name": "../ose/lib/browser.js",
            "modules": {},
            "classes": {
                "ose.lib.browser": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../ose/lib/cli.js": {
            "name": "../ose/lib/cli.js",
            "modules": {},
            "classes": {
                "ose.lib.cli": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../ose/lib/counter.js": {
            "name": "../ose/lib/counter.js",
            "modules": {},
            "classes": {
                "ose.lib.counter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../ose/lib/index.js": {
            "name": "../ose/lib/index.js",
            "modules": {
                "ose": 1
            },
            "classes": {
                "ose.core": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../ose/lib/kind.js": {
            "name": "../ose/lib/kind.js",
            "modules": {},
            "classes": {
                "ose.lib.kind": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../ose/lib/link.js": {
            "name": "../ose/lib/link.js",
            "modules": {
                "ose.link": 1
            },
            "classes": {
                "ose.lib.link": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../ose/lib/logger.js": {
            "name": "../ose/lib/logger.js",
            "modules": {
                "ose.logger": 1
            },
            "classes": {
                "ose.lib.logger": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../ose/lib/node.js": {
            "name": "../ose/lib/node.js",
            "modules": {},
            "classes": {
                "ose.lib.node": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../ose/lib/plugins.js": {
            "name": "../ose/lib/plugins.js",
            "modules": {
                "ose.plugin": 1
            },
            "classes": {
                "ose.lib.plugins": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../ose/lib/scope.js": {
            "name": "../ose/lib/scope.js",
            "modules": {},
            "classes": {
                "ose.lib.scope": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../ose/lib/wrap.js": {
            "name": "../ose/lib/wrap.js",
            "modules": {
                "ose.wrap": 1
            },
            "classes": {
                "ose.wrap.common": 1,
                "ose.wrap.class": 1,
                "ose.wrap.module": 1,
                "ose.wrap.package": 1,
                "ose.wrap.singleton": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../ose/content.js": {
            "name": "../ose/content.js",
            "modules": {},
            "classes": {
                "ose.content": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../bb/lib/box/content.js": {
            "name": "../bb/lib/box/content.js",
            "modules": {
                "bb.box": 1
            },
            "classes": {
                "bb.lib.box.content": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../bb/lib/box/index.js": {
            "name": "../bb/lib/box/index.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "../bb/lib/box/left.js": {
            "name": "../bb/lib/box/left.js",
            "modules": {},
            "classes": {
                "bb.lib.box.left": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../bb/lib/dialog/action.js": {
            "name": "../bb/lib/dialog/action.js",
            "modules": {
                "bb.dialog": 1
            },
            "classes": {
                "bb.lib.dialog.action": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../bb/lib/dialog/confirm.js": {
            "name": "../bb/lib/dialog/confirm.js",
            "modules": {},
            "classes": {
                "bb.lib.dialog.confirm": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../bb/lib/dialog/index.js": {
            "name": "../bb/lib/dialog/index.js",
            "modules": {},
            "classes": {
                "bb.lib.dialog": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../bb/lib/dialog/info.js": {
            "name": "../bb/lib/dialog/info.js",
            "modules": {},
            "classes": {
                "bb.lib.dialog.info": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../bb/lib/dialog/valueSelector.js": {
            "name": "../bb/lib/dialog/valueSelector.js",
            "modules": {},
            "classes": {
                "bb.lib.dialog.valueSelector": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../bb/lib/pagelet/dashboard.js": {
            "name": "../bb/lib/pagelet/dashboard.js",
            "modules": {
                "bb.pagelet": 1
            },
            "classes": {
                "bb.lib.pagelet.dashboard": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../bb/lib/pagelet/detail.js": {
            "name": "../bb/lib/pagelet/detail.js",
            "modules": {},
            "classes": {
                "bb.lib.pagelet.detail": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../bb/lib/pagelet/entry.js": {
            "name": "../bb/lib/pagelet/entry.js",
            "modules": {},
            "classes": {
                "bb.lib.pagelet.entry": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../bb/lib/pagelet/gesture.js": {
            "name": "../bb/lib/pagelet/gesture.js",
            "modules": {},
            "classes": {
                "bb.lib.pagelet.gesture": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../bb/lib/pagelet/index.js": {
            "name": "../bb/lib/pagelet/index.js",
            "modules": {},
            "classes": {
                "bb.lib.pagelet": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../bb/lib/pagelet/list.js": {
            "name": "../bb/lib/pagelet/list.js",
            "modules": {},
            "classes": {
                "bb.lib.pagelet.list": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../bb/lib/pagelet/listItem.js": {
            "name": "../bb/lib/pagelet/listItem.js",
            "modules": {},
            "classes": {
                "bb.lib.pagelet.listItem": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../bb/lib/widget/button.js": {
            "name": "../bb/lib/widget/button.js",
            "modules": {
                "bb.widget": 1
            },
            "classes": {
                "bb.lib.widget.button": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../bb/lib/widget/checkbox.js": {
            "name": "../bb/lib/widget/checkbox.js",
            "modules": {},
            "classes": {
                "bb.lib.widget.checkbox": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../bb/lib/widget/index.js": {
            "name": "../bb/lib/widget/index.js",
            "modules": {},
            "classes": {
                "bb.lib.widget": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../bb/lib/widget/list.js": {
            "name": "../bb/lib/widget/list.js",
            "modules": {},
            "classes": {
                "bb.lib.widget.list": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../bb/lib/widget/listItem.js": {
            "name": "../bb/lib/widget/listItem.js",
            "modules": {},
            "classes": {
                "bb.lib.widget.listItem": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../bb/lib/widget/search.js": {
            "name": "../bb/lib/widget/search.js",
            "modules": {},
            "classes": {
                "bb.lib.widget.search": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../bb/lib/widget/slider.js": {
            "name": "../bb/lib/widget/slider.js",
            "modules": {},
            "classes": {
                "bb.lib.widget.slider": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../bb/lib/widget/slideswitch.js": {
            "name": "../bb/lib/widget/slideswitch.js",
            "modules": {},
            "classes": {
                "bb.lib.widget.slideswitch": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../bb/lib/widget/toolbar.js": {
            "name": "../bb/lib/widget/toolbar.js",
            "modules": {},
            "classes": {
                "bb.lib.widget.toolbar": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../bb/lib/browser.js": {
            "name": "../bb/lib/browser.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "../bb/lib/index.js": {
            "name": "../bb/lib/index.js",
            "modules": {
                "bb": 1
            },
            "classes": {
                "bb.lib": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../bb/lib/stateObj.js": {
            "name": "../bb/lib/stateObj.js",
            "modules": {
                "bb.stateObj": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "../bb/content.js": {
            "name": "../bb/content.js",
            "modules": {},
            "classes": {
                "bb.content": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../boards/lib/relay/index.js": {
            "name": "../boards/lib/relay/index.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "../boards/lib/relay/socket.js": {
            "name": "../boards/lib/relay/socket.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "../boards/lib/index.js": {
            "name": "../boards/lib/index.js",
            "modules": {
                "boards": 1
            },
            "classes": {
                "boards.lib": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../boards/content.js": {
            "name": "../boards/content.js",
            "modules": {},
            "classes": {
                "boards.content": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../control/lib/din/index.js": {
            "name": "../control/lib/din/index.js",
            "modules": {
                "control.distributor": 1
            },
            "classes": {
                "control.lib.din": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../control/lib/din/pin.js": {
            "name": "../control/lib/din/pin.js",
            "modules": {
                "control.pin": 1
            },
            "classes": {
                "control.lib.din.pin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../control/lib/distributor/index.js": {
            "name": "../control/lib/distributor/index.js",
            "modules": {},
            "classes": {
                "control.lib.distributor": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../control/lib/door/index.js": {
            "name": "../control/lib/door/index.js",
            "modules": {
                "control.room": 1
            },
            "classes": {
                "control.lib.door": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../control/lib/door/pin.js": {
            "name": "../control/lib/door/pin.js",
            "modules": {},
            "classes": {
                "control.lib.door.pin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../control/lib/flowMeter/index.js": {
            "name": "../control/lib/flowMeter/index.js",
            "modules": {},
            "classes": {
                "control.lib.flowMeter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../control/lib/heater/index.js": {
            "name": "../control/lib/heater/index.js",
            "modules": {},
            "classes": {
                "control.lib.heater": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../control/lib/heater/pin.js": {
            "name": "../control/lib/heater/pin.js",
            "modules": {},
            "classes": {
                "control.lib.heater.pin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../control/lib/heater/tariff.js": {
            "name": "../control/lib/heater/tariff.js",
            "modules": {},
            "classes": {
                "control.lib.heater.tariff": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../control/lib/light/index.js": {
            "name": "../control/lib/light/index.js",
            "modules": {},
            "classes": {
                "control.lib.light": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../control/lib/light/pin.js": {
            "name": "../control/lib/light/pin.js",
            "modules": {},
            "classes": {
                "control.lib.light.pin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../control/lib/light/remote.js": {
            "name": "../control/lib/light/remote.js",
            "modules": {
                "control.remote": 1
            },
            "classes": {
                "control.lib.light.remote": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../control/lib/light/switch.js": {
            "name": "../control/lib/light/switch.js",
            "modules": {},
            "classes": {
                "control.lib.light.switch": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../control/lib/pin/commands.js": {
            "name": "../control/lib/pin/commands.js",
            "modules": {},
            "classes": {
                "control.lib.pin.commands": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../control/lib/pin/counter.js": {
            "name": "../control/lib/pin/counter.js",
            "modules": {},
            "classes": {
                "control.lib.pin.counter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../control/lib/pin/din.js": {
            "name": "../control/lib/pin/din.js",
            "modules": {},
            "classes": {
                "control.lib.pin.din": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../control/lib/pin/dout.js": {
            "name": "../control/lib/pin/dout.js",
            "modules": {},
            "classes": {
                "control.lib.pin.dout": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../control/lib/pin/index.js": {
            "name": "../control/lib/pin/index.js",
            "modules": {},
            "classes": {
                "control.lib.pin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../control/lib/pin/light.js": {
            "name": "../control/lib/pin/light.js",
            "modules": {},
            "classes": {
                "control.lib.pin.light": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../control/lib/pin/list.js": {
            "name": "../control/lib/pin/list.js",
            "modules": {},
            "classes": {
                "control.lib.pin.list": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../control/lib/pin/pwm.js": {
            "name": "../control/lib/pin/pwm.js",
            "modules": {},
            "classes": {
                "control.lib.pin.pwm": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../control/lib/pin/switch.js": {
            "name": "../control/lib/pin/switch.js",
            "modules": {},
            "classes": {
                "control.lib.pin.switch": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../control/lib/room/index.js": {
            "name": "../control/lib/room/index.js",
            "modules": {},
            "classes": {
                "control.lib.room": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../control/lib/switch/index.js": {
            "name": "../control/lib/switch/index.js",
            "modules": {},
            "classes": {
                "control.lib.switch": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../control/lib/switch/pin.js": {
            "name": "../control/lib/switch/pin.js",
            "modules": {},
            "classes": {
                "control.lib.switch.socket": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../control/lib/switch/relay.js": {
            "name": "../control/lib/switch/relay.js",
            "modules": {},
            "classes": {
                "control.lib.switch.relay": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../control/lib/activity.js": {
            "name": "../control/lib/activity.js",
            "modules": {},
            "classes": {
                "control.lib.activity": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../control/lib/index.js": {
            "name": "../control/lib/index.js",
            "modules": {
                "control": 1
            },
            "classes": {
                "control.lib": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../control/lib/remote.js": {
            "name": "../control/lib/remote.js",
            "modules": {},
            "classes": {
                "control.lib.remote": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../control/content.js": {
            "name": "../control/content.js",
            "modules": {},
            "classes": {
                "control.content": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../dvb/lib/channel/index.js": {
            "name": "../dvb/lib/channel/index.js",
            "modules": {},
            "classes": {
                "dvb.lib.channel": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../dvb/lib/index.js": {
            "name": "../dvb/lib/index.js",
            "modules": {
                "dvb": 1
            },
            "classes": {
                "dvb.lib": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../dvb/content.js": {
            "name": "../dvb/content.js",
            "modules": {},
            "classes": {
                "dvb.content": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../fs/lib/dir/index.js": {
            "name": "../fs/lib/dir/index.js",
            "modules": {},
            "classes": {
                "fs.lib.dir": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../fs/lib/file/index.js": {
            "name": "../fs/lib/file/index.js",
            "modules": {},
            "classes": {
                "fs.lib.file": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../fs/lib/index.js": {
            "name": "../fs/lib/index.js",
            "modules": {
                "fs": 1
            },
            "classes": {
                "fs.lib": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../fs/content.js": {
            "name": "../fs/content.js",
            "modules": {},
            "classes": {
                "fs.content": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../icecast/lib/radio/index.js": {
            "name": "../icecast/lib/radio/index.js",
            "modules": {},
            "classes": {
                "icecast.lib.stream": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../icecast/lib/index.js": {
            "name": "../icecast/lib/index.js",
            "modules": {
                "icecast": 1
            },
            "classes": {
                "icecast.lib": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../icecast/content.js": {
            "name": "../icecast/content.js",
            "modules": {},
            "classes": {
                "icecast.content": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../media/lib/item/index.js": {
            "name": "../media/lib/item/index.js",
            "modules": {
                "media.history": 1
            },
            "classes": {
                "media.lib.item": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../media/lib/player/commands.js": {
            "name": "../media/lib/player/commands.js",
            "modules": {
                "media.player": 1
            },
            "classes": {
                "media.lib.player.commands": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../media/lib/player/dvb.js": {
            "name": "../media/lib/player/dvb.js",
            "modules": {},
            "classes": {
                "media.lib.player.dvb": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../media/lib/player/index.js": {
            "name": "../media/lib/player/index.js",
            "modules": {},
            "classes": {
                "media.lib.player": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../media/lib/player/playback.js": {
            "name": "../media/lib/player/playback.js",
            "modules": {},
            "classes": {
                "media.lib.player.playback": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../media/lib/player/volume.js": {
            "name": "../media/lib/player/volume.js",
            "modules": {},
            "classes": {
                "media.lib.player.volume": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../media/lib/stream/index.js": {
            "name": "../media/lib/stream/index.js",
            "modules": {
                "media.stream": 1
            },
            "classes": {
                "media.lib.stream": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../media/lib/index.js": {
            "name": "../media/lib/index.js",
            "modules": {
                "media": 1
            },
            "classes": {
                "media.lib": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../media/lib/remote.js": {
            "name": "../media/lib/remote.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "../media/lib/sources.js": {
            "name": "../media/lib/sources.js",
            "modules": {
                "media.source": 1
            },
            "classes": {
                "media.lib.sources": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../media/content.js": {
            "name": "../media/content.js",
            "modules": {},
            "classes": {
                "media.content": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../lirc/lib/lirc/index.js": {
            "name": "../lirc/lib/lirc/index.js",
            "modules": {},
            "classes": {
                "lirc.lib.lirc": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../lirc/lib/index.js": {
            "name": "../lirc/lib/index.js",
            "modules": {
                "lirc": 1
            },
            "classes": {
                "lirc.lib": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../lirc/content.js": {
            "name": "../lirc/content.js",
            "modules": {},
            "classes": {
                "lirc.content": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../pa/lib/dbus/index.js": {
            "name": "../pa/lib/dbus/index.js",
            "modules": {},
            "classes": {
                "pa.lib.dbus": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../pa/lib/dbus/node.js": {
            "name": "../pa/lib/dbus/node.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "../pa/lib/index.js": {
            "name": "../pa/lib/index.js",
            "modules": {
                "pa": 1
            },
            "classes": {
                "pa.lib": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../pa/content.js": {
            "name": "../pa/content.js",
            "modules": {},
            "classes": {
                "pa.content": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../rpi/lib/camera/index.js": {
            "name": "../rpi/lib/camera/index.js",
            "modules": {},
            "classes": {
                "rpi.lib.camera": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../rpi/lib/rpi/index.js": {
            "name": "../rpi/lib/rpi/index.js",
            "modules": {},
            "classes": {
                "rpi.lib.rpi": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../rpi/lib/index.js": {
            "name": "../rpi/lib/index.js",
            "modules": {
                "rpi": 1
            },
            "classes": {
                "rpi.lib": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../rpi/content.js": {
            "name": "../rpi/content.js",
            "modules": {},
            "classes": {
                "rpi.content": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../videolan/lib/dvblast/index.js": {
            "name": "../videolan/lib/dvblast/index.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "../videolan/lib/dvblast/master.js": {
            "name": "../videolan/lib/dvblast/master.js",
            "modules": {},
            "classes": {
                "videolan.lib.dvblast.master": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../videolan/lib/dvblast/node.js": {
            "name": "../videolan/lib/dvblast/node.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "../videolan/lib/vlc/home.js": {
            "name": "../videolan/lib/vlc/home.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "../videolan/lib/vlc/index.js": {
            "name": "../videolan/lib/vlc/index.js",
            "modules": {},
            "classes": {
                "videolan.lib.vlc": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../videolan/lib/vlc/node.js": {
            "name": "../videolan/lib/vlc/node.js",
            "modules": {},
            "classes": {
                "videolan.lib.dvblast": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../videolan/lib/index.js": {
            "name": "../videolan/lib/index.js",
            "modules": {
                "videolan": 1
            },
            "classes": {
                "videolan.lib": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../videolan/content.js": {
            "name": "../videolan/content.js",
            "modules": {},
            "classes": {
                "videolan.content": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../xorg/lib/xorg/index.js": {
            "name": "../xorg/lib/xorg/index.js",
            "modules": {},
            "classes": {
                "xorg.lib.xorg": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../xorg/lib/index.js": {
            "name": "../xorg/lib/index.js",
            "modules": {
                "xorg": 1
            },
            "classes": {
                "xorg.lib": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../xorg/content.js": {
            "name": "../xorg/content.js",
            "modules": {},
            "classes": {
                "xorg.content": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../yoctopuce/lib/hub/index.js": {
            "name": "../yoctopuce/lib/hub/index.js",
            "modules": {},
            "classes": {
                "yoctopuce.lib.meteo": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../yoctopuce/lib/index.js": {
            "name": "../yoctopuce/lib/index.js",
            "modules": {
                "yoctopuce": 1
            },
            "classes": {
                "yoctopuce.lib": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../yoctopuce/content.js": {
            "name": "../yoctopuce/content.js",
            "modules": {},
            "classes": {
                "yoctopuce.content": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../youtube/lib/video/index.js": {
            "name": "../youtube/lib/video/index.js",
            "modules": {},
            "classes": {
                "youtube.lib.video": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../youtube/lib/index.js": {
            "name": "../youtube/lib/index.js",
            "modules": {
                "youtube": 1
            },
            "classes": {
                "youtube.lib": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../youtube/content.js": {
            "name": "../youtube/content.js",
            "modules": {},
            "classes": {
                "youtube.content": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "bundle.media": {
            "name": "bundle.media",
            "submodules": {},
            "classes": {
                "bundle.examples.media.config": 1,
                "bundle.example.media": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "bundle",
            "file": "examples/media/run.js",
            "line": 123,
            "caption": "Media player example application",
            "readme": "This example is an stand-alone application based on\nthe OSE framework, showcasing some of its principles and\ncapabilities. This application works as a currently half-featured\nmedia player and remote control on Linux boxes. The example\napplication has the following features:\n\n- Node.js backend\n- Control via HTML5 frontend instances\n- Near-realtime synchronization among all front- and backend\n  instances\n- Keyboard and pointer remote control using xdotool\n- Playback of different media using VLC\n- Predefined media streams\n- Icecast directory search and playback\n<!--- - DVB sources -->\n- Youtube search and playback\n- Local files playback\n- Playback from history\n<!--- - IR remote control using LIRC -->\n\nOther example applications consisting of multiple instances working\nas a single whole are coming.",
            "description": "## Prerequisites\n\nTODO: Check all prerequisites\n\nThe main prerequisite is a working installation of a recent\ninstallation of\n[Node.js](https://github.com/joyent/node/wiki/installing-node.js-via-package-manager)\n(>= 0.10).\n\nOn Debian Jessie, you can install the default package:\n\n    sudo apt-get install nodejs\n\nOn Raspbian, install Node.js by doing:\n    wget http://node-arm.herokuapp.com/node_latest_armhf.deb\n    sudo dpkg -i node_latest_armhf.deb\n\nTo work fully, the example depends on:\n\n- PulseAudio configured with the D-Bus control interface\n- Python 3\n- The libdbus-1-dev package or its equivalent for your distribution\n- VLC\n<!--- - dvblast -->\n<!--- - LIRC -->\n\nIf you run Debian Jessie, just run:\n\n    sudo apt-get install pulseaudio python3 libdbus-1-dev vlc <!--- dvblast lirc -->\n\n\nTo enable the dbus control interface, do:\n\n    pactl load-module module-dbus-protocol\n\n\n## Installation\n\nThe easiest way of getting a working OSE installation is to install\nthe [ose-bundle] package:\n\nFrom shell at your home directory run:\n\n    npm install ose-bundle\n\n\n\"ose-bundle\" package contains all official ose packages as its dependencies.\n\n\n## Getting it to run\n\nTo start the example OSE application, change to the installation\ndirectory and execute the startup script from an X.Org session. To\nrun the example from outside an X.Org session (in a console or\nthrough ssh), export the display variable in the shell:\n\n    export DISPLAY=\":0.0\"\n\nTo start an application from shell:\n\n    cd node_modules/ose-bundle/examples/media\n    ./run.js\n\nTo access the [HTML5 frontend], open the following URL in [supported browser].\n\n    http://localhost:4430\n\n\nConfiguration\n\nAll configuration files are self-explanatory or documented in the code.\n\n- The startup script is stored in `run.js`.\n- The basic configuration is stored in `config.js`.\n- To configure predefined media streams, edit `streams.js`.\n<!--- - To configure DVB sources, edit `dvb.js`. -->\n<!--- - To configure IR remote behaviour, edit `lirc.js`. -->",
            "tag": "main",
            "itemtype": "main"
        },
        "bundle": {
            "name": "bundle",
            "submodules": {
                "bundle.media": 1
            },
            "classes": {
                "bundle.examples.media.config": 1,
                "bundle.example.media": 1,
                "bundle.Gruntfile": 1,
                "bundle.doc": 1,
                "ose.lib.entry.link": 1,
                "ose.lib.entry": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "../ose/lib/entry/index.js",
            "line": 14,
            "caption": "Open Smart Environment Bundle",
            "readme": "This package wraps all official OSE packages, contains examples and\nallows documentation building using YUIDoc.\n\nThe main advantage of OSE is the easy creation of applications\nconsisting of multiple instances working as a single whole. The\nobjective is to develop an all-encompassing personal mesh running\nvarious devices including HTPCs, phones, tablets, workstations,\nservers, Raspberry PIs, home automation gadgets, drones etc.",
            "getting_started": "To get started with OSE, refer to the [Media player example\napplication]. You can read the entire OSE documentation [here](\nhttp://opensmartenvironment.github.io/doc).",
            "getting_started_link": "To get started with OSE, refer to the [ose-bundle] package and\n[Media player example application]. You can read the entire OSE\ndocumentation [here]( http://opensmartenvironment.github.io/doc).",
            "contributions": "To get started contributing or coding, it is good to read about the\ntwo main npm packages [ose] and [ose-bb].\n\nThis software is in the pre-alpha stage. At the moment, it is\npremature to file bugs. Input is, however, much welcome in the form\nof ideas, comments and general suggestions.  Feel free to contact\nus via\n[github.com/opensmartenvironment](https://github.com/opensmartenvironment).",
            "status": "- Pre-alpha stage (insecure and buggy)\n- Unstable API\n- Gaps in the documentation\n- No test suite\n\nThis is not yet a piece of download-and-use software. Its important\nto understand the basic principles covered by this documentation.\n\nUse of this software is currently recommended only for users that\nwish participate in the development process (see Contributions).\n\nTODO: Make \"Contributions\" a link",
            "license": "This software is licensed under the terms of the [GNU GPL version\n3](../LICENCE) or later",
            "documentation": "# Open Smart Environment documentation\n\n## State of documentation\nThis documentation is currently under construction and being\ncontinuously improved. Links may be broken and information\nincomplete or erroneous.\n\n\n## Packages and components\nOSE documentation is compiled from source files of all official OSE\nnpm packages using YUIDoc.\n\nPackages are listed in the sidebar.\n\nEach package consists of components. Component is some logical\nconcept coded into modules. Each package description contains basic\ninformation about the package, its components and modules not\nassigned to any component.\n\nEach component description contains basic information about the\ncomponent and its modules.\n\n\n## Modules\nThe module view is a reference of methods, properties and events\nprovided by the module.\n\nA module can be one of the following:\n\n- class definition\n- singleton\n- class or singleton extension\n- simple module with exported methods and properties\n\nIn the module view, the sidebar contains lists of methods,\nproperties and events\n\nDue to a technical limitation of YUIDocs, periods (\".\") are used\ninstead of slashes (\"/\") in module names (see [issue\nNo. 165](https://github.com/yui/yuidoc/issues/165)).",
            "itemtype": "main"
        },
        "ose.data": {
            "name": "ose.data",
            "submodules": {},
            "classes": {
                "ose.lib.entry.link": 1,
                "ose.lib.entry": 1,
                "ose.lib.entry.master": 1,
                "ose.lib.entry.slave": 1,
                "ose.lib.shard": 1,
                "ose.lib.shard.master": 1,
                "ose.lib.shard.slave": 1,
                "ose.lib.space": 1,
                "ose.lib.space.list": 1,
                "ose.lib.kind": 1,
                "ose.lib.scope": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "ose",
            "namespace": "",
            "file": "../ose/lib/scope.js",
            "line": 11,
            "caption": "Data model",
            "readme": "The data model of the framework is designed so that individual\ninstances of OSE hold subsets of the data and together create a\nsingle whole.\n\nData partitions are called [shards]. Basic data units contained by\n[shards] are called [entries].\n\nEach [entry] is of a certain [kind]. [Kinds] define the properties\nand behaviour of [entries]. Kinds are namespaced using [scopes].\n\nEach [shard] belongs to a [space] that act as the shard's\nnamespace. Each shard is tied to [scope] and can contain only\nentries of kinds from that [scope].\n\nKind hierarchy:\n* scope\n  * kind\n\nData partitioning hierarchy:\n* space\n  * shard\n    * entry\n\nExample:\n\nThe `reading.light` is an entry of the kind `light`, the `light`\nkind belongs to the `control` scope, and the `reading.light` entry\nis saved in the shard `living.room`, which belongs to the space\n`my.house`.",
            "description": "## Commands\nIt is possible to send commands to individual [entries]. Each\ncommand is delivered to the [home] of an [entry]. Commands consist\nof a command name and optional data. A command can be a request for\ndata or to establish a new [link].\n\nCommand handlers can be registered for a [kind] with an `on()`\nmethod call. The [Kind] class is not an [Event Emitter] descendant.\nIn command handler code, the target `entry` can be accessed in\n`this.entry`.\n\nExample:\n    TODO",
            "planned": "- Data persistency (LevelDB ?)\n- Data encryption\n- Sharing and authorization",
            "aliases": "command commands entryCommand entryCommands commandHandler commandHandlers",
            "tag": "main",
            "itemtype": "main"
        },
        "ose": {
            "name": "ose",
            "submodules": {
                "ose.data": 1,
                "ose.http": 1,
                "ose.peer": 1,
                "ose.link": 1,
                "ose.logger": 1,
                "ose.plugin": 1,
                "ose.wrap": 1
            },
            "classes": {
                "ose.lib.entry.master": 1,
                "ose.lib.entry.slave": 1,
                "ose.lib.http.content": 1,
                "ose.lib.http": 1,
                "ose.lib.peer.here": 1,
                "ose.lib.peer.list": 1,
                "ose.lib.peer.remote": 1,
                "ose.lib.peer.rx": 1,
                "ose.lib.shard": 1,
                "ose.lib.shard.master": 1,
                "ose.lib.shard.slave": 1,
                "ose.lib.space": 1,
                "ose.lib.space.list": 1,
                "ose.lib.ws.browser": 1,
                "ose.lib.ws": 1,
                "ose.lib.ws.master": 1,
                "ose.lib.ws.node": 1,
                "ose.lib.ws.relay": 1,
                "ose.lib.ws.slave": 1,
                "ose.lib.browser": 1,
                "ose.lib.cli": 1,
                "ose.lib.counter": 1,
                "ose.core": 1,
                "ose.lib.kind": 1,
                "ose.lib.link": 1,
                "ose.lib.logger": 1,
                "ose.lib.node": 1,
                "ose.lib.plugins": 1,
                "ose.lib.scope": 1,
                "ose.wrap.common": 1,
                "ose.wrap.class": 1,
                "ose.wrap.module": 1,
                "ose.wrap.package": 1,
                "ose.wrap.singleton": 1,
                "ose.content": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "../ose/content.js",
            "line": 11,
            "description": "## Platforms\n\nWe are developing the OSE framework on the following platforms and\nbrowsers:\n- Node.js (>0.10) running on Debian Jessie and Raspbian\n- recent versions of Firefox\n- recent versions of Chromium/Chrome\n\nIt, however, probably also runs on other recent Linux\ndistributions.",
            "caption": "Open Smart Environment framework",
            "readme": "Lightweight and extensible framework for development and rapid\nprototyping of modern applications based on Node.js and HTML5.\n\nThe framework is created as a base for an OSE application that\nmanages the physical and virtual environment that a user lives\nin. It brings the ability to easily monitor and control the\nenvironment, and to automate tasks.",
            "features": "- Multi-instance architecture\n- Transparent network communication via WebSockets\n- Near real-time synchronization\n- Code sharing between Node.js and web browsers\n- Partitioned data model\n- Extensible via npm packages",
            "planned": "TODO\n- User-based authentication\n- Automate backups and deployment\n- Deeper integration into Firefox OS and other environments\n- Socialization\n- Integration with other Free Software\n- Integration with on-line services",
            "keywords": "TODO\njavascript, nodejs, framework, webapp, distributed",
            "aliases": "framework oseFramework supportedBrowser supportedBrowsers",
            "itemtype": "main"
        },
        "ose.http": {
            "name": "ose.http",
            "submodules": {},
            "classes": {
                "ose.lib.http.content": 1,
                "ose.lib.http": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "ose",
            "namespace": "",
            "file": "../ose/lib/http/index.js",
            "line": 29,
            "caption": "HTTP server",
            "readme": "This component provides an HTTP server for OSE. It responds to HTTP\nrequests and provides data needed to run OSE instance in the\nbrowser. Each OSE package that needs to run in the browser creates\none `ose/lib/http/content` class instance and defines which files\nwill be provided to the browser.\n\nIt also handles incoming WebSocket requests from other OSE\ninstances and relays them to the [peers component].",
            "tag": "main",
            "itemtype": "main"
        },
        "ose.peer": {
            "name": "ose.peer",
            "submodules": {},
            "classes": {
                "ose.lib.peer.here": 1,
                "ose.lib.peer.list": 1,
                "ose.lib.peer.remote": 1,
                "ose.lib.peer.rx": 1,
                "ose.lib.ws.browser": 1,
                "ose.lib.ws": 1,
                "ose.lib.ws.master": 1,
                "ose.lib.ws.node": 1,
                "ose.lib.ws.relay": 1,
                "ose.lib.ws.slave": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "ose",
            "namespace": "",
            "file": "../ose/lib/ws/worker.js",
            "line": 8,
            "caption": "Peers",
            "readme": "The system, which is based on the OSE framework, consist of one or\nmore configured instances, called OSE instances. An OSE instance is\nidentified by a unique `name` an can run in Node.js or in a web\nbrowser.\n\nFrom the point of view of an OSE instance, a peer is another OSE\ninstance. Two peers can communicate with each other using the\nWebSocket protocol. Peers can be accessed directly, when a\nWebSocket channel exists, or indirectly, by using another peer as a\ngateway.\n\nThis component allows the following communication between OSE\ninstances:\n\n- Obtaining [entries] and views of entries.\n- Synchronization of [states of entries] in near real-time.\n- Sending of commands to entries.\n- Establishing transparent, asynchronous bidirectional [links]\n  between entries.",
            "description": "## Peer-to-peer relationships\nRemote peers of an OSE instance can enter the following connection\nstates:\n\n- near: peer reachable directly through a WebSocket\n- far: peer not reachable directly, but through a gateway \"near\"\n  (or chain of \"nears\")\n- unreachable: a peer that can't be reached\n\nIn addition, each OSE instance creates a [here peer] object\ndescribing itself.\n\nFrom the point of view of a [shard], a `home` is a [peer] to which\nits [entries] logically belong. The `home` is where commands are\nexecuted.\n\n\n## Establishing a peer-to-peer channel\n\nWhen a communication channel between two OSE instances is\nestablished, the following steps are taken:\n\n1. The client Peer instance calls the `connect()` method.\n  - A [WebSocket wrapper] is created.\n  - A WebSocket native object is created and connects to `peer.url`.\n\n2. The server verifies incoming request\n  - When there is no Peer instance for the client OSE instance, one is created.\n\n3. Server opens a WebSocket channel\n  - [WebSocket wrapper] is created.\n\n4. Handshake between peers\n\n5. Both Peer instances assign the `rxData()` method to the `rx`\n   property of [WebSocket wrapper] instance.\n   - After this step, the client and server become equal.\n\n\n## Messages\nFor standard peer to peer communication, data blocks, sent through\nWebSockets, are called \"messages\". Each message has a type.\nDepending on the message type, the appropriate method from [peer rx\nhandlers] is called to handle the incoming message.",
            "aliases": "peers homeOseInstance homeInstance oseInstance home peer-to-peer peersComponent",
            "tag": "main",
            "itemtype": "main"
        },
        "ose.link": {
            "name": "ose.link",
            "submodules": {},
            "classes": {
                "ose.lib.link": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "ose",
            "namespace": "",
            "file": "../ose/lib/link.js",
            "line": 145,
            "caption": "Sockets and links",
            "readme": "The framework makes it possible to easily create links between\n`entries` to allow communication regardless of whether it is\nrealized within one OSE instance or transparently across multiple\nOSE instances. A link is a virtual bidirectional communication\nchannel between two sockets. Link cannot exist without an active\n[peer-to-peer] connection channel between sockets. When some\nWebSocket channel is closed, an `error` handler is called on both\nends of links using such channel and links are closed.\n\nEach socket is an object with handlers. A socket is either a client\nsocket or a response socket. To establish a link, a client socket\nmust first be created. The client socket must then be delivered to\nthe master entry's handler. This handler must then create a\ncorresponding response socket and open a link.  After the link is\nestablished, the client and response sides become equal.",
            "description": "## Example\n\nBelow is a real example of how a link is created and works between\nthe [light entry] and the [switch entry]. The [light entry] has a\ncontrolling [switch entry] identification assigned in its\n`entry.data.switch` value. Based on this object, the [light entry]\ncalls its `postTo()` method that sends a `relay` command to the\n[switch entry] together with the client socket. The [switch entry]\nthen creates a response socket and links the two sockets by calling\n`Ose.link.open()`. The `open()` handler of the client socket is\nthen invoked. From now on, the switch response socket relays\n`press`, `release`, `hold` and `tap` events to the client socket of\nthe [light entry].\n\nThis example is composed of snippets from the following files:\n\n- Light entry kind: [ose-control/lib/light/index.js]\n- Light client socket class: [ose-control/lib/light/switch.js]\n- Switch entry kind: [ose-control/lib/switch/index.js]\n- Switch response socket class: [ose-control/lib/switch/relay.js]\n\nCreation of client socket – [ose-control/lib/light/index.js]\n\n    // Create a client socket class\n    var Switch = M.class('ose-control/lib/light/switch');\n\n    ...\n    // Create a client socket when an entry is initializing\n    new Switch(entry);\n    ...\n\nSend a command to the [switch entry] after the client socket is initialized – [ose-control/lib/light/switch.js]\n\n    ...\n    that.entry.postTo(\n      that.entry.data.switch,\n      'relay',\n      null,\n      that\n    );\n    ...\n\nCreate a switch response socket in [switch entry] `relay` command handler – [ose-control/lib/switch/index.js]\n\n    // Creates response socket class\n    var Relay = M.class('ose-control/lib/switch/relay');\n    ...\n    // Registers a relay handler in the switch entry kind\n    this.on('relay', relay);\n    ...\n    // Handler body\n    function relay(req, socket) {\n      // Creates response socket\n      new Relay(this.entry, socket);\n    };\n\nOpen the link after response socket is initialized – [ose-control/lib/switch/relay.js]\n\n    // Open link; `this` is the response socket, and `socket` is the\n    // client socket.  On both sides, the other socket is assigned to\n    // the `link` property (e.g. `client.link = response`).\n    Ose.link.open(this, socket, resp);\n\nThe client's `open()` handler is called – [ose-control/lib/light/switch.js].\n\n    exports.open = function(req) {\n      ...\n    };\n\n\n## Handlers\nEach `socket` is an object with handlers attached to it. A handler\nis a method directly assigned to a socket object (or a prototype\nchain) with the handler's `name` as the socket object's key. A\nsocket is not an `EventEmitter`.\n\nHandlers are called directly via `this.link.handler(data)`, where\n`handler` is the handler's name and `this` is the the other socket\nof the link.\n\nThere are some special handlers:\n\n- `open([data])`:<br />\n  Invoked on the client side when the response calls\n  `Ose.link.open(resp, client, data)`. On both sides, the other\n  socket is assigned to the `link` property (e.g. `client.link =\n  response`). There is no `open()` handler on the response side.\n\n- `close([data])`:<br />\n  Invoked when the link is gracefully closed by\n  `Ose.link.close(socket, data)`. Can be called instead of\n  `Ose.link.open()` from the response side. In such case the link\n  is not opened and acts only as a callback. `Ose.link.close()`\n  destroys the link and deletes the `link` property of both\n  sockets.\n\n- `error(err)`:<br />\n  Invoked in the case of an error with `Ose.link.error(socket,\n  err)`. `err` should be an instance of `Error`. `Ose.link.error()`\n  destroys the link and deletes the `link` property of both sides.\n  An error handler is invoked, for example, when the underlying\n  WebSocket channel is closed.\n\n## Network transparency\n\nTODO",
            "todo": [
                "- Resolve LID conflicts"
            ],
            "aliases": "link links socket sockets clientSocket responseSocket",
            "tag": "main",
            "itemtype": "main"
        },
        "ose.logger": {
            "name": "ose.logger",
            "submodules": {},
            "classes": {
                "ose.lib.logger": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "ose",
            "namespace": "",
            "file": "../ose/lib/logger.js",
            "line": 63,
            "caption": "Logging and error handling",
            "readme": "To log errors and messages, each module should at first create `M.log` instance by calling\n`Ose.logger(context)`. The context is an identifier of the logging\nnamespace. `Ose.logger()` either returns an existing `M.log`\ninstance for the namespace or creates a new one. Once created, the logger can be used to log messages.\n\nError handling tries to adhere to the production practices outlined\nby Joyent ([Error Handling in\nNode.js](http://www.joyent.com/developers/node/design/errors)).",
            "description": "## Usage\n\nExample module :\n\n    'use strict';\n\n    var Ose = require('ose');\n    var M = Ose.module(module);\n    ...\n    M.log.info('Processing');\n\nTo create an error, it is possible to use `Ose.error()`, which\nappends an optional `subject` and `data` to the error object. the\n`subject` and `data` make it easier to analyse problems. If an\nerror is logged, `subject.identify()`, if it is defined, is used\nto display subject identification.\n\nExample:\n\n    var err = Ose.error(subject, 'Something has gone terribly wrong.', arguments);\n    ...\n\n    // To log an error:\n    M.log.error(err);\n\n    // or to use an error in callback:\n    cb(err);\n\n    // or to throw an error:\n    throw err;\n\n    // or send an error to a link:\n    Ose.link.error(socket, err);\n\nWhen calling any callback with an error response, sending an error to a link, or throwing an exception, `Error` instance created by `Ose.error()` should be used.",
            "aliases": "error logging"
        },
        "ose.plugin": {
            "name": "ose.plugin",
            "submodules": {},
            "classes": {
                "ose.lib.plugins": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "ose",
            "namespace": "",
            "file": "../ose/lib/plugins.js",
            "line": 112,
            "caption": "Plugins",
            "readme": "To run, each `OSE instance` requires a main configuration object\n(JavaScript object or JSON). Each main configuration object\nproperty contains configuration data for one plugin. A plugin can\nbe a class, singleton or module.\n\nAll plugins are registered to the `Ose.plugins` singleton. This\nsingleton prepares configurations for the OSE browser instances as\npart of the response to HTTP requests for `index.html`.\n\nDuring `OSE instance` startup, the following steps are carried out:\n1. Setup of the framework\n2. Preparation of plugins\n3. Configuration of plugins\n4. Asynchronous processing of plugin dependencies\n\nAfter all dependencies are processed, the `initialized` event is\nemitted by `Ose.plugins`.",
            "description": "## OSE framework setup\n\nBasic classes and singletons are set up depending on the specified\nruntime environment (browser or server).\n\n\n## Preparation of plugins\n\nEach property of the main configuration object contains the\nconfiguration of a single OSE plugin. The `id` property of each\nplugin configuration specifies the module to be loaded with\n`require()`. If the `id` property is omitted, the key of the plugin\nconfiguration is taken as the module id.\n\nAny CommonJS module can be a plugin. If a module defines a class,\nits instance is created without parameters and becomes a plugin.\nIf a module defines a singleton, it gets initialized without any\narguments. Modules not defining a class or singleton are simply\nrequired.\n\n\n## Configuration of plugins\n\nAfter all plugins are created, individual plugins are configured\nusing the `plugin.config(data)` method, where `data` is taken from\nthe main configuration object for each plugin.\n\nThe `config` method, if it exists, is called on every prototype in\na plugin prototype chain. It must not call the ancestor `config()`\nmethod.\n\nDuring this step, dependencies can be registered by calling\n`ose.plugins.addDependency()`.\n\n\n## Dependencies\n\nEach dependency is defined by a method with a callback and an\noptional 'test' parameter.\n\nExample:\n\nTODO addDependency(dependency, test) ...\n\nTODO dependency(cb)...\n\nWhen a dependency is processed, it must call the provided\ncallback. When the processing of one dependency ends, the next\ndependency whose `test` method returns `TRUE` is found and\nprocessed. Other dependencies can be added during this step. When\nthere are no more dependencies left, the `initialized` event is\nemitted by `Ose.plugins`.\n\nTo run some code after all plugins are initialized, register a\nmethod via `Ose.plugins.on('initialized', <method>)` during the\n\"configuration\" or \"dependencies\" phase.\n\n\n## Extending\n\nIt is easy to extend OSE by creating a new npm package and adding\nan empty object with the package name as a key to the main\nconfiguration object of an [OSE instance].\n\nTo use some configuration, define the `config()` method on the\npackage's main `module.exports` and provide some configuration data\nto the package configuration property of the main configuration\nobject. The [Plugins component] then initializes the new package as\nanother OSE plugin during startup of an [OSE instance].\n\nTODO: example",
            "aliases": "osePlugin oseConfig pluginsComponent",
            "tag": "main",
            "itemtype": "main"
        },
        "ose.wrap": {
            "name": "ose.wrap",
            "submodules": {},
            "classes": {
                "ose.wrap.common": 1,
                "ose.wrap.class": 1,
                "ose.wrap.module": 1,
                "ose.wrap.package": 1,
                "ose.wrap.singleton": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "ose",
            "namespace": "",
            "file": "../ose/lib/wrap.js",
            "line": 480,
            "caption": "Classes and singletons",
            "readme": "This component facilitates the usage of classes or singletons with\nsimple code sharing and runtime specific behaviour by the browser\nand Node.js environments. This makes it possible to use\nprototypal inheritance to create classes and singletons and to mix\nin modules into class prototypes and singletons.",
            "description": "## Module wrapping\n\nThe creation of classes and singletons is based on the CommonJS\nModules spec. Each class or singleton is defined within its own\nmodule.\n\nTo create a class or singleton, you first need to wrap the module\ncontaining the class or singleton definition by calling one of the\nfollowing:\n\n- `Ose.class(module)`.\n- `Ose.singleton(module)`.\n- `Ose.package(module)`.\n- `Ose.module(module)`.\n\nExample:\n\n    // Module containing class definiton.\n    'use strict';\n\n    // Require OSE.\n    var Ose = require('ose');\n    // Create and return wrap instance\n    var M = Ose.class(module);\n    ...\n\nThe `Ose` variable gives access to global OSE functionalities.  The\n`M` variable contains the module wrapper and gives access to\nfunctionalities relative to the module.\n\nIMPORTANT:\n\nEach time a module is wrapped using `Ose.class`, `Ose.singleton` or\n`Ose.package` (ie. not `Ose.module`), the wrapper adds the `M`\nproperty to `module.exports`. It is not allowed to overwrite this\nproperty. The `M` property is read-only and non-configurable. It is\nbetter not to overload this property.\n\n## Classes\n\nA class is a function used as a class constructor with a prototype.\n\nTo use a class, you need to carry out three steps:\n1. Prepare a module containing a class definition.\n2. Obtain a class constructor.\n3. Create a new object.\n\nFirst, the class needs to be prepared in the module containing the\nclass definition by calling `Ose.class(module, [constructor],\n[super])`. The `constructor` is an optional class constructor\nmethod. If it is not defined, it gets created automatically. The\n`super` parameter can be `undefined`, a class constructor or a\nclass name. It is not possible to inherit from singletons.\n\nExample module with class preparation::\n\n    // Module \"ose/lib/entry\"\n    'use strict';\n\n    // Require OSE\n    var Ose = require('ose');\n\n    // Wrap module and specifies a class with a constructor\n    // function `C` and \"EventEmitter\" as a super-class.\n    var M = Ose.class(module, C, 'EventEmitter');\n\n    // Class constructor\n    function C(...) {\n      // Call super constructor\n      M.super.call(this);\n      ...\n    }\n\n    // Add properties of the class' prototype to the `exports`\n    // object:\n\n    // Define property.\n    exports.config = function(name, data) {\n      ...\n    };\n\n    // Define another property\n    exports.identify = function() {\n      return {\n        space: this.shard.space.name,\n        shard: this.shard.sid,\n        entry: this.id\n      };\n    };\n\n\nThe second step is to obtain a class constructor with its\nprototype. This step is carried out when the class is first\naccessed by calling `M.class('ose/lib/entry')`. Multiple calls to\n`M.class('ose/lib/entry')` return the same, already created\nclass. When called for the first time, the class prototype is\ncreated from module exports and optional mixins. If the class has\nan ancestor, the constructor should usually call the super\nconstructor (see example above). If a class is defined without a\nconstructor, the constructor is created.\n\nThe last step is to create a new object based on the class.\n\nClass usage example:\n\n    // Some other module ...\n    'use strict';\n\n    // Require OSE\n    var Ose = require('ose');\n    // Wrap module\n    var M = Ose.module(module);\n\n    // Obtain class constructor (second step).\n    var Entry = M.class('ose/lib/entry');\n\n    ...\n\n    // Create new object as an Entry instance (third step).\n    entry = new Entry(shard, kind);\n\n    ...\n\nThere is a built-in class named **EventEmitter**. To use this\nclass, pass `'EventEmitter'` to the `class()` method (see the\nexamples above). In the browser environment, the\n[\"wolfy87-eventemitter\"](https://github.com/Wolfy87/EventEmitter)\npackage is used.\n\nTo access the `module.exports` object that is wrapped and prepared\nas a class, call the standard `require('ose/lib/entry')`\nmethod. This call returns the original `module.exports` object.\n\nTo extend any class, use the following example:\n\n    // Require OSE\n    var Ose = require('ose');\n    // Wrap module\n    var M = Ose.module(module);\n\n    // Obtain Entry class\n    var Entry = M.class('ose/lib/entry');\n\n    // Add new method to entry class prototype\n    Entry.prototype.newMethod = function() {...};\n\nChanging the prototype of a class alters all its instances and\ndescendants, even those already created.\n\n## Singletons\n\nEach singleton is an object. There are two types of singletons. The\nfirst initializes itself, and the second is initialized outside the\nsingleton definition.\n\nIMPORTANT: Every singleton must always exist in only one instance\nwithin a single running instance of OSE. The use of npm can result\nin mixing multiple installations of packages using singletons\nwithin a single OSE instance. This situation must be avoided.\n\nLike the creation of a class, the creation of a singleton is a\nthree-step process:\n\n1. Prepare a module containing the singleton's definition and\n   create the singleton\n2. Obtain singleton initialization method\n3. Initialize and obtain the singleton\n\nExample module with self-initializing singleton::\n\n    // Require OSE\n    var Ose = require('ose');\n    // Wrap module as a singleton\n    var M = Ose.singleton(module, I, 'EventEmitter');\n    // Initialization of the singleton\n    exports = M.init();\n\n    // Singleton initialization\n    function I() {\n      // Call super constructor\n      M.super.call(this);\n      ...\n    }\n\n    // Properties of the singleton are defined in the `exports` variable:\n\n    exports.identify = function() {\n      return {\n        id: this.id\n      };\n    };\n\n    exports.getId = function() {\n      return id;\n    };\n\n    ...\n\nExample module without singleton self-initialization:\n\n    // Require OSE\n    var Ose = require('ose');\n    // Wrap module as a singleton\n    var M = Ose.singleton(module, I, 'EventEmitter');\n    // Initialization of the singleton\n    exports = M.exports;\n    ...\n\nExample module with separate singleton initialization:\n\n    // Some other module ...\n    'use strict';\n\n    // Require OSE\n    var Ose = require('ose');\n    // Wrap module\n    var M = Ose.module(module);\n\n    ...\n\n    // Obtain singleton initialization (second step)\n    var init = M.singleton('ose/lib/peer/list');\n\n    // Initialize and obtain singleton (third step)\n    var result = init(arg);\n\n    // Or the second and third step together without the init\n    // variable:\n    var result = M.singleton('ose/lib/peer/list')(arg);\n\n    ...\n\nTo access or extend any initialized singleton, use standard `require`:\n\n    // Module changing singleton.\n    'use strict';\n\n    // Require OSE.\n    var Ose = require('ose');\n\n    // Obtain singleton.\n    var result = require('ose/lib/id');\n\n    // Add new method to the singleton.\n    result.newMethod = function() {...};\n\nThe singleton can be changed before it is initialized. If this is\ndone, it is possible that the change will be overwritten by mixing\nother modules during singleton initialization.\n\n\n## Mixins\n\nIt is possible to mix another module into a class prototype or\nsingleton. To do that, use the `append()` or `prepend()` methods of\nthe `wrap` object.\n\nExample:\n\n    // Some module\n    'use strict';\n    // Require OSE\n    var Ose = require('ose');\n\n    // Wrap module\n    var M = Ose.class(module, C, 'EventEmitter');\n\n    // Prepend a module\n    M.prepend('someModuleName')\n    // Append a module depending on the runtime.\n    M.append('runtime')\n\nThe `append()` or `prepend()` methods supports call chaining. Both\nmethods accept a module name or array of module names. Properties\nto a class prototype or singleton are mixed in the second step of\nclass or singleton creation. Conflicting properties are overwritten\nin the following order: Last prepended, prepended, module.exports,\nfirst appended, appended.\n\nIt is possible to use the following predefined values as module names:\n* 'browser' – If in the browser environment, use the `browser.js`\n   module from the same directory.\n* 'node' – If in the Node.js environment, use the `node.js`\n   module from the same directory.\n* 'runtime' – Use either the `browser.js` or `node.js` module\n   depending on the environment.\n\nIt is possible to use relative paths as module names.\n\n## Relative paths\nTODO\n\nA class or singleton is identified by its module\n(e.g. `ose/lib/entry`).",
            "aliases": "class classes singleton singletons eventEmitter super",
            "tag": "main",
            "itemtype": "main"
        },
        "bb": {
            "name": "bb",
            "submodules": {
                "bb.box": 1,
                "bb.dialog": 1,
                "bb.pagelet": 1,
                "bb.widget": 1,
                "bb.stateObj": 1
            },
            "classes": {
                "bb.lib.box.content": 1,
                "bb.lib.box.left": 1,
                "bb.lib.dialog.action": 1,
                "bb.lib.dialog.confirm": 1,
                "bb.lib.dialog": 1,
                "bb.lib.dialog.info": 1,
                "bb.lib.dialog.valueSelector": 1,
                "bb.lib.pagelet.dashboard": 1,
                "bb.lib.pagelet.detail": 1,
                "bb.lib.pagelet.entry": 1,
                "bb.lib.pagelet.gesture": 1,
                "bb.lib.pagelet": 1,
                "bb.lib.pagelet.list": 1,
                "bb.lib.pagelet.listItem": 1,
                "bb.lib.widget.button": 1,
                "bb.lib.widget.checkbox": 1,
                "bb.lib.widget": 1,
                "bb.lib.widget.list": 1,
                "bb.lib.widget.listItem": 1,
                "bb.lib.widget.search": 1,
                "bb.lib.widget.slider": 1,
                "bb.lib.widget.slideswitch": 1,
                "bb.lib.widget.toolbar": 1,
                "bb.lib": 1,
                "bb.content": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "../bb/content.js",
            "line": 11,
            "description": "## Initialization\n\nWhen the browser sends an HTML request to a backend (Node.js) OSE\ninstance, this instance responds by generating and providing\nindex.html. The `<head>` of the index.html contains `<script>` and\n`<style>` tags. Most of these scripts are shared between Node.js\nand the browser environments. The `<body>` contains a single\n`<script>` that loads the application.",
            "caption": "Open Smart Environment HTML5 frontend",
            "readme": "OSE package providing an HTML5 user interface based on [Firefox OS\nBuilding Blocks](http://buildingfirefoxos.com/) using\n[jQuery](http://www.jquery.com).\n\nEach browser page (tab) displaying the OSE frontend is an [OSE\ninstance]. As part of the base [OSE plugin] configuration, a\n[peer], representing the backend OSE instance, is created and\nconnected to.\n\nThe connection is realized via a WebSocket in a standard OSE\n[peer-to-peer] way. All information needed for displaying requested\ncontent is exchanged through this WebSocket channel. After a\nsuccessful connection is established, content is displayed using\ndynamic injection into the `<body>`.",
            "todo": [
                "The frontend is made to be displayed as a webpage or Firefox OS\nwebapp (currently only hosted)."
            ],
            "features": "- HTML5 user interface optimized for phones and tablets\n- Own widgets based on [Firefox OS Building\n  Blocks](http://buildingfirefoxos.com/)\n- Touchscreen gesture support using\n  [Hammer.js](http://eightmedia.github.io/hammer.js)",
            "aliases": "oseUi HTML5frontend",
            "itemtype": "main"
        },
        "bb.box": {
            "name": "bb.box",
            "submodules": {},
            "classes": {
                "bb.lib.box.content": 1,
                "bb.lib.box.left": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "bb",
            "namespace": "",
            "file": "../bb/lib/box/left.js",
            "line": 11,
            "caption": "Boxes",
            "readme": "Boxes are parts of the html body corresponding to basic layout\ncomponents of the web application. `<body>` contains two boxes:\n* `left`: sidebar on the left\n* `content`: main box of the application\n\nThe `content` box displays a \"pagelet\" specified by the state object.",
            "tag": "main",
            "itemtype": "main"
        },
        "bb.dialog": {
            "name": "bb.dialog",
            "submodules": {},
            "classes": {
                "bb.lib.dialog.action": 1,
                "bb.lib.dialog.confirm": 1,
                "bb.lib.dialog": 1,
                "bb.lib.dialog.info": 1,
                "bb.lib.dialog.valueSelector": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "bb",
            "namespace": "",
            "file": "../bb/lib/dialog/valueSelector.js",
            "line": 11,
            "caption": "Dialogs",
            "readme": "Dialogs are fullscreen modal controls.",
            "tag": "main",
            "itemtype": "main"
        },
        "bb.pagelet": {
            "name": "bb.pagelet",
            "submodules": {},
            "classes": {
                "bb.lib.pagelet.dashboard": 1,
                "bb.lib.pagelet.detail": 1,
                "bb.lib.pagelet.entry": 1,
                "bb.lib.pagelet.gesture": 1,
                "bb.lib.pagelet": 1,
                "bb.lib.pagelet.list": 1,
                "bb.lib.pagelet.listItem": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "bb",
            "namespace": "",
            "file": "../bb/lib/pagelet/listItem.js",
            "line": 12,
            "caption": "Pagelets",
            "readme": "A pagelet is a part of a page.\n\nThere are several types of pagelets (see `lib/pagelet`\ndirectory).\nThe dashboard pagelet is a starting point for the user.\nTwo other basic pagelets are the entry pagelet (displays one\nentry) and the list pagelet (displays a list of entries).\n\nEach [entry kind] can define own UI layout and behaviour for any pagelet type displaying entry in an individual file.\n\nPagelets can create and contain various widgets (see `lib/widget`\ndirectory) and other pagelets.",
            "tag": "main",
            "itemtype": "main"
        },
        "bb.widget": {
            "name": "bb.widget",
            "submodules": {},
            "classes": {
                "bb.lib.widget.button": 1,
                "bb.lib.widget.checkbox": 1,
                "bb.lib.widget": 1,
                "bb.lib.widget.list": 1,
                "bb.lib.widget.listItem": 1,
                "bb.lib.widget.search": 1,
                "bb.lib.widget.slider": 1,
                "bb.lib.widget.slideswitch": 1,
                "bb.lib.widget.toolbar": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "bb",
            "namespace": "",
            "file": "../bb/lib/widget/toolbar.js",
            "line": 10,
            "caption": "Widgets",
            "readme": "A Widget is an easily reusable control visually represented by\nHTML5 elements. Their behaviour is controlled by instances of\ndescendants of the [Widget class].",
            "tag": "main",
            "itemtype": "main",
            "aliases": "widget",
            "description": "TODO: Move to the widget directory"
        },
        "bb.stateObj": {
            "name": "bb.stateObj",
            "submodules": {},
            "classes": {},
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "bb",
            "namespace": "",
            "file": "../bb/lib/stateObj.js",
            "line": 1,
            "caption": "State objects",
            "readme": "The state object defines what is displayed by the application. It\ncan be saved in the browser's history. Boxes and pagelets receive\nthe state object in as a parameter of their `display()` methods.",
            "tag": "main",
            "itemtype": "main"
        },
        "boards": {
            "name": "boards",
            "submodules": {},
            "classes": {
                "boards.lib": 1,
                "boards.content": 1,
                "control.lib.din": 1,
                "control.lib.din.pin": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "../control/lib/din/pin.js",
            "line": 10,
            "caption": "Open Smart Environment Boards package",
            "readme": "This package contains definitions of [kinds of entries] that\nrepresent OSE boards. These boards use the [pins] component and\nallow to control < 250 V AC and < 30 V DC appliances.\n\nBoards are intended to be used in a power distributor.\n\nOSE boards are in development, and their production date is not yet\nspecified.",
            "aliases": "oseBoard oseBoards oseMainBoard oseMainBoards osePwmBoard osePwmBoards",
            "itemtype": "main"
        },
        "control.distributor": {
            "name": "control.distributor",
            "submodules": {},
            "classes": {
                "control.lib.din": 1,
                "control.lib.distributor": 1,
                "control.lib.flowMeter": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "control",
            "namespace": "",
            "file": "../control/lib/flowMeter/index.js",
            "line": 11,
            "caption": "Power distributors",
            "readme": "This component defines basic power distributor entry kinds. By\nconfiguring entries of these kinds, it is possible to define the\npower distributor configuration and behaviour.",
            "tag": "main",
            "itemtype": "main",
            "aliases": "powerDistributor"
        },
        "control.pin": {
            "name": "control.pin",
            "submodules": {},
            "classes": {
                "control.lib.din.pin": 1,
                "control.lib.pin.commands": 1,
                "control.lib.pin.counter": 1,
                "control.lib.pin.din": 1,
                "control.lib.pin.dout": 1,
                "control.lib.pin": 1,
                "control.lib.pin.light": 1,
                "control.lib.pin.list": 1,
                "control.lib.pin.pwm": 1,
                "control.lib.pin.switch": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "control",
            "namespace": "",
            "file": "../control/lib/pin/switch.js",
            "line": 10,
            "caption": "Pins",
            "readme": "This component allows to simply define an [entry kind] describing\nsome type of controller with individual physical or logical\npins, such as a [Raspberry Pi] with its GPIO pins.\n\nEach entry of a kind using this component can establish [links] to\nindividual pins. An example [entry kind] that establishes a link to a\ncontroller switching some physical pin is the [heater].\n\nCommunication between a client and a controller consists of the\nfollowing steps:\n\n1. Define a [client socket] class with `update()` handler.\n2. Send `registerPin` [command] with request containing [pin\n   index], [pin type], optional configuration data and a client\n   socket instance.\n3. On the controller side, a new response socket is created and\n   registered by a controllers entry [pin list], and the [link] is\n   established.\n4. On the client side, the `open()` client socket handler is\n   invoked.\n\nNow it is possible to send `read()` or `update()` requests from the\nclient side to read or change the physical or logical pin state of\nthe controller. The response socket calls the client's `update()`\nhandler when a pin value change is detected. Each pin can register\nonly one active [link] at a time.\n\nTo create new entry kind describing some type of controller, follow\nthese steps:\n\n1. Define a new [entry kind].\n2. Define the `read()`, `write()` and `setup()` methods for each\n   pin type of the controller.\n3. Define list of pins describing which pin can be of which type.\n4. Create [pin list] instance for each entry in `homeInit()` method\n   of such kind.\n\nThis can be used to easily integrate, for example, Arduino boards\nor other controllers into the OSE ecosystem. If someone wants to\nput his effort into this challenge, don't hesitate to contact us\nvia [GitHub] for support.",
            "description": "## Pin types\n\nEvery pin has assigned a pin type, defined by the controller. Type\ndefines the `read()` and `write()` methods to read or update the\nvalue of a physical pin on the controller. Pin type can have the\n`setup()` method that is called during the pin is registered.\n\nThe Raspberry PI entry kind, for example, defines the `din` and\n`dout` pin types. Both these types have the `setup()` method that\nsets up a Gpio class instance from the\n[onoff](https://www.npmjs.org/package/onoff) npm package for each\nregistered pin to read or write the pin's value.\n\nThere are following pre-defined pin types:\n- Digital input\n- Digital output\n- PWM\n\n## Flavours\n\nCommunication between a pin and a client can be changed using [pin\nflavours].  At registration time, the client can send a flavour\nvalue with the `registerPin` request command.\n\nThere are following predefined pin flavours:\n- Counter\n- Light\n- Switch\n\nExamples are a [switch entry] that registers to the master's pin\nwith `flavour: 'switch'` or a [light entry] that registers each\nchannel with `flavour: 'light'`.",
            "tag": "main",
            "itemtype": "main"
        },
        "control": {
            "name": "control",
            "submodules": {
                "control.distributor": 1,
                "control.pin": 1,
                "control.room": 1,
                "control.remote": 1
            },
            "classes": {
                "control.lib.distributor": 1,
                "control.lib.door": 1,
                "control.lib.door.pin": 1,
                "control.lib.flowMeter": 1,
                "control.lib.heater": 1,
                "control.lib.heater.pin": 1,
                "control.lib.heater.tariff": 1,
                "control.lib.light": 1,
                "control.lib.light.pin": 1,
                "control.lib.light.remote": 1,
                "control.lib.light.switch": 1,
                "control.lib.pin.commands": 1,
                "control.lib.pin.counter": 1,
                "control.lib.pin.din": 1,
                "control.lib.pin.dout": 1,
                "control.lib.pin": 1,
                "control.lib.pin.light": 1,
                "control.lib.pin.list": 1,
                "control.lib.pin.pwm": 1,
                "control.lib.pin.switch": 1,
                "control.lib.room": 1,
                "control.lib.switch": 1,
                "control.lib.switch.socket": 1,
                "control.lib.switch.relay": 1,
                "control.lib.activity": 1,
                "control.lib": 1,
                "control.lib.remote": 1,
                "control.content": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "../control/content.js",
            "line": 12,
            "caption": "Open Smart Environment Control package",
            "readme": "This package contains definitions of general [kinds of entries]\nthat represent real objects found in most environments (lights,\nswitches, heaters, sensors etc.). Entries are configured by\ndefining `entry.data` values. Communication between or among\nentries is realized via [links].",
            "features": "",
            "planned": "- Home automation control application\n- Controlling 230V appliances (wall sockets, underfloor heaters, window blinds etc.)\n- Switching and dimming of LED light sources\n- Magnetic door and windows sensors\n- Activity-based ergonomics\n- Environmental sensors (temperature, humidity, air quality, occupancy, etc.)\n- Capacitance touch detection\n- Security cameras\n- Power consumption monitoring\n- Voice commands using the Google Speech API\n- Desktop remote control\n- Sound and gesture commands recognition\n- HVAC control\n- Media centre and NAS\n- Integration of other home automation protocols and products\n  - xPL\n  - Zigbee\n  - Z-Wave\n  - KNX\n- Computer learning",
            "itemtype": "main"
        },
        "control.room": {
            "name": "control.room",
            "submodules": {},
            "classes": {
                "control.lib.door": 1,
                "control.lib.door.pin": 1,
                "control.lib.heater": 1,
                "control.lib.heater.pin": 1,
                "control.lib.heater.tariff": 1,
                "control.lib.light": 1,
                "control.lib.light.pin": 1,
                "control.lib.light.switch": 1,
                "control.lib.room": 1,
                "control.lib.switch": 1,
                "control.lib.switch.socket": 1,
                "control.lib.switch.relay": 1,
                "control.lib.activity": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "control",
            "namespace": "",
            "file": "../control/lib/activity.js",
            "line": 12,
            "caption": "Rooms",
            "readme": "This component defines basic room entry kinds. By configuring\nentries of these kinds, it is possible to define an indoor\nenvironment and its behaviour.",
            "tag": "main",
            "itemtype": "main"
        },
        "control.remote": {
            "name": "control.remote",
            "submodules": {},
            "classes": {
                "control.lib.light.remote": 1,
                "control.lib.remote": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "control",
            "namespace": "",
            "file": "../control/lib/remote.js",
            "line": 26,
            "caption": "Remote control",
            "readme": "This component makes it possible to specify what individual remote\ncontroller commands do with OSE entries. An example of using this\ncomponent is the [ose-lirc] package.\n\nThe remote controller can be easily configured to control\nmultimedia, lights, etc. It is possible to define commands and\ngroups of commands.\n\nExample:\nTODO",
            "tag": "main",
            "itemtype": "main"
        },
        "dvb": {
            "name": "dvb",
            "submodules": {},
            "classes": {
                "dvb.lib.channel": 1,
                "dvb.lib": 1,
                "dvb.content": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "../dvb/content.js",
            "line": 12,
            "caption": "Open Smart Environment DVB package",
            "readme": "This package contains the general definition of DVB-related logic.\nCurrently it contains only the channel [entry kind] and registers\nDVB as a source to the [OSE Media player].\n\nDVB channels are configured in .js files.\n\nExample:\n\nTODO",
            "itemtype": "main"
        },
        "fs": {
            "name": "fs",
            "submodules": {},
            "classes": {
                "fs.lib.dir": 1,
                "fs.lib.file": 1,
                "fs.lib": 1,
                "fs.content": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "../fs/content.js",
            "line": 12,
            "caption": "Open Smart Environment Filesystem package",
            "readme": "This package contains definitions of [entry kinds] that represent\nfiles and directories and gives OSE access to the filesystem and\nregisters DVB as a source to the [OSE Media player].",
            "itemtype": "main"
        },
        "icecast": {
            "name": "icecast",
            "submodules": {},
            "classes": {
                "icecast.lib.stream": 1,
                "icecast.lib": 1,
                "icecast.content": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "../icecast/content.js",
            "line": 12,
            "caption": "Open Smart Environment Icecast package",
            "readme": "This package makes it possible to search for Icecast streams in the\nIcecast directory (http://dir.xiph.org)\n\nIt defines the icecast stream [entry kind] and registers it as a\nsource to [OSE Media player].",
            "itemtype": "main"
        },
        "media": {
            "name": "media",
            "submodules": {
                "media.history": 1,
                "media.player": 1,
                "media.stream": 1,
                "media.source": 1
            },
            "classes": {
                "media.lib.item": 1,
                "media.lib.player.commands": 1,
                "media.lib.player.dvb": 1,
                "media.lib.player": 1,
                "media.lib.player.playback": 1,
                "media.lib.player.volume": 1,
                "media.lib.stream": 1,
                "media.lib": 1,
                "media.lib.sources": 1,
                "media.content": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "../media/content.js",
            "line": 12,
            "caption": "Open Smart Environment Media package",
            "readme": "The OSE Media package implements a general media player into your\nenvironment. It makes use of various media applications. The logic\nof controlling these applications is contained in separate packages\n([ose-pa], [ose-videolan]).",
            "features": "- Media sources extended by other npm packages\n- Predefined media streams, files and playback history\n- Media playback using a configurable set of applications\n  (currently DVBlast as DVB stramer, PulseAudio as audio backend\n  and VLC as media player)",
            "aliases": "oseMediaPlayer",
            "itemtype": "main"
        },
        "media.history": {
            "name": "media.history",
            "submodules": {},
            "classes": {
                "media.lib.item": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "media",
            "namespace": "",
            "file": "../media/lib/item/index.js",
            "line": 19,
            "caption": "Media history",
            "readme": "OSE Media package keeps track of played media items. These items\ncan be displayed in the player history and played again.",
            "tag": "main",
            "itemtype": "main"
        },
        "media.player": {
            "name": "media.player",
            "submodules": {},
            "classes": {
                "media.lib.player.commands": 1,
                "media.lib.player.dvb": 1,
                "media.lib.player": 1,
                "media.lib.player.playback": 1,
                "media.lib.player.volume": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "media",
            "namespace": "",
            "file": "../media/lib/player/volume.js",
            "line": 10,
            "caption": "Media player",
            "readme": "The media player [kind] contains the logic for media control. It\ncontrols the volume, playback and DVB streamer on one or more Linux\nboxes. In the [OSE UI] it displays information about currently\nplaying media and allows to control the player remotely. It's\npossible to display one of registered media sources and select an\nitem. Some sources support searching.",
            "tag": "main",
            "itemtype": "main"
        },
        "media.stream": {
            "name": "media.stream",
            "submodules": {},
            "classes": {
                "media.lib.stream": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "media",
            "namespace": "",
            "file": "../media/lib/stream/index.js",
            "line": 19,
            "caption": "Media streams",
            "readme": "It is possible to predefine favourite streams or files into the OSE\nMedia player. These can be easily selected and played.",
            "tag": "main",
            "itemtype": "main"
        },
        "media.source": {
            "name": "media.source",
            "submodules": {},
            "classes": {
                "media.lib.sources": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "media",
            "namespace": "",
            "file": "../media/lib/sources.js",
            "line": 29,
            "caption": "Media sources",
            "readme": "Each media source is a reference to some [entry kind] describing\nsource of media items. Media player use sources to select media to\nplay. Registration to sources is done during initialization of the\nnpm package containing the source. Any OSE package can contain one\nor more media sources. Examples are the [DVB], [Icecast] or\n[YouTube] packages.",
            "description": "## Description\nMedia source kind must implement two methods:\n- `getMediaKeys()`\n- `playItem()`\n\nDescription of these methods can be found at [Media stream kind].",
            "tag": "main",
            "itemtype": "main"
        },
        "lirc": {
            "name": "lirc",
            "submodules": {},
            "classes": {
                "lirc.lib.lirc": 1,
                "lirc.lib": 1,
                "lirc.content": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "../lirc/content.js",
            "line": 12,
            "caption": "Open Smart Environment LIRC package",
            "readme": "This package allows to use LIRC in OSE. It is thus possible to\nmanage your environment using IR remote controllers.\n\nIt forwards received commands to the [control.remote] component.",
            "itemtype": "main"
        },
        "pa": {
            "name": "pa",
            "submodules": {},
            "classes": {
                "pa.lib.dbus": 1,
                "pa.lib": 1,
                "pa.content": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "../pa/content.js",
            "line": 12,
            "caption": "Open Smart Environment PulseAudio package",
            "readme": "This package implements volume control for the [OSE Media player].",
            "itemtype": "main"
        },
        "rpi": {
            "name": "rpi",
            "submodules": {},
            "classes": {
                "rpi.lib.camera": 1,
                "rpi.lib.rpi": 1,
                "rpi.lib": 1,
                "rpi.content": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "../rpi/content.js",
            "line": 12,
            "caption": "Open Smart Environment Raspberry Pi package",
            "readme": "This package contains [entry kinds] for integrating hardware from\nthe Raspberry Pi Foundation into OSE.",
            "aliases": "raspberry raspberryPi raspberryCamera",
            "itemtype": "main"
        },
        "videolan": {
            "name": "videolan",
            "submodules": {},
            "classes": {
                "videolan.lib.dvblast": 1,
                "videolan.lib.dvblast.master": 1,
                "videolan.lib.vlc": 1,
                "videolan.lib": 1,
                "videolan.content": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "../videolan/content.js",
            "line": 12,
            "caption": "Open Smart Environment VideoLAN package",
            "readme": "This package contains [entry kinds] integrating VideoLAN software\ninto OSE.\n\nIt allows the [OSE Media player] to use VLC as its playback\napplication and DVBlast as its DVB streamer.",
            "itemtype": "main"
        },
        "xorg": {
            "name": "xorg",
            "submodules": {},
            "classes": {
                "xorg.lib.xorg": 1,
                "xorg.lib": 1,
                "xorg.content": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "../xorg/content.js",
            "line": 12,
            "caption": "Open Smart Environment X.Org package",
            "readme": "This package allows to control the X.Org server with xdotool.",
            "itemtype": "main"
        },
        "yoctopuce": {
            "name": "yoctopuce",
            "submodules": {},
            "classes": {
                "yoctopuce.lib.meteo": 1,
                "yoctopuce.lib": 1,
                "yoctopuce.content": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "../yoctopuce/content.js",
            "line": 12,
            "caption": "Open Smart Environment Yoctopuce package",
            "readme": "This package integrates some Yoctopuce sensor into\nthe OSE ecosystem.",
            "itemtype": "main"
        },
        "youtube": {
            "name": "youtube",
            "submodules": {},
            "classes": {
                "youtube.lib.video": 1,
                "youtube.lib": 1,
                "youtube.content": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "../youtube/content.js",
            "line": 12,
            "caption": "Open Smart Environment YouTube package",
            "readme": "This package integrates searching and playing YouTube videos into\nthe [OSE Media player].\n\nIt contains the definition of the YouTube stream [entry kind] and\nregisters it as a source to [OSE Media player].",
            "itemtype": "main"
        }
    },
    "classes": {
        "bundle.examples.media.config": {
            "name": "bundle.examples.media.config",
            "shortname": "bundle.examples.media.config",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "bundle",
            "submodule": "bundle.media",
            "file": "examples/media/config.js",
            "line": 7,
            "caption": "Media player example configuration",
            "readme": "OSE is configured by an configuration object, `module.exports` in this case. Each property of this\nobject defines the configuration for one [OSE plugin].",
            "type": "module"
        },
        "bundle.example.media": {
            "name": "bundle.example.media",
            "shortname": "bundle.example.media",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "bundle",
            "submodule": "bundle.media",
            "namespace": "",
            "file": "examples/media/run.js",
            "line": 123,
            "caption": "Startup script",
            "readme": "This scripts starts OSE instance with configuration from config file.",
            "type": "module"
        },
        "bundle.Gruntfile": {
            "name": "bundle.Gruntfile",
            "shortname": "bundle.Gruntfile",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "bundle",
            "namespace": "",
            "file": "Gruntfile.js",
            "line": 7,
            "caption": "Gruntfile",
            "readme": ""
        },
        "bundle.doc": {
            "name": "bundle.doc",
            "shortname": "bundle.doc",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "bundle",
            "namespace": "",
            "file": "doc.js",
            "line": 19,
            "caption": "Documentation build script",
            "readme": "To build complete documentation, go to the `bundle` directory and run:\n\n    grunt docs",
            "type": "module"
        },
        "ose.lib.entry.link": {
            "name": "ose.lib.entry.link",
            "shortname": "ose.lib.entry.link",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "bundle",
            "submodule": "ose.data",
            "namespace": "",
            "file": "../ose/lib/entry/command.js",
            "line": 10,
            "caption": "Entry command client socket",
            "readme": "Sends some command to the target entry. When the link disconnects,\nit tries to reopen it as soon as possible.",
            "type": "class"
        },
        "ose.lib.entry": {
            "name": "ose.lib.entry",
            "shortname": "ose.lib.entry",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "bundle",
            "submodule": "ose.data",
            "namespace": "",
            "file": "../ose/lib/entry/index.js",
            "line": 14,
            "caption": "Entry class",
            "readme": "An [Entry] instance is a data structure representing a physical\nobject or logical concept. Each [entry] belongs to a certain\n[shard]. Within the [shard], it has a unique `id`. Each [entry] is\nof a certain [kind] that defines its behaviour. An [entry] can\ncontain a `data` object in JSON format (analogous to a database\ntable row). At the moment, `data` are defined at the start-up of an\n[OSE instance] and are immutable. Data management and persistence\nare planned features. The `state` JSON object, unlike `data`, can\noften change and is non-persistent by design because it reflects\nchanging objective reality. Changes of `state` objects are\npropagated to [peers] tracking changes of certain [entries].",
            "todo": [
                "[Entries] can receive `action` objects in JSON format."
            ],
            "aliases": "entry entries data state statesOfEntries",
            "extends": "eventEmitter",
            "type": "class"
        },
        "ose.lib.entry.master": {
            "name": "ose.lib.entry.master",
            "shortname": "ose.lib.entry.master",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ose",
            "submodule": "ose.data",
            "namespace": "",
            "file": "../ose/lib/entry/master.js",
            "line": 11,
            "caption": "Master entry response socket",
            "readme": "Reponse socket for slave entry requests. Is registered in `entry.slaves`.",
            "type": "class"
        },
        "ose.lib.entry.slave": {
            "name": "ose.lib.entry.slave",
            "shortname": "ose.lib.entry.slave",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ose",
            "submodule": "ose.data",
            "namespace": "",
            "file": "../ose/lib/entry/slave.js",
            "line": 11,
            "caption": "Slave entry client socket",
            "readme": "Socket to build a link to the master entry.",
            "type": "class",
            "extends": "EventEmitter"
        },
        "ose.lib.http.content": {
            "name": "ose.lib.http.content",
            "shortname": "ose.lib.http.content",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ose",
            "submodule": "ose.http",
            "namespace": "",
            "file": "../ose/lib/http/content.js",
            "line": 14,
            "caption": "HTTP Content",
            "readme": "Descendants of this class provide browsers with files from\nindividual OSE packages.",
            "ose": "-type class"
        },
        "ose.lib.http": {
            "name": "ose.lib.http",
            "shortname": "ose.lib.http",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ose",
            "submodule": "ose.http",
            "namespace": "",
            "file": "../ose/lib/http/index.js",
            "line": 29,
            "caption": "HTTP server plugin",
            "readme": "This singleton provides HTTP server for OSE instance.",
            "type": "module"
        },
        "ose.lib.peer.here": {
            "name": "ose.lib.peer.here",
            "shortname": "ose.lib.peer.here",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ose",
            "submodule": "ose.peer",
            "namespace": "",
            "file": "../ose/lib/peer/here.js",
            "line": 10,
            "caption": "Here peer",
            "readme": "Singleton representing own OSE instance peer. Each OSE instance\nregisters this singleton at startup with other peers in `Ose.peers`\nunder it's own name, i.e. `Ose.name`."
        },
        "ose.lib.peer.list": {
            "name": "ose.lib.peer.list",
            "shortname": "ose.lib.peer.list",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ose",
            "submodule": "ose.peer",
            "namespace": "",
            "file": "../ose/lib/peer/list.js",
            "line": 14,
            "caption": "Peer list",
            "readme": "Singleton containing all registered peers. The singleton can be\naccessed through `Ose.peers`. A single peer can be accessed through\n`Ose.peers.get(peer name)`.",
            "type": "singleton"
        },
        "ose.lib.peer.remote": {
            "name": "ose.lib.peer.remote",
            "shortname": "ose.lib.peer.remote",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ose",
            "submodule": "ose.peer",
            "namespace": "",
            "file": "../ose/lib/peer/remote.js",
            "line": 15,
            "caption": "Remote peer",
            "readme": "Each instance of this class represents another OSE instance and\nencapsulates communication with it.  It creates and manages the\n[WebSocket wrapper] class instance, which handles communication\nthrough WebSockets.  Can act as a server or a client.\n\nKeeps the connection opened by reconnecting.",
            "aliases": "peer",
            "type": "class"
        },
        "ose.lib.peer.rx": {
            "name": "ose.lib.peer.rx",
            "shortname": "ose.lib.peer.rx",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ose",
            "submodule": "ose.peer",
            "namespace": "",
            "file": "../ose/lib/peer/rx.js",
            "line": 15,
            "caption": "Peer RX handlers",
            "readme": "This module contains handlers for incomming communication of\nstandard peer to peer traffic.",
            "type": "module"
        },
        "ose.lib.shard": {
            "name": "ose.lib.shard",
            "shortname": "ose.lib.shard",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ose",
            "submodule": "ose.data",
            "namespace": "",
            "file": "../ose/lib/shard/index.js",
            "line": 17,
            "caption": "Shard class",
            "readme": "A shard is a set of [entries]. Each shard belongs to a certain\n[space]. Every shard has a `sid` (shard id) that is unique within\nits [space]. Each shard is tied to a single [scope] (ie. it cannot\ncontain [entries] of [kinds] belonging to different\n[scopes]). Every shard either belongs to the same [home] as its\nspace or is assigned to a different one.",
            "aliases": "shard shards",
            "type": "class"
        },
        "ose.lib.shard.master": {
            "name": "ose.lib.shard.master",
            "shortname": "ose.lib.shard.master",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ose",
            "submodule": "ose.data",
            "namespace": "",
            "file": "../ose/lib/shard/master.js",
            "line": 11,
            "caption": "Master shard response socket",
            "readme": "Socket created in response to a request from a slave shard.",
            "type": "class"
        },
        "ose.lib.shard.slave": {
            "name": "ose.lib.shard.slave",
            "shortname": "ose.lib.shard.slave",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ose",
            "submodule": "ose.data",
            "namespace": "",
            "file": "../ose/lib/shard/slave.js",
            "line": 11,
            "caption": "Slave shard client socket",
            "readme": "Socket for communicating from a shard to a master in another OSE\ninstance.",
            "type": "class"
        },
        "ose.lib.space": {
            "name": "ose.lib.space",
            "shortname": "ose.lib.space",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ose",
            "submodule": "ose.data",
            "namespace": "",
            "file": "../ose/lib/space/index.js",
            "line": 72,
            "caption": "Space class",
            "readme": "A space is a data namespace containing [shards]. It is identified\nby its unique `name` (eg. a domain name or email address).",
            "aliases": "space spaces",
            "type": "class"
        },
        "ose.lib.space.list": {
            "name": "ose.lib.space.list",
            "shortname": "ose.lib.space.list",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ose",
            "submodule": "ose.data",
            "namespace": "",
            "file": "../ose/lib/space/list.js",
            "line": 12,
            "caption": "List of spaces",
            "readme": "Contains a list of all spaces registered by this OSE instance",
            "type": "module"
        },
        "ose.lib.ws.browser": {
            "name": "ose.lib.ws.browser",
            "shortname": "ose.lib.ws.browser",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ose",
            "submodule": "ose.peer",
            "namespace": "",
            "file": "../ose/lib/ws/browser.js",
            "line": 10,
            "caption": "Browser WebSocket wrapper",
            "readme": "Extension of `WebSocket wrapper` for browser",
            "type": "module"
        },
        "ose.lib.ws": {
            "name": "ose.lib.ws",
            "shortname": "ose.lib.ws",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ose",
            "submodule": "ose.peer",
            "namespace": "",
            "file": "../ose/lib/ws/index.js",
            "line": 10,
            "caption": "WebSocket wrapper class",
            "readme": "Communication between two near OSE instances is carried out via the\nWebSocket protocol. The native WebSocket object, provided by the\nruntime environment, is wrapped by an instance of the WebSocket\nwrapper class. This instance is created and controlled by a [Peer]\ninstance and hides differences between the Node.js and browser\nenvironments.\n\nEach WebSocket wrapper instance handles incoming packets via its\n`rx()` method. WebSocket communication behaviour can be controlled\nby assigning some method to the `rx` property.",
            "todo": [
                "- check handler duplicity"
            ],
            "aliases": "websocketWrapper websocket",
            "type": "class"
        },
        "ose.lib.ws.master": {
            "name": "ose.lib.ws.master",
            "shortname": "ose.lib.ws.master",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ose",
            "submodule": "ose.peer",
            "namespace": "",
            "file": "../ose/lib/ws/master.js",
            "line": 11,
            "caption": "Master WebSocket client socket",
            "readme": "Created when a new link is requested from another peer via a\nWebSocket. Acts as a client socket of the link.\n\nTogether with [ose.lib.ws.slave], this makes links\nnetwork-transparent.",
            "type": "class"
        },
        "ose.lib.ws.node": {
            "name": "ose.lib.ws.node",
            "shortname": "ose.lib.ws.node",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ose",
            "submodule": "ose.peer",
            "namespace": "",
            "file": "../ose/lib/ws/node.js",
            "line": 11,
            "caption": "Node WebSocket wrapper",
            "readme": "Extension of `WebSocket wrapper` for Node.js",
            "type": "module"
        },
        "ose.lib.ws.relay": {
            "name": "ose.lib.ws.relay",
            "shortname": "ose.lib.ws.relay",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ose",
            "submodule": "ose.peer",
            "namespace": "",
            "file": "../ose/lib/ws/relay.js",
            "line": 11,
            "caption": "Relaying WebSocket response socket",
            "readme": "Created when a peer responds to a link request with `open()`. Acts\nas a response socket of the link.\n\nTogether with [ose.lib.ws.master], this makes links\nnetwork-transparent.",
            "type": "class"
        },
        "ose.lib.ws.slave": {
            "name": "ose.lib.ws.slave",
            "shortname": "ose.lib.ws.slave",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ose",
            "submodule": "ose.peer",
            "namespace": "",
            "file": "../ose/lib/ws/worker.js",
            "line": 8,
            "caption": "WebSocket browser worker",
            "readme": "Worker object that isolates the [WebSocket wrapper] timer from the\n`window` object in the browser. A workaround for better (but still\nnot correct!) timer behaviour in the Android environmnent while\nsleeping.",
            "type": "class"
        },
        "ose.lib.browser": {
            "name": "ose.lib.browser",
            "shortname": "ose.lib.browser",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ose",
            "namespace": "",
            "file": "../ose/lib/browser.js",
            "line": 7,
            "caption": "OSE browser",
            "readme": "This script contains the OSE framework initialization in the browser. It must be sourced before any other OSE module that is using `window.ose()`.\n\nThe following steps are taken in this script:\n- The limited CommonJS require() behaviour is prepared. Every module, provided by the backend to the browser, is wrapped to `window.ose()` method call.\n- The `run` method on `document.onload` event is registered.\n- After the document is ready, `ose.setup()` is called to prepare OSE framework.\n- Finally [plugins] are configured with configuration from module `ose/config`.",
            "type": "module"
        },
        "ose.lib.cli": {
            "name": "ose.lib.cli",
            "shortname": "ose.lib.cli",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ose",
            "namespace": "",
            "file": "../ose/lib/cli.js",
            "line": 12,
            "caption": "CLI interface module",
            "readme": "This module provides a CLI interface module for OSE Node.js\ninstances. Commands can be entered to readline interface or run as\na script from a configuration file.\n\nInteractive example:\n    > sleep 10000\n    > space klinec.snasel.net\n    > shard d1\n    > entry kitchen.heater\n    > command power 0.23\n    > entry living.heater\n    > info\n    > detail\n\nConfiguration file example:\n\n    exports.cli = {\n      type: 'ose/lib/cli',\n      script: TODO\n        'wait 10000',\n        'space klinec.snasel.net',\n        'shard d1',\n        'entry kitchen.heater',\n        'command power 0.23',\n        'entry living.light',\n        'command switch \"on\"',\n        'info',\n        'detail'\n    }",
            "type": "module"
        },
        "ose.lib.counter": {
            "name": "ose.lib.counter",
            "shortname": "ose.lib.counter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ose",
            "namespace": "",
            "file": "../ose/lib/counter.js",
            "line": 10,
            "caption": "Counter",
            "readme": "Counters are used for multiple asynchronous operations with one final callback.",
            "type": "class"
        },
        "ose.core": {
            "name": "ose.core",
            "shortname": "ose.core",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ose",
            "namespace": "",
            "file": "../ose/lib/index.js",
            "line": 62,
            "caption": "OSE core",
            "readme": "Most modules use the `OSE core` singleton by calling `var Ose = require('ose')`.",
            "type": "singleton",
            "mainName": "ose.core",
            "tag": "main",
            "itemtype": "main",
            "_main": true
        },
        "ose.lib.kind": {
            "name": "ose.lib.kind",
            "shortname": "ose.lib.kind",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ose",
            "submodule": "ose.data",
            "namespace": "",
            "file": "../ose/lib/kind.js",
            "line": 11,
            "caption": "Kind class",
            "readme": "Each [entry] is of a certain kind. Kinds define the properties and\nbehaviour of [entries].\n\nKinds should describe, as closely as possible, physical or virtual\nobjects that can be managed somehow.",
            "aliases": "kind kinds entryKind entryKinds kindsOfEntries",
            "type": "class"
        },
        "ose.lib.link": {
            "name": "ose.lib.link",
            "shortname": "ose.lib.link",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ose",
            "submodule": "ose.link",
            "namespace": "",
            "file": "../ose/lib/link.js",
            "line": 145,
            "caption": "Links helper",
            "readme": "This module contains methods for controlling links.",
            "type": "module"
        },
        "ose.lib.logger": {
            "name": "ose.lib.logger",
            "shortname": "ose.lib.logger",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ose",
            "submodule": "ose.logger",
            "namespace": "",
            "file": "../ose/lib/logger.js",
            "line": 63,
            "caption": "Logger"
        },
        "ose.lib.node": {
            "name": "ose.lib.node",
            "shortname": "ose.lib.node",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ose",
            "namespace": "",
            "file": "../ose/lib/node.js",
            "line": 21,
            "caption": "OSE node",
            "readme": "This module contains the OSE framework initialization in the Node.js.",
            "type": "module"
        },
        "ose.lib.plugins": {
            "name": "ose.lib.plugins",
            "shortname": "ose.lib.plugins",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ose",
            "submodule": "ose.plugin",
            "namespace": "",
            "file": "../ose/lib/plugins.js",
            "line": 112,
            "caption": "Plugins singleton",
            "readme": "Handles plugin instances defined in configuration file (or object).",
            "type": "singleton"
        },
        "ose.lib.scope": {
            "name": "ose.lib.scope",
            "shortname": "ose.lib.scope",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ose",
            "submodule": "ose.data",
            "namespace": "",
            "file": "../ose/lib/scope.js",
            "line": 11,
            "caption": "Scope class",
            "readme": "A scope is a set of [kinds] of [entries].",
            "aliases": "scope scopes",
            "type": "class"
        },
        "ose.wrap.common": {
            "name": "ose.wrap.common",
            "shortname": "ose.wrap.common",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ose",
            "submodule": "ose.wrap",
            "namespace": "",
            "file": "../ose/lib/wrap.js",
            "line": 348,
            "caption": "Common wrapper class",
            "readme": "Properties common for all wrappers",
            "type": "class"
        },
        "ose.wrap.class": {
            "name": "ose.wrap.class",
            "shortname": "ose.wrap.class",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ose",
            "submodule": "ose.wrap",
            "namespace": "",
            "file": "../ose/lib/wrap.js",
            "line": 370,
            "caption": "Class wrapper",
            "readme": "Class defining a class module wrapper.",
            "params": [
                {
                    "name": "m",
                    "description": "Module to be wrapped",
                    "type": "Object"
                },
                {
                    "name": "ctor",
                    "description": "Class constructor",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "sup",
                    "description": "Super-class",
                    "type": "Function|String",
                    "optional": true
                }
            ],
            "extends": "ose.wrap.common",
            "type": "class"
        },
        "ose.wrap.module": {
            "name": "ose.wrap.module",
            "shortname": "ose.wrap.module",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ose",
            "submodule": "ose.wrap",
            "namespace": "",
            "file": "../ose/lib/wrap.js",
            "line": 412,
            "caption": "Module wrapper",
            "readme": "Class defining a standard module wrapper.",
            "extends": "ose.wrap.common",
            "type": "class"
        },
        "ose.wrap.package": {
            "name": "ose.wrap.package",
            "shortname": "ose.wrap.package",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ose",
            "submodule": "ose.wrap",
            "namespace": "",
            "file": "../ose/lib/wrap.js",
            "line": 431,
            "caption": "Package wrapper",
            "readme": "Class defining a package module wrapper.",
            "params": [
                {
                    "name": "m",
                    "description": "Module to be wrapped",
                    "type": "Object"
                },
                {
                    "name": "init",
                    "description": "Init function",
                    "type": "Function",
                    "optional": true
                }
            ],
            "extends": "ose.wrap.common",
            "type": "class"
        },
        "ose.wrap.singleton": {
            "name": "ose.wrap.singleton",
            "shortname": "ose.wrap.singleton",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ose",
            "submodule": "ose.wrap",
            "namespace": "",
            "file": "../ose/lib/wrap.js",
            "line": 480,
            "caption": "Singleton wrapper",
            "readme": "The class defining a singleton module wrapper.",
            "params": [
                {
                    "name": "m",
                    "description": "Module to be wrapped",
                    "type": "Object"
                },
                {
                    "name": "init",
                    "description": "Init function",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "sup",
                    "description": "Super-class",
                    "type": "Function|String",
                    "optional": true
                }
            ],
            "extends": "ose.wrap.common",
            "type": "class"
        },
        "ose.content": {
            "name": "ose.content",
            "shortname": "ose.content",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ose",
            "namespace": "",
            "file": "../ose/content.js",
            "line": 11,
            "caption": "OSE content",
            "readme": "Provides files of OSE framework package to the browser.",
            "type": "singleton",
            "extends": "ose.lib.http.content"
        },
        "bb.lib.box.content": {
            "name": "bb.lib.box.content",
            "shortname": "bb.lib.box.content",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "bb",
            "submodule": "bb.box",
            "namespace": "",
            "file": "../bb/lib/box/content.js",
            "line": 11,
            "caption": "Content box",
            "readme": "Class handling displaying of the main content box on the page.\n\nIt is placed right in the `<body>` and displays the header and the\nmain content of the application. It also contains widget such as\nthe search box.",
            "extends": "bb.lib.widget"
        },
        "bb.lib.box.left": {
            "name": "bb.lib.box.left",
            "shortname": "bb.lib.box.left",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "bb",
            "submodule": "bb.box",
            "namespace": "",
            "file": "../bb/lib/box/left.js",
            "line": 11,
            "caption": "Left box",
            "readme": "Class handling displaying of left side box.\n\nIt is placed right in the `<body>` and contains the slidable left\nsidebar.",
            "extends": "bb.lib.widget",
            "uses": [
                "bb.lib.box"
            ]
        },
        "bb.lib.dialog.action": {
            "name": "bb.lib.dialog.action",
            "shortname": "bb.lib.dialog.action",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "bb",
            "submodule": "bb.dialog",
            "namespace": "",
            "file": "../bb/lib/dialog/action.js",
            "line": 11,
            "caption": "Action dialog",
            "readme": "Diplays a dialog with an action menu",
            "extends": "bb.lib.widget"
        },
        "bb.lib.dialog.confirm": {
            "name": "bb.lib.dialog.confirm",
            "shortname": "bb.lib.dialog.confirm",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "bb",
            "submodule": "bb.dialog",
            "namespace": "",
            "file": "../bb/lib/dialog/confirm.js",
            "line": 11,
            "caption": "Confirmation dialog",
            "readme": "Diplays a confirmation dialog with message and two buttons.",
            "extends": "bb.lib.widget"
        },
        "bb.lib.dialog": {
            "name": "bb.lib.dialog",
            "shortname": "bb.lib.dialog",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "bb",
            "submodule": "bb.dialog",
            "namespace": "",
            "file": "../bb/lib/dialog/index.js",
            "line": 14,
            "caption": "Dialog",
            "readme": "Class defining dialogs",
            "extends": "bb.lib.widget"
        },
        "bb.lib.dialog.info": {
            "name": "bb.lib.dialog.info",
            "shortname": "bb.lib.dialog.info",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "bb",
            "submodule": "bb.dialog",
            "namespace": "",
            "file": "../bb/lib/dialog/info.js",
            "line": 11,
            "caption": "Information dialog",
            "readme": "Diplays a dialog with a message",
            "extends": "bb.lib.widget"
        },
        "bb.lib.dialog.valueSelector": {
            "name": "bb.lib.dialog.valueSelector",
            "shortname": "bb.lib.dialog.valueSelector",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "bb",
            "submodule": "bb.dialog",
            "namespace": "",
            "file": "../bb/lib/dialog/valueSelector.js",
            "line": 11,
            "caption": "Value selector dialog",
            "readme": "Diplays a dialog offering options to select from.",
            "extends": "bb.lib.widget"
        },
        "bb.lib.pagelet.dashboard": {
            "name": "bb.lib.pagelet.dashboard",
            "shortname": "bb.lib.pagelet.dashboard",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "bb",
            "submodule": "bb.pagelet",
            "namespace": "",
            "file": "../bb/lib/pagelet/dashboard.js",
            "line": 10,
            "caption": "Dashboard pagelet",
            "readme": "Pagelet for creating dashboard content.",
            "type": "class",
            "extends": "bb.lib.pagelet"
        },
        "bb.lib.pagelet.detail": {
            "name": "bb.lib.pagelet.detail",
            "shortname": "bb.lib.pagelet.detail",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "bb",
            "submodule": "bb.pagelet",
            "namespace": "",
            "file": "../bb/lib/pagelet/detail.js",
            "line": 12,
            "caption": "Detail pagelet",
            "readme": "Pagelet for displaying entry detail",
            "type": "class",
            "extends": "bb.lib.pagelet"
        },
        "bb.lib.pagelet.entry": {
            "name": "bb.lib.pagelet.entry",
            "shortname": "bb.lib.pagelet.entry",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "bb",
            "submodule": "bb.pagelet",
            "namespace": "",
            "file": "../bb/lib/pagelet/entry.js",
            "line": 10,
            "caption": "Entry pagelet socket",
            "readme": "Extension for entry pagelet classes.",
            "type": "class"
        },
        "bb.lib.pagelet.gesture": {
            "name": "bb.lib.pagelet.gesture",
            "shortname": "bb.lib.pagelet.gesture",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "bb",
            "submodule": "bb.pagelet",
            "namespace": "",
            "file": "../bb/lib/pagelet/gesture.js",
            "line": 12,
            "caption": "Gesture pagelet",
            "readme": "Pagelet for displaying an entry with the gesture interface.\n\nThis pagelet creates a canvas on which, for example, gesture traces\ncan be drawn. A transparent `<div>` placed over this canvas is a\nHammer.js element registering touch gestures.",
            "type": "class",
            "extends": "bb.lib.pagelet"
        },
        "bb.lib.pagelet": {
            "name": "bb.lib.pagelet",
            "shortname": "bb.lib.pagelet",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "bb",
            "submodule": "bb.pagelet",
            "namespace": "",
            "file": "../bb/lib/pagelet/index.js",
            "line": 29,
            "caption": "Pagelet class",
            "readme": "Not every pagelet is necessarily a descendant of this class. Some\nare direct descendants of the widget class.",
            "type": "class",
            "extends": "bb.lib.widget"
        },
        "bb.lib.pagelet.list": {
            "name": "bb.lib.pagelet.list",
            "shortname": "bb.lib.pagelet.list",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "bb",
            "submodule": "bb.pagelet",
            "namespace": "",
            "file": "../bb/lib/pagelet/list.js",
            "line": 10,
            "caption": "List of entries pagelet",
            "readme": "Pagelet for displaying lists of entries",
            "type": "class",
            "extends": "bb.lib.pagelet"
        },
        "bb.lib.pagelet.listItem": {
            "name": "bb.lib.pagelet.listItem",
            "shortname": "bb.lib.pagelet.listItem",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "bb",
            "submodule": "bb.pagelet",
            "namespace": "",
            "file": "../bb/lib/pagelet/listItem.js",
            "line": 12,
            "caption": "Entry list item pagelet",
            "readme": "Pagelet for displaying a list item",
            "type": "class",
            "extends": "bb.lib.pagelet"
        },
        "bb.lib.widget.button": {
            "name": "bb.lib.widget.button",
            "shortname": "bb.lib.widget.button",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "bb",
            "submodule": "bb.widget",
            "namespace": "",
            "file": "../bb/lib/widget/button.js",
            "line": 10,
            "caption": "Button widget",
            "readme": "Widget for displaying and controlling HTML buttons.",
            "todo": [
                "- Completely refactor toolbars and buttons."
            ],
            "type": "class",
            "extends": "bb.lib.widget"
        },
        "bb.lib.widget.checkbox": {
            "name": "bb.lib.widget.checkbox",
            "shortname": "bb.lib.widget.checkbox",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "bb",
            "submodule": "bb.widget",
            "namespace": "",
            "file": "../bb/lib/widget/checkbox.js",
            "line": 10,
            "caption": "Checkbox widget",
            "readme": "Widget for displaying and controlling HTML checkboxes.",
            "type": "class",
            "extends": "bb.lib.widget"
        },
        "bb.lib.widget": {
            "name": "bb.lib.widget",
            "shortname": "bb.lib.widget",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "bb",
            "submodule": "bb.widget",
            "namespace": "",
            "file": "../bb/lib/widget/index.js",
            "line": 20,
            "caption": "Widget class",
            "readme": "Ancestor for individual widgets and pagelets.",
            "type": "class"
        },
        "bb.lib.widget.list": {
            "name": "bb.lib.widget.list",
            "shortname": "bb.lib.widget.list",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "bb",
            "submodule": "bb.widget",
            "namespace": "",
            "file": "../bb/lib/widget/list.js",
            "line": 10,
            "caption": "List widget",
            "readme": "Widget for displaying simple HTML lists.",
            "type": "class",
            "extends": "bb.lib.widget"
        },
        "bb.lib.widget.listItem": {
            "name": "bb.lib.widget.listItem",
            "shortname": "bb.lib.widget.listItem",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "bb",
            "submodule": "bb.widget",
            "namespace": "",
            "file": "../bb/lib/widget/listItem.js",
            "line": 10,
            "caption": "List item widget",
            "readme": "Widget for displaying items in HTML lists.",
            "type": "class",
            "extends": "bb.lib.widget"
        },
        "bb.lib.widget.search": {
            "name": "bb.lib.widget.search",
            "shortname": "bb.lib.widget.search",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "bb",
            "submodule": "bb.widget",
            "namespace": "",
            "file": "../bb/lib/widget/search.js",
            "line": 11,
            "caption": "Search widget",
            "readme": "Search input field widget.\n\nIt has two states: One displays a search button, and the other\ndisplays a search form.\n\nIf available, it uses Google's speech API.",
            "description": "TODO: Move to the widget directory",
            "extends": "bb.lib.widget"
        },
        "bb.lib.widget.slider": {
            "name": "bb.lib.widget.slider",
            "shortname": "bb.lib.widget.slider",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "bb",
            "submodule": "bb.widget",
            "namespace": "",
            "file": "../bb/lib/widget/slider.js",
            "line": 10,
            "caption": "Slider widget",
            "readme": "Widget for displaying and controlling HTML sliders.",
            "type": "class",
            "extends": "bb.lib.widget"
        },
        "bb.lib.widget.slideswitch": {
            "name": "bb.lib.widget.slideswitch",
            "shortname": "bb.lib.widget.slideswitch",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "bb",
            "submodule": "bb.widget",
            "namespace": "",
            "file": "../bb/lib/widget/slideswitch.js",
            "line": 10,
            "caption": "Slideswitch widget",
            "readme": "Widget for displaying and controlling HTML slideswitches.",
            "type": "class",
            "extends": "bb.lib.widget"
        },
        "bb.lib.widget.toolbar": {
            "name": "bb.lib.widget.toolbar",
            "shortname": "bb.lib.widget.toolbar",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "bb",
            "submodule": "bb.widget",
            "namespace": "",
            "file": "../bb/lib/widget/toolbar.js",
            "line": 10,
            "caption": "Toolbar widget",
            "readme": "Widget for displaying and controlling button toolbars.",
            "todo": [
                "- Completely refactor toolbars and buttons."
            ],
            "type": "class",
            "extends": "bb.lib.widget"
        },
        "bb.lib": {
            "name": "bb.lib",
            "shortname": "bb.lib",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "bb",
            "namespace": "",
            "file": "../bb/lib/index.js",
            "line": 55,
            "caption": "OSE Building Blocks core",
            "readme": "Core singleton of bb plugin.\n\nThis singleton is available through the `Ose.ui` property.",
            "type": "singleton",
            "extends": "EventEmitter",
            "mainName": "bb.lib",
            "tag": "main",
            "itemtype": "main",
            "_main": true
        },
        "bb.content": {
            "name": "bb.content",
            "shortname": "bb.content",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "bb",
            "namespace": "",
            "file": "../bb/content.js",
            "line": 11,
            "caption": "Building Blocks content",
            "readme": "This singleton defines which files to provide to browsers.",
            "type": "singleton",
            "extends": "ose.lib.http.content"
        },
        "boards.lib": {
            "name": "boards.lib",
            "shortname": "boards.lib",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "boards",
            "namespace": "",
            "file": "../boards/lib/index.js",
            "line": 26,
            "caption": "OSE Boards core",
            "readme": "Core singleton of ose-boards npm package. Registers [entry kinds]\ndefined by this package to the `control` [scope].",
            "type": "singleton"
        },
        "boards.content": {
            "name": "boards.content",
            "shortname": "boards.content",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "boards",
            "namespace": "",
            "file": "../boards/content.js",
            "line": 12,
            "caption": "OSE boards content",
            "readme": "Provides files of OSE boards package to the browser.",
            "type": "singleton",
            "extends": "ose.lib.http.content"
        },
        "control.lib.din": {
            "name": "control.lib.din",
            "shortname": "control.lib.din",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "boards",
            "submodule": "control.distributor",
            "namespace": "",
            "file": "../control/lib/din/index.js",
            "line": 13,
            "caption": "Digital input pin kind",
            "readme": "Kind defining digital input entries\n\nThe `din` entry connects to the controller by sending a\n`registerPin()` command with a client socket. The state of the\n`din` entry then changes with the state of the physical pin on the\ncontroller side.",
            "extends": "ose.lib.kind",
            "type": "singleton"
        },
        "control.lib.din.pin": {
            "name": "control.lib.din.pin",
            "shortname": "control.lib.din.pin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "boards",
            "submodule": "control.pin",
            "namespace": "",
            "file": "../control/lib/din/pin.js",
            "line": 10,
            "caption": "Digital input-to-controller pin client socket",
            "readme": "Client socket connecting to a physical device pin. Updates digital\ninput entry state.",
            "type": "class"
        },
        "control.lib.distributor": {
            "name": "control.lib.distributor",
            "shortname": "control.lib.distributor",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "control",
            "submodule": "control.distributor",
            "namespace": "",
            "file": "../control/lib/distributor/index.js",
            "line": 22,
            "caption": "Power distributor kind",
            "readme": "[Entry kind] defining power behaviour of distributors.",
            "extends": "ose.lib.kind",
            "type": "class"
        },
        "control.lib.door": {
            "name": "control.lib.door",
            "shortname": "control.lib.door",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "control",
            "submodule": "control.room",
            "namespace": "",
            "file": "../control/lib/door/index.js",
            "line": 13,
            "caption": "Door kind",
            "readme": "Each [entry] of this kind establishes a [link] to the `data.master`\ncontroller entry with `type: \"din\"`. Entry state is changed\ndepending on the incoming data, and the `open` or `close` events\nare fired. These events can be listened for, and appropriate\nactions can be taken.",
            "aliases": "door doors doorEntry",
            "extends": "ose.lib.kind",
            "type": "class"
        },
        "control.lib.door.pin": {
            "name": "control.lib.door.pin",
            "shortname": "control.lib.door.pin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "control",
            "submodule": "control.room",
            "namespace": "",
            "file": "../control/lib/door/pin.js",
            "line": 10,
            "caption": "Door-to-controller pin client socket",
            "readme": "Establishes a link to the `data.master` controller pin `data.pin`\nwith `type: \"din\"`. The controller can be a [Raspberry Pi] or [OSE\nMain board], for example.",
            "type": "class"
        },
        "control.lib.flowMeter": {
            "name": "control.lib.flowMeter",
            "shortname": "control.lib.flowMeter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "control",
            "submodule": "control.distributor",
            "namespace": "",
            "file": "../control/lib/flowMeter/index.js",
            "line": 11,
            "caption": "Flow meter kind",
            "readme": "Kind defining flow meters of liquids or gasses.\n\nEach entry of this kind established a new [link] to the master by\nsending a `registerPin()` command with `type: \"din\"`, `flavour:\n\"counter\"` and a client socket. The `state.value` of the entry then\nincrements with each master pin change. State changes are debounced\nusing the `state.debounce` value.",
            "extends": "ose.lib.kind",
            "type": "class"
        },
        "control.lib.heater": {
            "name": "control.lib.heater",
            "shortname": "control.lib.heater",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "control",
            "submodule": "control.room",
            "namespace": "",
            "file": "../control/lib/heater/index.js",
            "line": 14,
            "caption": "Heater kind",
            "readme": "[Entry kind] defining behaviour of heaters. Each heater establishes\na [link] to the `data.master` entry with a `registerPin()`\n[command] and to an optional `data.tariff` entry to watch low and\nhigh tariff switching.",
            "aliases": "heater heaters heaterEntry",
            "extends": "ose.lib.kind",
            "type": "class"
        },
        "control.lib.heater.pin": {
            "name": "control.lib.heater.pin",
            "shortname": "control.lib.heater.pin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "control",
            "submodule": "control.room",
            "namespace": "",
            "file": "../control/lib/heater/pin.js",
            "line": 10,
            "caption": "Heater-to-controller pin client socket",
            "readme": "Establishes a [link] to the `data.master` [controller pin]\n`data.pin` with `type: \"dout\"`. The master can be a [Raspberry Pi]\nor [OSE Main board], for example.",
            "type": "class"
        },
        "control.lib.heater.tariff": {
            "name": "control.lib.heater.tariff",
            "shortname": "control.lib.heater.tariff",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "control",
            "submodule": "control.room",
            "namespace": "",
            "file": "../control/lib/heater/tariff.js",
            "line": 10,
            "caption": "Heater-to-tariff client socket",
            "readme": "Establishes a link to the `data.tariff` entry.",
            "type": "class"
        },
        "control.lib.light": {
            "name": "control.lib.light",
            "shortname": "control.lib.light",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "control",
            "submodule": "control.room",
            "namespace": "",
            "file": "../control/lib/light/index.js",
            "line": 14,
            "caption": "Light kind",
            "readme": "[Entry kind] defining behaviour of lights. Each light consists of\nchannels. Each channel is controlled by some `master`\ncontroller. It is possible to use dimming when the controller\nsupports it. This component allows to easily create lights composed\nof LED strips that can smoothly change the colour and intensity,\nand do any other effects.\n\nSmooth changes of light intensity can be controlled through the\n`speed` value, which defines the time in milliseconds it takes\nchange the light intensity from 0 to 100% or vice versa.\n\nEach light supports auto-off timeout since last change with\nconfigurable dim speed.\n\nEvery light can be controlled by a [switch entry] with the\nfollowing behaviour:\n- One tap when shining: Switch the light off.\n- One tap when off: Switch to the default configurable value.\n- Two taps: Switch the light fully on.\n- Hold: Switch the light off.",
            "aliases": "light lights lightEntry",
            "extends": "ose.lib.kind",
            "type": "class"
        },
        "control.lib.light.pin": {
            "name": "control.lib.light.pin",
            "shortname": "control.lib.light.pin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "control",
            "submodule": "control.room",
            "namespace": "",
            "file": "../control/lib/light/pin.js",
            "line": 10,
            "caption": "Light chanell-to-controller pin client socket",
            "readme": "Establishes a link for a channel to the `data.master`\ncontroller. The controller can be an [OSE PWM board], for example.",
            "type": "class"
        },
        "control.lib.light.remote": {
            "name": "control.lib.light.remote",
            "shortname": "control.lib.light.remote",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "control",
            "submodule": "control.remote",
            "namespace": "",
            "file": "../control/lib/light/remote.js",
            "line": 10,
            "caption": "Remote controller command group class for lights",
            "readme": "Facilitates configuration of controlling lights with remote\ncontrollers.",
            "type": "class"
        },
        "control.lib.light.switch": {
            "name": "control.lib.light.switch",
            "shortname": "control.lib.light.switch",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "control",
            "submodule": "control.room",
            "namespace": "",
            "file": "../control/lib/light/switch.js",
            "line": 10,
            "caption": "Light-to-switch client socket",
            "readme": "Establishes a link to a [switch] controlling behaviour of a light.",
            "type": "class"
        },
        "control.lib.pin.commands": {
            "name": "control.lib.pin.commands",
            "shortname": "control.lib.pin.commands",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "control",
            "submodule": "control.pin",
            "namespace": "",
            "file": "../control/lib/pin/commands.js",
            "line": 7,
            "caption": "Pin list commands",
            "readme": "Commands that are registered on [entry kinds] creating a list of\npins for their [entries].",
            "type": "extend"
        },
        "control.lib.pin.counter": {
            "name": "control.lib.pin.counter",
            "shortname": "control.lib.pin.counter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "control",
            "submodule": "control.pin",
            "namespace": "",
            "file": "../control/lib/pin/counter.js",
            "line": 9,
            "caption": "Counter pin flavour",
            "readme": "Setup of a digital input pin acting as a counter. When a pin\nchanges its value to 1, the counter increments. `link.update()` is\nsent throttled by a timeout defined in the request or the default\ntimeout of 1 second.\n\nThis pin flavour can be used, for example, by a gas or liquid flow\nmeter.",
            "type": "extend"
        },
        "control.lib.pin.din": {
            "name": "control.lib.pin.din",
            "shortname": "control.lib.pin.din",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "control",
            "submodule": "control.pin",
            "namespace": "",
            "file": "../control/lib/pin/din.js",
            "line": 9,
            "caption": "Digital input pin type",
            "readme": "Setup of digital input pin.",
            "type": "extend"
        },
        "control.lib.pin.dout": {
            "name": "control.lib.pin.dout",
            "shortname": "control.lib.pin.dout",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "control",
            "submodule": "control.pin",
            "namespace": "",
            "file": "../control/lib/pin/dout.js",
            "line": 7,
            "caption": "Digital output pin type",
            "readme": "Setup of digital output pin.",
            "type": "extend"
        },
        "control.lib.pin": {
            "name": "control.lib.pin",
            "shortname": "control.lib.pin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "control",
            "submodule": "control.pin",
            "namespace": "",
            "file": "../control/lib/pin/index.js",
            "line": 93,
            "caption": "Pin response socket",
            "readme": "Response socket representing one pin that handles the communication\nwith a client.",
            "aliases": "controllerPin",
            "type": "class"
        },
        "control.lib.pin.light": {
            "name": "control.lib.pin.light",
            "shortname": "control.lib.pin.light",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "control",
            "submodule": "control.pin",
            "namespace": "",
            "file": "../control/lib/pin/light.js",
            "line": 9,
            "caption": "Light pin flavour",
            "readme": "Flavour controlling pins to which one light channel is connected as\na slave. This flavour allows smooth light dimming.",
            "type": "extend"
        },
        "control.lib.pin.list": {
            "name": "control.lib.pin.list",
            "shortname": "control.lib.pin.list",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "control",
            "submodule": "control.pin",
            "namespace": "",
            "file": "../control/lib/pin/list.js",
            "line": 12,
            "caption": "Pin List",
            "readme": "List of pins registered to the owning entry.",
            "type": "class"
        },
        "control.lib.pin.pwm": {
            "name": "control.lib.pin.pwm",
            "shortname": "control.lib.pin.pwm",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "control",
            "submodule": "control.pin",
            "namespace": "",
            "file": "../control/lib/pin/pwm.js",
            "line": 7,
            "caption": "PWM pin type",
            "readme": "PWM pin type",
            "type": "module"
        },
        "control.lib.pin.switch": {
            "name": "control.lib.pin.switch",
            "shortname": "control.lib.pin.switch",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "control",
            "submodule": "control.pin",
            "namespace": "",
            "file": "../control/lib/pin/switch.js",
            "line": 10,
            "caption": "Switch pin flavour",
            "readme": "Processes pin changes and calls `link.press()`, `link.release()`,\n`link.tap(count)` or `link.hold()` instead of `link.update()`.",
            "type": "extend"
        },
        "control.lib.room": {
            "name": "control.lib.room",
            "shortname": "control.lib.room",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "control",
            "submodule": "control.room",
            "namespace": "",
            "file": "../control/lib/room/index.js",
            "line": 20,
            "caption": "Room kind",
            "readme": "[Entry kind] defining behaviour of rooms.\n\nVarious activities can be defined for each room. Activities govern\nthe behaviour of rooms. When an activity is selected, it sends\ncommands to entries and trigger scheduled actions.\n\nEach activity is identified by its name and can be selected by a\ncommand sent to the room entry. Each activity should be a\ndescendant of the [activity class].\n\nExample:\n\nThe living room may have the following activities defined:\n\n- watching TV (lights dimmed, TV on, blinds down if dark outside,\n    etc.)\n- tidying (lights fully on, radio on)\n- reading (lights half on, multimedia off)\n\nAnother example:\n\nThe house may have the following activities:\n- at home (full comfort)\n- empty house (detection of intruders, heating down, etc.)\n- vacation (random actions simulating the presence of inhabitants)",
            "extends": "ose.lib.kind",
            "type": "class"
        },
        "control.lib.switch": {
            "name": "control.lib.switch",
            "shortname": "control.lib.switch",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "control",
            "submodule": "control.room",
            "namespace": "",
            "file": "../control/lib/switch/index.js",
            "line": 14,
            "caption": "Switch kind",
            "readme": "Each switch is a digital input that has two logical values: `0` or `1`.\n\nEach [entry] of this kind establishes a [link] to the `data.master`\ncontroller entry with `flavour: \"switch\"`.\n\n`press`, `release`, `tap` and `hold` events are fired on the entry,\nand the state of the entry is updated depending on controller pin\nchanges. These events can be listened for, and appropriate actions\ncan be taken.\n\nIt is also possible to establish a new [link] to a switch as a\nslave with the `relay(req, slave)` command. The events listed above\nare then relayed to the `slave` socket.\n\nFor example, a [light entry] connects to a switch (if defined in\n`light.data.switch`) as a slave and is turned on or off depending\non pressing the switch.",
            "aliases": "switch switchEntry",
            "extends": "ose.lib.kind",
            "type": "class"
        },
        "control.lib.switch.socket": {
            "name": "control.lib.switch.socket",
            "shortname": "control.lib.switch.socket",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "control",
            "submodule": "control.room",
            "namespace": "",
            "file": "../control/lib/switch/pin.js",
            "line": 10,
            "caption": "Switch-to-controller client socket",
            "readme": "Establishes a link to the `data.master` controller. The controller\ncan be a [Raspberry Pi] or [OSE Main board], for example.",
            "extends": "ose.lib.entry.command",
            "type": "class"
        },
        "control.lib.switch.relay": {
            "name": "control.lib.switch.relay",
            "shortname": "control.lib.switch.relay",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "control",
            "submodule": "control.room",
            "namespace": "",
            "file": "../control/lib/switch/relay.js",
            "line": 10,
            "caption": "Switch relay response socket",
            "readme": "[Response socket] relaying the switch entry events to the slave.",
            "type": "class"
        },
        "control.lib.activity": {
            "name": "control.lib.activity",
            "shortname": "control.lib.activity",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "control",
            "submodule": "control.room",
            "namespace": "",
            "file": "../control/lib/activity.js",
            "line": 12,
            "caption": "Activity class",
            "readme": "Ancestor for activity definintions",
            "type": "class"
        },
        "control.lib": {
            "name": "control.lib",
            "shortname": "control.lib",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "control",
            "namespace": "",
            "file": "../control/lib/index.js",
            "line": 46,
            "caption": "OSE Control core",
            "readme": "Core singleton of ose-control npm package. Register [entry kinds]\ndefined by this package to the `\"control\"` [scope].",
            "type": "singleton"
        },
        "control.lib.remote": {
            "name": "control.lib.remote",
            "shortname": "control.lib.remote",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "control",
            "submodule": "control.remote",
            "namespace": "",
            "file": "../control/lib/remote.js",
            "line": 26,
            "caption": "Remote control module",
            "readme": "Methods allowing the setup of remote controller"
        },
        "control.content": {
            "name": "control.content",
            "shortname": "control.content",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "control",
            "namespace": "",
            "file": "../control/content.js",
            "line": 12,
            "caption": "OSE Control content",
            "readme": "Provides files of OSE Control package to the browser.",
            "type": "singleton",
            "extends": "ose.lib.http.content"
        },
        "dvb.lib.channel": {
            "name": "dvb.lib.channel",
            "shortname": "dvb.lib.channel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "dvb",
            "namespace": "",
            "file": "../dvb/lib/channel/index.js",
            "line": 11,
            "caption": "DVB channel kind",
            "readme": "[Entry kind] describing DVB channels.",
            "extends": "ose.lib.kind",
            "type": "singleton"
        },
        "dvb.lib": {
            "name": "dvb.lib",
            "shortname": "dvb.lib",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "dvb",
            "namespace": "",
            "file": "../dvb/lib/index.js",
            "line": 25,
            "caption": "OSE DVB core",
            "readme": "Core singleton of ose-dvb npm package. Registers [entry kinds]\ndefined by this package to the `\"media\"` [scope].",
            "type": "singleton"
        },
        "dvb.content": {
            "name": "dvb.content",
            "shortname": "dvb.content",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "dvb",
            "namespace": "",
            "file": "../dvb/content.js",
            "line": 12,
            "caption": "OSE DVB content",
            "readme": "Provides files of OSE DVB package to the browser.",
            "type": "singleton",
            "extends": "ose.lib.http.content"
        },
        "fs.lib.dir": {
            "name": "fs.lib.dir",
            "shortname": "fs.lib.dir",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "fs",
            "namespace": "",
            "file": "../fs/lib/dir/index.js",
            "line": 11,
            "caption": "Dir kind",
            "readme": "[Entry kind] describing directories.",
            "extends": "ose.lib.kind",
            "type": "singleton"
        },
        "fs.lib.file": {
            "name": "fs.lib.file",
            "shortname": "fs.lib.file",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "fs",
            "namespace": "",
            "file": "../fs/lib/file/index.js",
            "line": 11,
            "caption": "File kind",
            "readme": "[Entry kind] describing files.",
            "extends": "ose.lib.kind",
            "type": "singleton"
        },
        "fs.lib": {
            "name": "fs.lib",
            "shortname": "fs.lib",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "fs",
            "namespace": "",
            "file": "../fs/lib/index.js",
            "line": 19,
            "caption": "OSE Filesystem core",
            "readme": "Core singleton of ose-fs npm package. Registers [entry kinds]\ndefined by this package to the `\"fs\"` [scope].",
            "type": "singleton"
        },
        "fs.content": {
            "name": "fs.content",
            "shortname": "fs.content",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "fs",
            "namespace": "",
            "file": "../fs/content.js",
            "line": 12,
            "caption": "OSE Filesystem content",
            "readme": "Provides files of OSE Filesystem package to the browser.",
            "type": "singleton",
            "extends": "ose.lib.http.content"
        },
        "icecast.lib.stream": {
            "name": "icecast.lib.stream",
            "shortname": "icecast.lib.stream",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "icecast",
            "namespace": "",
            "file": "../icecast/lib/radio/index.js",
            "line": 11,
            "caption": "Icecast stream kind",
            "readme": "[Entry kind] describing Icecast streams.",
            "extends": "ose.lib.kind",
            "type": "singleton"
        },
        "icecast.lib": {
            "name": "icecast.lib",
            "shortname": "icecast.lib",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "icecast",
            "namespace": "",
            "file": "../icecast/lib/index.js",
            "line": 21,
            "caption": "OSE Icecast core",
            "readme": "Core singleton of ose-icecast npm package. Registers [entry kinds]\ndefined by this package to the `\"icecast\"` [scope].",
            "type": "singleton"
        },
        "icecast.content": {
            "name": "icecast.content",
            "shortname": "icecast.content",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "icecast",
            "namespace": "",
            "file": "../icecast/content.js",
            "line": 12,
            "caption": "OSE Icecast content",
            "readme": "Provides files of OSE Icecast package to the browser.",
            "type": "singleton",
            "extends": "ose.lib.http.content"
        },
        "media.lib.item": {
            "name": "media.lib.item",
            "shortname": "media.lib.item",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "media",
            "submodule": "media.history",
            "namespace": "",
            "file": "../media/lib/item/index.js",
            "line": 19,
            "caption": "Media item kind",
            "readme": "The media item entry represents a single media item that can be\nplayed back. It contains a reference to another entry and\nadditional data depending on the source.",
            "extends": "ose.lib.kind",
            "type": "singleton"
        },
        "media.lib.player.commands": {
            "name": "media.lib.player.commands",
            "shortname": "media.lib.player.commands",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "media",
            "submodule": "media.player",
            "namespace": "",
            "file": "../media/lib/player/commands.js",
            "line": 12,
            "caption": "Media player command handlers",
            "readme": "Command handlers for entries of media player kind"
        },
        "media.lib.player.dvb": {
            "name": "media.lib.player.dvb",
            "shortname": "media.lib.player.dvb",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "media",
            "submodule": "media.player",
            "namespace": "",
            "file": "../media/lib/player/dvb.js",
            "line": 10,
            "caption": "Media player to dvb client socket",
            "readme": "Establishes [link] to a dvb entry.",
            "type": "class"
        },
        "media.lib.player": {
            "name": "media.lib.player",
            "shortname": "media.lib.player",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "media",
            "submodule": "media.player",
            "namespace": "",
            "file": "../media/lib/player/index.js",
            "line": 27,
            "caption": "Media player kind",
            "readme": "On each entry initialization, [links] to volume control, playback\nand DVB streamer entries are established. Every entry of this kind\nhandles commands to control media playback.",
            "extends": "ose.lib.kind",
            "type": "singleton"
        },
        "media.lib.player.playback": {
            "name": "media.lib.player.playback",
            "shortname": "media.lib.player.playback",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "media",
            "submodule": "media.player",
            "namespace": "",
            "file": "../media/lib/player/playback.js",
            "line": 10,
            "caption": "Media player-to-playback client socket",
            "readme": "Establishes a [link] to a playback entry.",
            "type": "class"
        },
        "media.lib.player.volume": {
            "name": "media.lib.player.volume",
            "shortname": "media.lib.player.volume",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "media",
            "submodule": "media.player",
            "namespace": "",
            "file": "../media/lib/player/volume.js",
            "line": 10,
            "caption": "Media player to volume client socket",
            "readme": "Establishes a [link] to a volume entry.",
            "type": "class"
        },
        "media.lib.stream": {
            "name": "media.lib.stream",
            "shortname": "media.lib.stream",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "media",
            "submodule": "media.stream",
            "namespace": "",
            "file": "../media/lib/stream/index.js",
            "line": 19,
            "caption": "Media stream kind",
            "readme": "Media stream entry represents a single media stream that can be\nplayed back.",
            "extends": "ose.lib.kind",
            "type": "singleton"
        },
        "media.lib": {
            "name": "media.lib",
            "shortname": "media.lib",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "media",
            "namespace": "",
            "file": "../media/lib/index.js",
            "line": 28,
            "caption": "OSE Media core",
            "readme": "Core singleton of [ose-media] npm package. Registers [entry kinds]\ndefined by this package to the `media` [scope].",
            "type": "singleton"
        },
        "media.lib.sources": {
            "name": "media.lib.sources",
            "shortname": "media.lib.sources",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "media",
            "submodule": "media.source",
            "namespace": "",
            "file": "../media/lib/sources.js",
            "line": 29,
            "caption": "Media sources singleton",
            "readme": "Singleton containing all media sources.",
            "type": "singleton"
        },
        "media.content": {
            "name": "media.content",
            "shortname": "media.content",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "media",
            "namespace": "",
            "file": "../media/content.js",
            "line": 12,
            "caption": "OSE Media content",
            "readme": "Provides files of OSE Media package to the browser.",
            "type": "singleton",
            "extends": "ose.lib.http.content"
        },
        "lirc.lib.lirc": {
            "name": "lirc.lib.lirc",
            "shortname": "lirc.lib.lirc",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "lirc",
            "namespace": "",
            "file": "../lirc/lib/lirc/index.js",
            "line": 11,
            "caption": "LIRC kind",
            "readme": "Entry kind for connecting to and communicating with the LIRC\ndaemon.\n\nUses [control.remote] component."
        },
        "lirc.lib": {
            "name": "lirc.lib",
            "shortname": "lirc.lib",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "lirc",
            "namespace": "",
            "file": "../lirc/lib/index.js",
            "line": 20,
            "caption": "OSE LIRC core",
            "readme": "Core singleton of ose-lirc npm package. Register [entry kinds]\ndefined by this package to the `\"control\"` [scope].",
            "type": "singleton"
        },
        "lirc.content": {
            "name": "lirc.content",
            "shortname": "lirc.content",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "lirc",
            "namespace": "",
            "file": "../lirc/content.js",
            "line": 12,
            "caption": "OSE LIRC content",
            "readme": "Provides files of OSE LIRC package to the browser.",
            "type": "singleton",
            "extends": "ose.lib.http.content"
        },
        "pa.lib.dbus": {
            "name": "pa.lib.dbus",
            "shortname": "pa.lib.dbus",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "pa",
            "namespace": "",
            "file": "../pa/lib/dbus/index.js",
            "line": 11,
            "caption": "PulseAudio control kind",
            "readme": "[Entry kind] for PulseAudio instances\n\nEach entry communicates with PulseAudio via its D-Bus\ninterface. This functionality is currently implemented in a Python\nchild process.",
            "extends": "ose.lib.kind",
            "type": "singleton"
        },
        "pa.lib": {
            "name": "pa.lib",
            "shortname": "pa.lib",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "pa",
            "namespace": "",
            "file": "../pa/lib/index.js",
            "line": 17,
            "caption": "OSE PulseAudio core",
            "readme": "Core singleton of ose-pa npm package. Registers [entry kinds]\ndefined by this package to the `\"control\"` [scope].",
            "type": "singleton"
        },
        "pa.content": {
            "name": "pa.content",
            "shortname": "pa.content",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "pa",
            "namespace": "",
            "file": "../pa/content.js",
            "line": 12,
            "caption": "OSE PulseAudio content",
            "readme": "Provides files of OSE PulseAudio package to the browser.",
            "type": "singleton",
            "extends": "ose.lib.http.content"
        },
        "rpi.lib.camera": {
            "name": "rpi.lib.camera",
            "shortname": "rpi.lib.camera",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "rpi",
            "namespace": "",
            "file": "../rpi/lib/camera/index.js",
            "line": 11,
            "caption": "Raspberry PI camera kind",
            "readme": "[Entry kind] describing Raspberry PI cameras. It uses the raspicam\nnpm package to take pictures.",
            "extends": "ose.lib.kind",
            "type": "singleton"
        },
        "rpi.lib.rpi": {
            "name": "rpi.lib.rpi",
            "shortname": "rpi.lib.rpi",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "rpi",
            "namespace": "",
            "file": "../rpi/lib/rpi/index.js",
            "line": 11,
            "caption": "Raspberry PI kind",
            "readme": "[Entry kind] describing Raspberry PI boards. It is possible to\ncontrol GPIO pins using the [Pins] class.",
            "extends": "ose.lib.kind",
            "type": "singleton"
        },
        "rpi.lib": {
            "name": "rpi.lib",
            "shortname": "rpi.lib",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "rpi",
            "namespace": "",
            "file": "../rpi/lib/index.js",
            "line": 19,
            "caption": "OSE Raspberry core",
            "readme": "Core singleton of ose-rpi npm package. Registers [entry kinds]\ndefined by this package to the `\"control\"` [scope].",
            "type": "singleton"
        },
        "rpi.content": {
            "name": "rpi.content",
            "shortname": "rpi.content",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "rpi",
            "namespace": "",
            "file": "../rpi/content.js",
            "line": 12,
            "caption": "OSE Raspberry content",
            "readme": "Provides files of OSE Raspberry package to the browser.",
            "type": "singleton",
            "extends": "ose.lib.http.content"
        },
        "videolan.lib.dvblast": {
            "name": "videolan.lib.dvblast",
            "shortname": "videolan.lib.dvblast",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "videolan",
            "namespace": "",
            "file": "../videolan/lib/vlc/node.js",
            "line": 13,
            "caption": "DVBlast kind",
            "readme": "[Entry kind] allowing to control DVBlast software",
            "mainName": "videolan.lib.dvblast",
            "tag": "main",
            "itemtype": "main",
            "_main": true,
            "extends": "ose.lib.kind",
            "type": "singleton"
        },
        "videolan.lib.dvblast.master": {
            "name": "videolan.lib.dvblast.master",
            "shortname": "videolan.lib.dvblast.master",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "videolan",
            "namespace": "",
            "file": "../videolan/lib/dvblast/master.js",
            "line": 13,
            "caption": "DVBlast response socket",
            "readme": "[Response socket] relaying the switch entry events to the client.\n\nTODO",
            "type": "class"
        },
        "videolan.lib.vlc": {
            "name": "videolan.lib.vlc",
            "shortname": "videolan.lib.vlc",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "videolan",
            "namespace": "",
            "file": "../videolan/lib/vlc/index.js",
            "line": 14,
            "caption": "VLC kind",
            "readme": "[Entry kind] allowing to control VLC",
            "mainName": "videolan.lib.vlc",
            "tag": "main",
            "itemtype": "main",
            "_main": true,
            "extends": "ose.lib.kind",
            "type": "singleton"
        },
        "videolan.lib": {
            "name": "videolan.lib",
            "shortname": "videolan.lib",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "videolan",
            "namespace": "",
            "file": "../videolan/lib/index.js",
            "line": 21,
            "caption": "OSE VideoLAN core",
            "readme": "Core singleton of ose-videolan npm package. Registers [entry kinds]\ndefined by this package to the `\"control\"` [scope].",
            "type": "singleton"
        },
        "videolan.content": {
            "name": "videolan.content",
            "shortname": "videolan.content",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "videolan",
            "namespace": "",
            "file": "../videolan/content.js",
            "line": 12,
            "caption": "OSE VideoLAN content",
            "readme": "Provides files of OSE VideoLAN package to the browser.",
            "type": "singleton",
            "extends": "ose.lib.http.content"
        },
        "xorg.lib.xorg": {
            "name": "xorg.lib.xorg",
            "shortname": "xorg.lib.xorg",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xorg",
            "namespace": "",
            "file": "../xorg/lib/xorg/index.js",
            "line": 11,
            "caption": "X.Org server kind",
            "readme": "[Entry kind] for X.Org server\n\nIt uses xdotool to remotely control the desktop.",
            "extends": "ose.lib.kind",
            "type": "singleton"
        },
        "xorg.lib": {
            "name": "xorg.lib",
            "shortname": "xorg.lib",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xorg",
            "namespace": "",
            "file": "../xorg/lib/index.js",
            "line": 17,
            "caption": "OSE X.Org core",
            "readme": "Core singleton of ose-xorg npm package. Registers [entry kinds]\ndefined by this package to the `\"control\"` [scope].",
            "type": "singleton"
        },
        "xorg.content": {
            "name": "xorg.content",
            "shortname": "xorg.content",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xorg",
            "namespace": "",
            "file": "../xorg/content.js",
            "line": 12,
            "caption": "OSE X.Org content",
            "readme": "Provides files of OSE X.Org package to the browser.",
            "type": "singleton",
            "extends": "ose.lib.http.content"
        },
        "yoctopuce.lib.meteo": {
            "name": "yoctopuce.lib.meteo",
            "shortname": "yoctopuce.lib.meteo",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "yoctopuce",
            "namespace": "",
            "file": "../yoctopuce/lib/hub/index.js",
            "line": 11,
            "caption": "Yoctopuce meteo kind",
            "readme": "[Entry kind] representing Yoctopuce meteo sensors.",
            "extends": "ose.lib.kind",
            "type": "singleton"
        },
        "yoctopuce.lib": {
            "name": "yoctopuce.lib",
            "shortname": "yoctopuce.lib",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "yoctopuce",
            "namespace": "",
            "file": "../yoctopuce/lib/index.js",
            "line": 18,
            "caption": "OSE yoctopuce core",
            "readme": "Core singleton of ose-yoctopuce npm package. Registers [entry kinds]\ndefined by this package to the `\"control\"` [scope].",
            "type": "singleton"
        },
        "yoctopuce.content": {
            "name": "yoctopuce.content",
            "shortname": "yoctopuce.content",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "yoctopuce",
            "namespace": "",
            "file": "../yoctopuce/content.js",
            "line": 12,
            "caption": "OSE yoctopuce content",
            "readme": "Provides files of OSE yoctopuce package to the browser.",
            "type": "singleton",
            "extends": "ose.lib.http.content"
        },
        "youtube.lib.video": {
            "name": "youtube.lib.video",
            "shortname": "youtube.lib.video",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "youtube",
            "namespace": "",
            "file": "../youtube/lib/video/index.js",
            "line": 11,
            "caption": "YouTube video kind",
            "readme": "[Entry kind] representing YouTube videos.",
            "extends": "ose.lib.kind",
            "type": "singleton"
        },
        "youtube.lib": {
            "name": "youtube.lib",
            "shortname": "youtube.lib",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "youtube",
            "namespace": "",
            "file": "../youtube/lib/index.js",
            "line": 21,
            "caption": "OSE YouTube core",
            "readme": "Core singleton of ose-youtube npm package. Registers [entry kinds]\ndefined by this package to the `\"media\"` [scope].",
            "type": "singleton"
        },
        "youtube.content": {
            "name": "youtube.content",
            "shortname": "youtube.content",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "youtube",
            "namespace": "",
            "file": "../youtube/content.js",
            "line": 12,
            "caption": "OSE YouTube content",
            "readme": "Provides files of OSE YouTube package to the browser.",
            "type": "singleton",
            "extends": "ose.lib.http.content"
        }
    },
    "classitems": [
        {
            "file": "../ose/lib/entry/command.js",
            "line": 21,
            "description": "Entry sending a command",
            "itemtype": "property",
            "name": "entry",
            "type": "Object",
            "class": "ose.lib.entry.link",
            "module": "bundle",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/entry/command.js",
            "line": 28,
            "description": "Identification of target entry",
            "itemtype": "property",
            "name": "target",
            "type": "Number|String|Object",
            "class": "ose.lib.entry.link",
            "module": "bundle",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/entry/command.js",
            "line": 35,
            "description": "Command name",
            "itemtype": "property",
            "name": "command",
            "type": "String",
            "class": "ose.lib.entry.link",
            "module": "bundle",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/entry/command.js",
            "line": 42,
            "description": "Optional command data",
            "itemtype": "property",
            "name": "[data]",
            "type": "*",
            "class": "ose.lib.entry.link",
            "module": "bundle",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/entry/command.js",
            "line": 49,
            "description": "Target shard",
            "itemtype": "property",
            "name": "shard",
            "type": "Object",
            "class": "ose.lib.entry.link",
            "module": "bundle",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/entry/command.js",
            "line": 59,
            "description": "Socket constructor",
            "params": [
                {
                    "name": "entry",
                    "description": "Source entry",
                    "type": "Object"
                },
                {
                    "name": "target",
                    "description": "Target entry identification",
                    "type": "Number|String|Object"
                },
                {
                    "name": "command",
                    "description": "Command name",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "Optional data",
                    "type": "*",
                    "optional": true
                }
            ],
            "itemtype": "method",
            "name": "constructor",
            "class": "ose.lib.entry.link",
            "module": "bundle",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/entry/command.js",
            "line": 100,
            "description": "Open handler.",
            "itemtype": "method",
            "name": "open",
            "class": "ose.lib.entry.link",
            "module": "bundle",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/entry/command.js",
            "line": 110,
            "description": "Close handler clears this socket.",
            "itemtype": "method",
            "name": "close",
            "class": "ose.lib.entry.link",
            "module": "bundle",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/entry/command.js",
            "line": 126,
            "description": "Error handler tries to reopen the link in case of network problems.",
            "params": [
                {
                    "name": "err",
                    "description": "[Error] instance",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "error",
            "class": "ose.lib.entry.link",
            "module": "bundle",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/entry/index.js",
            "line": 41,
            "description": "ID of entry within shard",
            "itemtype": "property",
            "name": "id",
            "type": "String",
            "class": "ose.lib.entry",
            "module": "bundle",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/entry/index.js",
            "line": 48,
            "description": "Reference to containing [shard]",
            "itemtype": "property",
            "name": "shard",
            "type": "Object",
            "class": "ose.lib.entry",
            "module": "bundle",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/entry/index.js",
            "line": 55,
            "description": "Reference to [entry kind]",
            "itemtype": "property",
            "name": "kind",
            "type": "Object",
            "class": "ose.lib.entry",
            "module": "bundle",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/entry/index.js",
            "line": 62,
            "description": "Timestamp in microseconds of last data update",
            "itemtype": "property",
            "name": "drev",
            "type": "Number",
            "class": "ose.lib.entry",
            "module": "bundle",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/entry/index.js",
            "line": 69,
            "description": "Persistent data",
            "itemtype": "property",
            "name": "data",
            "type": "Object",
            "class": "ose.lib.entry",
            "module": "bundle",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/entry/index.js",
            "line": 76,
            "description": "Reference to [slave entry client socket]",
            "itemtype": "property",
            "name": "master",
            "type": "Objectp",
            "class": "ose.lib.entry",
            "module": "bundle",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/entry/index.js",
            "line": 83,
            "description": "Timestamp in microseconds of last state update",
            "itemtype": "property",
            "name": "srev",
            "type": "Number",
            "class": "ose.lib.entry",
            "module": "bundle",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/entry/index.js",
            "line": 90,
            "description": "Non-persistent data",
            "itemtype": "property",
            "name": "state",
            "type": "Object",
            "class": "ose.lib.entry",
            "module": "bundle",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/entry/index.js",
            "line": 97,
            "description": "Indicates whether entry is sync with its home",
            "itemtype": "property",
            "name": "synced",
            "type": "Boolean",
            "class": "ose.lib.entry",
            "module": "bundle",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/entry/index.js",
            "line": 104,
            "description": "Queued state",
            "itemtype": "property",
            "name": "queuedState",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "ose.lib.entry",
            "module": "bundle",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/entry/index.js",
            "line": 112,
            "description": "Timeout handle",
            "itemtype": "property",
            "name": "queueStateHandle",
            "type": "Number",
            "access": "private",
            "tagname": "",
            "class": "ose.lib.entry",
            "module": "bundle",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/entry/index.js",
            "line": 120,
            "description": "Setup this property to enable set state queue",
            "itemtype": "property",
            "name": "queueStateTimeout",
            "type": "Number integer milliseconds",
            "class": "ose.lib.entry",
            "module": "bundle",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/entry/index.js",
            "line": 127,
            "description": "Set to TRUE when the entry is removed",
            "type": "Boolean",
            "class": "ose.lib.entry",
            "module": "bundle",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/entry/index.js",
            "line": 133,
            "description": "Last slave id",
            "itemtype": "property",
            "name": "slaveId",
            "type": "Number",
            "access": "private",
            "tagname": "",
            "class": "ose.lib.entry",
            "module": "bundle",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/entry/index.js",
            "line": 141,
            "description": "Contains all response sockets of slave entries",
            "itemtype": "property",
            "name": "slaves",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "ose.lib.entry",
            "module": "bundle",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/entry/index.js",
            "line": 149,
            "description": "Count of data trackers",
            "itemtype": "property",
            "name": "dtc",
            "type": "Number",
            "access": "private",
            "tagname": "",
            "class": "ose.lib.entry",
            "module": "bundle",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/entry/index.js",
            "line": 157,
            "description": "Count of clients state trackers",
            "itemtype": "property",
            "name": "stc",
            "type": "Number",
            "access": "private",
            "tagname": "",
            "class": "ose.lib.entry",
            "module": "bundle",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/entry/index.js",
            "line": 168,
            "description": "Entry constructor",
            "params": [
                {
                    "name": "shard",
                    "description": "Entry owner shard instance",
                    "type": "Object"
                },
                {
                    "name": "id",
                    "description": "Entry id",
                    "type": "String|Number"
                }
            ],
            "itemtype": "method",
            "name": "constructor",
            "class": "ose.lib.entry",
            "module": "bundle",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/entry/index.js",
            "line": 195,
            "description": "Sets entry properties",
            "params": [
                {
                    "name": "kind",
                    "description": "Kind of entry",
                    "type": "String|Object"
                }
            ],
            "itemtype": "method",
            "name": "setup",
            "class": "ose.lib.entry",
            "module": "bundle",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/entry/index.js",
            "line": 247,
            "description": "Removes entry from shard",
            "itemtype": "method",
            "name": "remove",
            "class": "ose.lib.entry",
            "module": "bundle",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/entry/index.js",
            "line": 283,
            "description": "Returns entry caption",
            "return": {
                "description": "Entry caption",
                "type": "String"
            },
            "itemtype": "method",
            "name": "getCaption",
            "class": "ose.lib.entry",
            "module": "bundle",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/entry/index.js",
            "line": 295,
            "description": "Executes a command on the current entry",
            "params": [
                {
                    "name": "name",
                    "description": "Command name",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "Data to be sent",
                    "type": "*"
                },
                {
                    "name": "socket",
                    "description": "Client socket",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "command",
            "class": "ose.lib.entry",
            "module": "bundle",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/entry/index.js",
            "line": 322,
            "description": "Executes a command on the entry at home.",
            "params": [
                {
                    "name": "name",
                    "description": "Command name",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "Data to be sent",
                    "type": "*",
                    "optional": true
                },
                {
                    "name": "socket",
                    "description": "Client socket",
                    "type": "Object",
                    "optional": true
                }
            ],
            "itemtype": "method",
            "name": "post",
            "class": "ose.lib.entry",
            "module": "bundle",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/entry/index.js",
            "line": 348,
            "description": "Send command to target's home",
            "params": [
                {
                    "name": "target",
                    "description": "Target id or target identification object",
                    "type": "String|Object"
                },
                {
                    "name": "name",
                    "description": "Command name",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "Data to be sent",
                    "type": "*",
                    "optional": true
                },
                {
                    "name": "socket",
                    "description": "",
                    "type": "Object|Function",
                    "optional": true
                }
            ],
            "itemtype": "method",
            "name": "postTo",
            "class": "ose.lib.entry",
            "module": "bundle",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/entry/index.js",
            "line": 412,
            "description": "Register state handlers",
            "params": [
                {
                    "name": "handlers",
                    "description": "Handlers object",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "onStates",
            "class": "ose.lib.entry",
            "module": "bundle",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/entry/index.js",
            "line": 432,
            "description": "Change entry \"state\". Can be called only in the home. Data are\naltered (unchanged keys are removed).",
            "params": [
                {
                    "name": "data",
                    "description": "Data object",
                    "type": "Object"
                },
                {
                    "name": "src",
                    "description": "Source of a change",
                    "type": "Object",
                    "optional": true
                }
            ],
            "itemtype": "method",
            "name": "setState",
            "class": "ose.lib.entry",
            "module": "bundle",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/entry/index.js",
            "line": 473,
            "description": "Tests whether entry belongs to view.\n\nTODO: Consider renaming method to isInView.",
            "params": [
                {
                    "name": "params",
                    "description": "Object containing parameters",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "itemtype": "method",
            "name": "inView",
            "class": "ose.lib.entry",
            "module": "bundle",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/entry/index.js",
            "line": 504,
            "description": "Tests whether entry is identified by data.",
            "params": [
                {
                    "name": "data",
                    "description": "Entry identification",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "itemtype": "method",
            "name": "isIdentified",
            "class": "ose.lib.entry",
            "module": "bundle",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/entry/index.js",
            "line": 522,
            "description": "Returns identification object",
            "return": {
                "description": "Identification object",
                "type": "Object"
            },
            "itemtype": "method",
            "name": "identify",
            "class": "ose.lib.entry",
            "module": "bundle",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/entry/index.js",
            "line": 538,
            "description": "Checks whether data or state are synced",
            "params": [
                {
                    "name": "what",
                    "description": "What to check (\"data\"|\"state\"|Null)",
                    "type": "String|Null"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "itemtype": "method",
            "name": "isSynced",
            "class": "ose.lib.entry",
            "module": "bundle",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/entry/index.js",
            "line": 567,
            "description": "Establishes a link to a target entry. When `req` contains a track\nrequest, the target entry will establish a link to the [home].",
            "params": [
                {
                    "name": "entry",
                    "description": "Target entry identification",
                    "type": "Object|String|Number"
                },
                {
                    "name": "req",
                    "description": "Request object",
                    "type": "Object|String",
                    "props": [
                        {
                            "name": "drev",
                            "description": "Current data revision. Specifies whether to request entry data.",
                            "type": "Object"
                        },
                        {
                            "name": "dtrack",
                            "description": "Whether to track data changes",
                            "type": "Boolean"
                        },
                        {
                            "name": "srev",
                            "description": "Current state revision. Specifies whether to request entry state.",
                            "type": "Object"
                        },
                        {
                            "name": "strack",
                            "description": "Whether to track state changes",
                            "type": "Boolean"
                        }
                    ]
                },
                {
                    "name": "socket",
                    "description": "Socket to be linked as a slave to an entry, or a callback with an entry as a response.",
                    "type": "Object|Function(err, entry)"
                }
            ],
            "async": 1,
            "itemtype": "method",
            "name": "linkTo",
            "class": "ose.lib.entry",
            "module": "bundle",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/entry/index.js",
            "line": 611,
            "description": "Finds a sibling entry.",
            "params": [
                {
                    "name": "req",
                    "description": "Entry identification",
                    "type": "Object|String|Number"
                },
                {
                    "name": "cb",
                    "description": "Callback",
                    "type": "Function (err, shard)"
                }
            ],
            "async": 1,
            "itemtype": "method",
            "name": "find",
            "class": "ose.lib.entry",
            "module": "bundle",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/entry/index.js",
            "line": 642,
            "description": "Finds a sibling shard based on an entry's identification.",
            "params": [
                {
                    "name": "req",
                    "description": "Entry identification",
                    "type": "Object|String|Number"
                },
                {
                    "name": "cb",
                    "description": "Callback",
                    "type": "Function (err, shard)"
                }
            ],
            "async": 1,
            "itemtype": "method",
            "name": "findShard",
            "class": "ose.lib.entry",
            "module": "bundle",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/entry/index.js",
            "line": 672,
            "description": "Sets `synced` property and emits `\"synced\"` event.",
            "params": [
                {
                    "name": "val",
                    "description": "Value to be set",
                    "type": "Boolean"
                }
            ],
            "itemtype": "method",
            "name": "setSynced",
            "class": "ose.lib.entry",
            "module": "bundle",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/entry/index.js",
            "line": 691,
            "description": "Updates this entry based on `req`. Called at a slave entry when\n`update` request from the master is received.",
            "params": [
                {
                    "name": "req",
                    "description": "Update object",
                    "type": "Object",
                    "props": [
                        {
                            "name": "data",
                            "description": "Data update",
                            "type": "Object"
                        },
                        {
                            "name": "drev",
                            "description": "Data revision",
                            "type": "Object"
                        },
                        {
                            "name": "state",
                            "description": "State",
                            "type": "Object"
                        },
                        {
                            "name": "srev",
                            "description": "State revision",
                            "type": "Object"
                        },
                        {
                            "name": "synced",
                            "description": "Whether the entry is synced with home",
                            "type": "Boolean"
                        }
                    ]
                },
                {
                    "name": "full",
                    "description": "Whether the update contain full data or the difference only",
                    "type": "Boolean"
                }
            ],
            "itemtype": "method",
            "name": "update",
            "class": "ose.lib.entry",
            "module": "bundle",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/entry/index.js",
            "line": 726,
            "description": "Broadcasts an entry update request to slaves",
            "params": [
                {
                    "name": "req",
                    "description": "Request object",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "broadcast",
            "class": "ose.lib.entry",
            "module": "bundle",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/entry/index.js",
            "line": 766,
            "description": "Links a [slave entry client socket]",
            "params": [
                {
                    "name": "req",
                    "description": "Request data",
                    "type": "Object"
                },
                {
                    "name": "socket",
                    "description": "Client socket",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "linkSlave",
            "class": "ose.lib.entry",
            "module": "bundle",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/entry/index.js",
            "line": 794,
            "description": "Establishes a link to the master entry.\n\nCalls `cb(err, entry)` after a entry has a defined kind and data.",
            "params": [
                {
                    "name": "cb",
                    "description": "Callback",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "linkMaster",
            "async": 1,
            "class": "ose.lib.entry",
            "module": "bundle",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/entry/index.js",
            "line": 862,
            "description": "Creates a response with `entry.data` or `entry.state` depending on\n`req`",
            "params": [
                {
                    "name": "req",
                    "description": "Request object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Response object",
                "type": "Object"
            },
            "itemtype": "method",
            "name": "respond",
            "class": "ose.lib.entry",
            "module": "bundle",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/entry/index.js",
            "line": 904,
            "description": "Method called when data or state changes should be tracked.",
            "params": [
                {
                    "name": "data",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "state",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "cb",
                    "description": "Function to be called after setup tracking.",
                    "type": "Function",
                    "optional": true
                }
            ],
            "itemtype": "method",
            "name": "tracked",
            "class": "ose.lib.entry",
            "module": "bundle",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/entry/master.js",
            "line": 23,
            "description": "Class constructor",
            "params": [
                {
                    "name": "entry",
                    "description": "Entry instance",
                    "type": "Object"
                },
                {
                    "name": "req",
                    "description": "Request object",
                    "type": "Object",
                    "props": [
                        {
                            "name": "drev",
                            "description": "Current data revision. Specifies whether to request entry data.",
                            "type": "Object"
                        },
                        {
                            "name": "dtrack",
                            "description": "Whether to track data changes",
                            "type": "Boolean"
                        },
                        {
                            "name": "srev",
                            "description": "Current state revision. Specifies whether to request entry state.",
                            "type": "Object"
                        },
                        {
                            "name": "strack",
                            "description": "Whether to track state changes",
                            "type": "Boolean"
                        }
                    ]
                },
                {
                    "name": "socket",
                    "description": "Slave socket",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "constructor",
            "class": "ose.lib.entry.master",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/entry/master.js",
            "line": 78,
            "description": "Close handler",
            "itemtype": "method",
            "name": "close",
            "class": "ose.lib.entry.master",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/entry/master.js",
            "line": 128,
            "description": "Error handler",
            "itemtype": "method",
            "name": "error",
            "class": "ose.lib.entry.master",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/entry/master.js",
            "line": 138,
            "description": "Track handler",
            "params": [
                {
                    "name": "req",
                    "description": "Request object",
                    "type": "Object",
                    "props": [
                        {
                            "name": "dtrack",
                            "description": "Whether to track data changes",
                            "type": "Boolean"
                        },
                        {
                            "name": "strack",
                            "description": "Whether to track state changes",
                            "type": "Boolean"
                        }
                    ]
                }
            ],
            "itemtype": "method",
            "name": "track",
            "class": "ose.lib.entry.master",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/entry/slave.js",
            "line": 22,
            "description": "Fired when an entry is acquired",
            "itemtype": "event",
            "name": "done",
            "class": "ose.lib.entry.slave",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/entry/slave.js",
            "line": 28,
            "description": "Slave entry",
            "itemtype": "property",
            "name": "entry",
            "type": "Object",
            "class": "ose.lib.entry.slave",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/entry/slave.js",
            "line": 37,
            "description": "Class constructor.",
            "params": [
                {
                    "name": "entry",
                    "description": "Entry",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "constructor",
            "class": "ose.lib.entry.slave",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/entry/slave.js",
            "line": 85,
            "description": "Close handler\n\nCalled when there are no more response sockets in `entry.slaves`.",
            "itemtype": "method",
            "name": "close",
            "class": "ose.lib.entry.slave",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/entry/slave.js",
            "line": 107,
            "description": "Error handler\n\nError keeps socket as `entry.master`",
            "params": [
                {
                    "name": "err",
                    "description": "Error object",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "error",
            "class": "ose.lib.entry.slave",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/entry/slave.js",
            "line": 125,
            "description": "Update handler. Updates `this.entry` based on `req`. Broadcast `req` to `this.entry.slaves`.",
            "params": [
                {
                    "name": "req",
                    "description": "Update object",
                    "type": "Object",
                    "props": [
                        {
                            "name": "kind",
                            "description": "Setup the entry kind",
                            "type": "String"
                        },
                        {
                            "name": "data",
                            "description": "Data update",
                            "type": "Object"
                        },
                        {
                            "name": "drev",
                            "description": "Data revision",
                            "type": "Object"
                        },
                        {
                            "name": "state",
                            "description": "State",
                            "type": "Object"
                        },
                        {
                            "name": "srev",
                            "description": "State revision",
                            "type": "Object"
                        },
                        {
                            "name": "synced",
                            "description": "Whether the entry is synced with the home",
                            "type": "Boolean"
                        }
                    ]
                }
            ],
            "itemtype": "method",
            "name": "update",
            "class": "ose.lib.entry.slave",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/field/object.js",
            "line": 8,
            "description": "- What can be doc child?\n  another object \n  array doc\n  field\n\n- Every child must have following properties:\n  name",
            "class": "ose.lib.http.content",
            "module": "ose"
        },
        {
            "file": "../ose/lib/http/content.js",
            "line": 25,
            "description": "Content name",
            "itemtype": "property",
            "name": "name",
            "type": "String",
            "class": "ose.lib.http.content",
            "module": "ose",
            "submodule": "ose.http"
        },
        {
            "file": "../ose/lib/http/content.js",
            "line": 32,
            "description": "Path to content",
            "itemtype": "property",
            "name": "path",
            "type": "String",
            "class": "ose.lib.http.content",
            "module": "ose",
            "submodule": "ose.http"
        },
        {
            "file": "../ose/lib/http/content.js",
            "line": 39,
            "description": "List of modules provided by this content instance.",
            "itemtype": "property",
            "name": "modules",
            "type": "Object",
            "class": "ose.lib.http.content",
            "module": "ose",
            "submodule": "ose.http"
        },
        {
            "file": "../ose/lib/http/content.js",
            "line": 46,
            "description": "List of JavaScript files provided by this content instance.",
            "itemtype": "property",
            "name": "scripts",
            "type": "Object",
            "class": "ose.lib.http.content",
            "module": "ose",
            "submodule": "ose.http"
        },
        {
            "file": "../ose/lib/http/content.js",
            "line": 53,
            "description": "List of CSS style files provided by this content instance.",
            "itemtype": "property",
            "name": "styles",
            "type": "Object",
            "class": "ose.lib.http.content",
            "module": "ose",
            "submodule": "ose.http"
        },
        {
            "file": "../ose/lib/http/content.js",
            "line": 60,
            "description": "List of handlers provided by this content instance.",
            "itemtype": "property",
            "name": "handlers",
            "type": "Object",
            "class": "ose.lib.http.content",
            "module": "ose",
            "submodule": "ose.http"
        },
        {
            "file": "../ose/lib/http/content.js",
            "line": 69,
            "description": "Class constructor",
            "params": [
                {
                    "name": "name",
                    "description": "Name of HttpContent instance",
                    "type": "String"
                },
                {
                    "name": "path",
                    "description": "Path to content",
                    "type": "String"
                }
            ],
            "itemtype": "method",
            "name": "C",
            "class": "ose.lib.http.content",
            "module": "ose",
            "submodule": "ose.http"
        },
        {
            "file": "../ose/lib/http/content.js",
            "line": 92,
            "description": "Adds a URI to the HTML <head> element.",
            "params": [
                {
                    "name": "uri",
                    "description": "URI",
                    "type": "String"
                },
                {
                    "name": "index",
                    "description": "Order index",
                    "type": "Number"
                }
            ],
            "itemtype": "method",
            "name": "addHead",
            "class": "ose.lib.http.content",
            "module": "ose",
            "submodule": "ose.http"
        },
        {
            "file": "../ose/lib/http/content.js",
            "line": 110,
            "description": "Adds a module among scripts in <body>.",
            "params": [
                {
                    "name": "filename",
                    "description": "Module filename",
                    "type": "String"
                },
                {
                    "name": "name",
                    "description": "Registered module name",
                    "type": "String"
                }
            ],
            "itemtype": "method",
            "name": "addModule",
            "class": "ose.lib.http.content",
            "module": "ose",
            "submodule": "ose.http"
        },
        {
            "file": "../ose/lib/http/content.js",
            "line": 155,
            "description": "Adds a JavaScript file to scripts in <body>.",
            "params": [
                {
                    "name": "name",
                    "description": "Script filename",
                    "type": "String"
                }
            ],
            "itemtype": "method",
            "name": "addJs",
            "class": "ose.lib.http.content",
            "module": "ose",
            "submodule": "ose.http"
        },
        {
            "file": "../ose/lib/http/content.js",
            "line": 178,
            "description": "Adds a CSS file to scripts in <body>.",
            "params": [
                {
                    "name": "name",
                    "description": "CSS file filename",
                    "type": "String"
                }
            ],
            "itemtype": "method",
            "name": "addCss",
            "class": "ose.lib.http.content",
            "module": "ose",
            "submodule": "ose.http"
        },
        {
            "file": "../ose/lib/http/content.js",
            "line": 201,
            "description": "Adds a handler for this content instance to list of handlers.",
            "params": [
                {
                    "name": "uri",
                    "description": "URI to handle",
                    "type": "String"
                },
                {
                    "name": "cb",
                    "description": "Hanlder to add",
                    "type": "Function (req, resp, params)"
                }
            ],
            "itemtype": "method",
            "name": "addHandler",
            "class": "ose.lib.http.content",
            "module": "ose",
            "submodule": "ose.http"
        },
        {
            "file": "../ose/lib/http/content.js",
            "line": 214,
            "description": "Adds this content of this instance to index.html.",
            "params": [
                {
                    "name": "req",
                    "description": "HTTP request object",
                    "type": "Object"
                },
                {
                    "name": "resp",
                    "description": "HTTP response object",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "printIndex",
            "class": "ose.lib.http.content",
            "module": "ose",
            "submodule": "ose.http"
        },
        {
            "file": "../ose/lib/http/content.js",
            "line": 237,
            "description": "Method called from HTTP module to handle reponses",
            "params": [
                {
                    "name": "req",
                    "description": "HTTP request object",
                    "type": "Object"
                },
                {
                    "name": "req",
                    "description": "HTTP response object",
                    "type": "Object"
                },
                {
                    "name": "name",
                    "description": "Part of URI relative to this content prefix.",
                    "type": "String"
                },
                {
                    "name": "ext",
                    "description": "File extension",
                    "type": "String"
                },
                {
                    "name": "params",
                    "description": "Additional request parameters",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "respond",
            "class": "ose.lib.http.content",
            "module": "ose",
            "submodule": "ose.http"
        },
        {
            "file": "../ose/lib/http/index.js",
            "line": 39,
            "description": "IP address of Node.js host",
            "itemtype": "property",
            "name": "ip",
            "type": "String",
            "class": "ose.lib.http",
            "module": "ose",
            "submodule": "ose.http"
        },
        {
            "file": "../ose/lib/http/index.js",
            "line": 46,
            "description": "Port of Node.js HTTP server",
            "itemtype": "property",
            "name": "port",
            "type": "Number",
            "class": "ose.lib.http",
            "module": "ose",
            "submodule": "ose.http"
        },
        {
            "file": "../ose/lib/http/index.js",
            "line": 53,
            "description": "List of files",
            "itemtype": "property",
            "name": "files",
            "type": "Object",
            "class": "ose.lib.http",
            "module": "ose",
            "submodule": "ose.http"
        },
        {
            "file": "../ose/lib/http/index.js",
            "line": 60,
            "description": "List of content objects",
            "itemtype": "property",
            "name": "contents",
            "type": "Object",
            "class": "ose.lib.http",
            "module": "ose",
            "submodule": "ose.http"
        },
        {
            "file": "../ose/lib/http/index.js",
            "line": 71,
            "description": "[OSE plugin] configuration method",
            "params": [
                {
                    "name": "data",
                    "description": "Configuration data object",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "config",
            "class": "ose.lib.http",
            "module": "ose",
            "submodule": "ose.http"
        },
        {
            "file": "../ose/lib/http/index.js",
            "line": 91,
            "description": "Adds content instance",
            "params": [
                {
                    "name": "content",
                    "description": "",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "addContent",
            "class": "ose.lib.http",
            "module": "ose",
            "submodule": "ose.http"
        },
        {
            "file": "../ose/lib/http/index.js",
            "line": 109,
            "description": "TODO",
            "params": [
                {
                    "name": "uri",
                    "description": "URI",
                    "type": "String"
                },
                {
                    "name": "order",
                    "description": "Order in which to provide file",
                    "type": "Number"
                },
                {
                    "name": "remote",
                    "description": "TODO"
                }
            ],
            "itemtype": "method",
            "name": "addHead",
            "class": "ose.lib.http",
            "module": "ose",
            "submodule": "ose.http"
        },
        {
            "file": "../ose/lib/http/index.js",
            "line": 136,
            "description": "Returns url of this Http instance.",
            "return": {
                "description": "URL of Http instance",
                "type": "String"
            },
            "itemtype": "method",
            "name": "getUrl",
            "class": "ose.lib.http",
            "module": "ose",
            "submodule": "ose.http"
        },
        {
            "file": "../ose/lib/peer/list.js",
            "line": 26,
            "description": "Near peer instance that act as a default gateway to far peers",
            "itemtype": "property",
            "name": "gw",
            "type": "Object",
            "class": "ose.lib.peer.list",
            "module": "ose",
            "submodule": "ose.peer"
        },
        {
            "file": "../ose/lib/peer/list.js",
            "line": 33,
            "description": "Own OSE instance peer, reference to `ose.lib.peer.here` singleton.",
            "itemtype": "property",
            "name": "here",
            "type": "Object",
            "class": "ose.lib.peer.list",
            "module": "ose",
            "submodule": "ose.peer"
        },
        {
            "file": "../ose/lib/peer/list.js",
            "line": 44,
            "description": "Singleton initialization method.",
            "params": [
                {
                    "name": "name",
                    "description": "Peer name",
                    "type": "String"
                },
                {
                    "name": "peers",
                    "description": "Contains name: uri pairs for individual remote peers.",
                    "type": "Object"
                },
                {
                    "name": "gw",
                    "description": "Peer name that act as a default gateway to far peers.",
                    "type": "String"
                }
            ],
            "itemtype": "method",
            "name": "config",
            "class": "ose.lib.peer.list",
            "module": "ose",
            "submodule": "ose.peer"
        },
        {
            "file": "../ose/lib/peer/list.js",
            "line": 71,
            "description": "Get an existing peer by the `name` or create a new one.",
            "params": [
                {
                    "name": "name",
                    "description": "Peer name to retrieve or create.",
                    "type": "String"
                },
                {
                    "name": "url",
                    "description": "Peer WebSockets URL.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Peer instance",
                "type": "Object"
            },
            "itemtype": "method",
            "name": "peer",
            "class": "ose.lib.peer.list",
            "module": "ose",
            "submodule": "ose.peer"
        },
        {
            "file": "../ose/lib/peer/list.js",
            "line": 95,
            "description": "Get a peer by its `name`.",
            "params": [
                {
                    "name": "name",
                    "description": "Peer name to retrieve.",
                    "type": "String"
                },
                {
                    "name": "cb",
                    "description": "Response callback.",
                    "type": "Callback"
                }
            ],
            "itemtype": "method",
            "name": "get",
            "async": 1,
            "class": "ose.lib.peer.list",
            "module": "ose",
            "submodule": "ose.peer"
        },
        {
            "file": "../ose/lib/peer/list.js",
            "line": 113,
            "description": "Disconnect and remove `peer`.",
            "params": [
                {
                    "name": "peer",
                    "description": "Peer to be removed.",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "get",
            "class": "ose.lib.peer.list",
            "module": "ose",
            "submodule": "ose.peer"
        },
        {
            "file": "../ose/lib/peer/list.js",
            "line": 133,
            "description": "Connect all peers with url defined.",
            "itemtype": "method",
            "name": "connect",
            "class": "ose.lib.peer.list",
            "module": "ose",
            "submodule": "ose.peer"
        },
        {
            "file": "../ose/lib/peer/list.js",
            "line": 148,
            "description": "Disconnect all peers.",
            "itemtype": "method",
            "name": "disconnect",
            "class": "ose.lib.peer.list",
            "module": "ose",
            "submodule": "ose.peer"
        },
        {
            "file": "../ose/lib/peer/list.js",
            "line": 160,
            "description": "Verify event handler. Called before a remote peer WebSocket\nconnects as a client to this HTTP server.",
            "params": [
                {
                    "name": "data",
                    "description": "Verification request data.",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "onVerify",
            "access": "private",
            "tagname": "",
            "class": "ose.lib.peer.list",
            "module": "ose",
            "submodule": "ose.peer"
        },
        {
            "file": "../ose/lib/peer/list.js",
            "line": 189,
            "description": "Connect event handler. Called after remote peer WebSocket connects\nas a client to this HTTP server.",
            "itemtype": "method",
            "name": "onConnect",
            "access": "private",
            "tagname": "",
            "class": "ose.lib.peer.list",
            "module": "ose",
            "submodule": "ose.peer"
        },
        {
            "file": "../ose/lib/peer/remote.js",
            "line": 31,
            "description": "Peer name unique within a group of communicating peers. It is good\npractice to use a server domain name.",
            "itemtype": "property",
            "name": "name",
            "type": "String",
            "class": "ose.lib.peer.remote",
            "module": "ose",
            "submodule": "ose.peer"
        },
        {
            "file": "../ose/lib/peer/remote.js",
            "line": 39,
            "description": "WebSockets URL. When defined, the peer can connect as a client to a\nnear OSE instance.",
            "itemtype": "property",
            "name": "url",
            "type": "String",
            "class": "ose.lib.peer.remote",
            "module": "ose",
            "submodule": "ose.peer"
        },
        {
            "file": "../ose/lib/peer/remote.js",
            "line": 47,
            "description": "Current [WebSocket wrapper] instance connected to an OSE instance\nrepresented by this peer.",
            "itemtype": "property",
            "name": "ws",
            "type": "Object",
            "class": "ose.lib.peer.remote",
            "module": "ose",
            "submodule": "ose.peer"
        },
        {
            "file": "../ose/lib/peer/remote.js",
            "line": 57,
            "description": "Class constructor.",
            "params": [
                {
                    "name": "name",
                    "description": "Peer name",
                    "type": "String"
                },
                {
                    "name": "url",
                    "description": "WebSockets URL",
                    "type": "String"
                }
            ],
            "itemtype": "method",
            "name": "constructor",
            "class": "ose.lib.peer.remote",
            "module": "ose",
            "submodule": "ose.peer"
        },
        {
            "file": "../ose/lib/peer/remote.js",
            "line": 94,
            "description": "Call to connect as a client to the server peer defined in\n`this.url`.",
            "params": [
                {
                    "name": "force",
                    "description": "Force connection even when other WebSocket connection is already active.",
                    "type": "Boolean"
                }
            ],
            "itemtype": "method",
            "name": "connect",
            "class": "ose.lib.peer.remote",
            "module": "ose",
            "submodule": "ose.peer"
        },
        {
            "file": "../ose/lib/peer/remote.js",
            "line": 123,
            "description": "Check whether the peer is connected",
            "itemtype": "method",
            "name": "isConnected",
            "class": "ose.lib.peer.remote",
            "module": "ose",
            "submodule": "ose.peer"
        },
        {
            "file": "../ose/lib/peer/remote.js",
            "line": 133,
            "description": "Call to close the WebSocket connection to a remote peer and not attempt to reconnect",
            "itemtype": "method",
            "name": "disconnect",
            "class": "ose.lib.peer.remote",
            "module": "ose",
            "submodule": "ose.peer"
        },
        {
            "file": "../ose/lib/peer/remote.js",
            "line": 145,
            "description": "Call to close WebSocket connection to remote peer.",
            "itemtype": "method",
            "name": "disconnect",
            "class": "ose.lib.peer.remote",
            "module": "ose",
            "submodule": "ose.peer"
        },
        {
            "file": "../ose/lib/peer/remote.js",
            "line": 177,
            "description": "Called before a remote peer WebSocket connects as a client to this\nHTTP server.",
            "params": [
                {
                    "name": "req",
                    "description": "Verification request data.",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "verify",
            "access": "private",
            "tagname": "",
            "class": "ose.lib.peer.remote",
            "module": "ose",
            "submodule": "ose.peer"
        },
        {
            "file": "../ose/lib/peer/remote.js",
            "line": 197,
            "description": "Called after a remote peer WebSocket connects as a client to this HTTP server.",
            "params": [
                {
                    "name": "req",
                    "description": "Verification request data.",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "verify",
            "access": "private",
            "tagname": "",
            "class": "ose.lib.peer.remote",
            "module": "ose",
            "submodule": "ose.peer"
        },
        {
            "file": "../ose/lib/peer/remote.js",
            "line": 216,
            "description": "Finds a WebSocket for the current peer or a gateway to this\npeer. Returns connected [WebSocket wrapper].",
            "params": [
                {
                    "name": "cb",
                    "description": "Response callback",
                    "type": "Function(err, ws)"
                }
            ],
            "itemtype": "method",
            "name": "getWs",
            "class": "ose.lib.peer.remote",
            "module": "ose",
            "submodule": "ose.peer"
        },
        {
            "file": "../ose/lib/peer/remote.js",
            "line": 257,
            "description": "Defines the core shard of the OSE instance represented by this peer.",
            "params": [
                {
                    "name": "shard",
                    "description": "[Shard] instance that acts as the core shard.",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "coreShard",
            "access": "private",
            "tagname": "",
            "class": "ose.lib.peer.remote",
            "module": "ose",
            "submodule": "ose.peer"
        },
        {
            "file": "../ose/lib/peer/remote.js",
            "line": 281,
            "description": "Called, when received \"confirm\" message as a client.",
            "class": "ose.lib.peer.remote",
            "module": "ose",
            "submodule": "ose.peer"
        },
        {
            "file": "../ose/lib/peer/remote.js",
            "line": 297,
            "description": "Called, when received \"confirm\" message as a server.",
            "class": "ose.lib.peer.remote",
            "module": "ose",
            "submodule": "ose.peer"
        },
        {
            "file": "../ose/lib/peer/remote.js",
            "line": 310,
            "description": "Standard peer to peer communication RX handler. This handler is assigned to ws.rx.",
            "params": [
                {
                    "name": "this",
                    "description": "WS object",
                    "type": "Object"
                },
                {
                    "name": "data",
                    "description": "JSON data",
                    "type": "Object"
                }
            ],
            "class": "ose.lib.peer.remote",
            "module": "ose",
            "submodule": "ose.peer"
        },
        {
            "file": "../ose/lib/peer/rx.js",
            "line": 28,
            "description": "Ping handler.\nTODO: respond pong",
            "params": [
                {
                    "name": "ws",
                    "description": "[WebSocket wrapper]",
                    "type": "Object"
                },
                {
                    "name": "req",
                    "description": "Request data",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "ping",
            "class": "ose.lib.peer.rx",
            "module": "ose",
            "submodule": "ose.peer"
        },
        {
            "file": "../ose/lib/peer/rx.js",
            "line": 44,
            "description": "Pong handler.\nTODO: Calculate timeshift",
            "params": [
                {
                    "name": "ws",
                    "description": "[WebSocket wrapper]",
                    "type": "Object"
                },
                {
                    "name": "req",
                    "description": "Request data",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "pong",
            "class": "ose.lib.peer.rx",
            "module": "ose",
            "submodule": "ose.peer"
        },
        {
            "file": "../ose/lib/peer/rx.js",
            "line": 58,
            "description": "Establishes a link to the master shard",
            "params": [
                {
                    "name": "ws",
                    "description": "[WebSocket wrapper]",
                    "type": "Object"
                },
                {
                    "name": "req",
                    "description": "Request data",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "shard",
            "class": "ose.lib.peer.rx",
            "module": "ose",
            "submodule": "ose.peer"
        },
        {
            "file": "../ose/lib/peer/rx.js",
            "line": 77,
            "description": "Open link response handler",
            "params": [
                {
                    "name": "ws",
                    "description": "[WebSocket wrapper]",
                    "type": "Object"
                },
                {
                    "name": "req",
                    "description": "Request data",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "open",
            "class": "ose.lib.peer.rx",
            "module": "ose",
            "submodule": "ose.peer"
        },
        {
            "file": "../ose/lib/peer/rx.js",
            "line": 105,
            "description": "Close link handler",
            "params": [
                {
                    "name": "ws",
                    "description": "[WebSocket wrapper]",
                    "type": "Object"
                },
                {
                    "name": "req",
                    "description": "Request data",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "close",
            "class": "ose.lib.peer.rx",
            "module": "ose",
            "submodule": "ose.peer"
        },
        {
            "file": "../ose/lib/peer/rx.js",
            "line": 143,
            "description": "Error handler",
            "params": [
                {
                    "name": "ws",
                    "description": "[WebSocket wrapper]",
                    "type": "Object"
                },
                {
                    "name": "req",
                    "description": "Request data",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "error",
            "class": "ose.lib.peer.rx",
            "module": "ose",
            "submodule": "ose.peer"
        },
        {
            "file": "../ose/lib/peer/rx.js",
            "line": 175,
            "description": "Command handler",
            "params": [
                {
                    "name": "ws",
                    "description": "[WebSocket wrapper]",
                    "type": "Object"
                },
                {
                    "name": "req",
                    "description": "Request data",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "command",
            "class": "ose.lib.peer.rx",
            "module": "ose",
            "submodule": "ose.peer"
        },
        {
            "file": "../ose/lib/shard/index.js",
            "line": 34,
            "description": "Scope instance",
            "itemtype": "property",
            "name": "scope",
            "type": "String|Object",
            "class": "ose.lib.shard",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/shard/index.js",
            "line": 41,
            "description": "Space containing shard",
            "itemtype": "property",
            "name": "space",
            "type": "Object",
            "class": "ose.lib.shard",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/shard/index.js",
            "line": 48,
            "description": "Shard id unique within a space",
            "itemtype": "property",
            "name": "sid",
            "type": "Number",
            "class": "ose.lib.shard",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/shard/index.js",
            "line": 55,
            "description": "Shard alias",
            "itemtype": "property",
            "name": "alias",
            "type": "String",
            "class": "ose.lib.shard",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/shard/index.js",
            "line": 62,
            "description": "Home peer",
            "itemtype": "property",
            "name": "home",
            "type": "String|Object",
            "class": "ose.lib.shard",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/shard/index.js",
            "line": 69,
            "description": "Object containing entries",
            "itemtype": "property",
            "name": "cache",
            "type": "Object",
            "class": "ose.lib.shard",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/shard/index.js",
            "line": 76,
            "description": "Socket linked to the master shard",
            "itemtype": "property",
            "name": "master",
            "type": "Object",
            "class": "ose.lib.shard",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/shard/index.js",
            "line": 83,
            "description": "Whether the shard can communicate with its [home]\nTODO: Consider renaming",
            "itemtype": "property",
            "name": "synced",
            "type": "Boolean",
            "class": "ose.lib.shard",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/shard/index.js",
            "line": 91,
            "description": "Whether the shard has been initialized",
            "itemtype": "property",
            "name": "initialized",
            "type": "Boolean",
            "class": "ose.lib.shard",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/shard/index.js",
            "line": 98,
            "description": "Gets fired after all shards is the current space are initialized",
            "itemtype": "event",
            "name": "afterInit",
            "type": "Function",
            "class": "ose.lib.shard",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/shard/index.js",
            "line": 105,
            "description": "Is fired when the `synced` property changes",
            "itemtype": "event",
            "name": "synced",
            "type": "Boolean",
            "class": "ose.lib.shard",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/shard/index.js",
            "line": 117,
            "description": "Class constructor",
            "params": [
                {
                    "name": "scope",
                    "description": "Scope instance",
                    "type": "String|Object"
                },
                {
                    "name": "space",
                    "description": "Space",
                    "type": "Object"
                },
                {
                    "name": "sid",
                    "description": "Shard id",
                    "type": "Number"
                },
                {
                    "name": "alias",
                    "description": "Shard alias",
                    "type": "String"
                },
                {
                    "name": "home",
                    "description": "Home peer",
                    "type": "String|Object",
                    "optional": true
                }
            ],
            "itemtype": "method",
            "name": "C",
            "class": "ose.lib.shard",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/shard/index.js",
            "line": 188,
            "description": "Gets called after all shards is the current space are initialized",
            "itemtype": "method",
            "name": "afterInit",
            "class": "ose.lib.shard",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/shard/index.js",
            "line": 209,
            "description": "Check whether this shard needs to be linked to the master.",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "itemtype": "method",
            "name": "check2Link",
            "class": "ose.lib.shard",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/shard/index.js",
            "line": 241,
            "description": "Executes callback after the shard has been initialized, but only in\nthe [home OSE instance].",
            "params": [
                {
                    "name": "cb",
                    "description": "Method to be called",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "afterHome",
            "async": 1,
            "class": "ose.lib.shard",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/shard/index.js",
            "line": 286,
            "description": "Returns true if shard is in its home",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "itemtype": "method",
            "name": "atHome",
            "class": "ose.lib.shard",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/shard/index.js",
            "line": 300,
            "description": "Creates a new entry and adds it to `this.cache`.",
            "params": [
                {
                    "name": "id",
                    "description": ""
                },
                {
                    "name": "kind",
                    "description": ""
                },
                {
                    "name": "data",
                    "description": ""
                }
            ],
            "return": {
                "description": "Created entry",
                "type": "Object"
            },
            "itemtype": "method",
            "name": "entry",
            "class": "ose.lib.shard",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/shard/index.js",
            "line": 320,
            "description": "Get entry with data in the current shard.",
            "params": [
                {
                    "name": "entry",
                    "description": "Entry id.",
                    "type": "String|Number"
                },
                {
                    "name": "cb",
                    "description": "Callback with entry as a response",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "get",
            "class": "ose.lib.shard",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/shard/index.js",
            "line": 371,
            "description": "Establish a link to an entry in the current shard.",
            "params": [
                {
                    "name": "entry",
                    "description": "Entry id.",
                    "type": "String|Number"
                },
                {
                    "name": "req",
                    "description": "Request object",
                    "type": "Object",
                    "props": [
                        {
                            "name": "drev",
                            "description": "Current data revision. Specifies whether to request entry data.",
                            "type": "Object"
                        },
                        {
                            "name": "dtrack",
                            "description": "Whether to track data changes",
                            "type": "Boolean"
                        },
                        {
                            "name": "srev",
                            "description": "Current state revision. Specifies whether to request entry state.",
                            "type": "Object"
                        },
                        {
                            "name": "strack",
                            "description": "Whether to track state changes",
                            "type": "Boolean"
                        }
                    ]
                },
                {
                    "name": "socket",
                    "description": "Socket to be linked as a slave to an entry | Callback with entry as a response",
                    "type": "Object|Function"
                }
            ],
            "itemtype": "method",
            "name": "link",
            "class": "ose.lib.shard",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/shard/index.js",
            "line": 432,
            "description": "Send a command to shard's home",
            "params": [
                {
                    "name": "entry",
                    "description": "Entry id.",
                    "type": "String|Number"
                },
                {
                    "name": "name",
                    "description": "Command name",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "Data to be sent",
                    "type": "*",
                    "optional": true
                },
                {
                    "name": "socket",
                    "description": "Slave socket",
                    "type": "Object",
                    "optional": true
                }
            ],
            "itemtype": "method",
            "name": "send",
            "class": "ose.lib.shard",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/shard/index.js",
            "line": 467,
            "description": "Finds a shard by id or alias in the same space as this shard or by\nan identification object in another space",
            "params": [
                {
                    "name": "req",
                    "description": "Requested shard (sid or alias) in the current space or object also specifying another space.",
                    "type": "Number|String|Object",
                    "props": [
                        {
                            "name": "space",
                            "description": "Space name",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "shard",
                            "description": "Shard id or alias",
                            "type": "Number|String",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "cb",
                    "description": "Response callback",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "findShard",
            "async": 1,
            "class": "ose.lib.shard",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/shard/index.js",
            "line": 507,
            "description": "**Views logic will be changed in principle**",
            "params": [
                {
                    "name": "params",
                    "description": "Parameters",
                    "type": "Object"
                },
                {
                    "name": "socket",
                    "description": "Slave socket or callback",
                    "type": "Object|Function"
                }
            ],
            "itemtype": "method",
            "name": "getView",
            "beta": 1,
            "class": "ose.lib.shard",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/shard/index.js",
            "line": 569,
            "description": "Returns shard identification object. This object consists of `space\nname` and `shards sid`.",
            "return": {
                "description": "Shard identification object.",
                "type": "Object"
            },
            "itemtype": "method",
            "name": "identify",
            "class": "ose.lib.shard",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/shard/index.js",
            "line": 585,
            "description": "Checks whether this shard is identified by a `data` identification\nobject.",
            "params": [
                {
                    "name": "data",
                    "description": "Identification object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "itemtype": "method",
            "name": "isIdentified",
            "class": "ose.lib.shard",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/shard/index.js",
            "line": 606,
            "description": "Sets `synced` property. Emits `synced` event if the property is\nchanged.",
            "params": [
                {
                    "name": "value",
                    "description": "Value to be set",
                    "type": "Boolean"
                }
            ],
            "itemtype": "method",
            "name": "setSynced",
            "class": "ose.lib.shard",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/shard/index.js",
            "line": 635,
            "description": "Calls the callback after the shard gets synced with its home or\nimmediately if already in sync. It can wait forever.",
            "params": [
                {
                    "name": "cb",
                    "description": "Callback",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "afterSynced",
            "class": "ose.lib.shard",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/shard/index.js",
            "line": 690,
            "description": "Opens a link to the slave shard",
            "params": [
                {
                    "name": "socket",
                    "description": "Client socket",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "linkSlave",
            "class": "ose.lib.shard",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/shard/index.js",
            "line": 725,
            "description": "Establishes a link to the master shard if it doesn't exist and\nprovides a shard/slave socket as a callback response.\nShould be called only when not at home.\n`shard.master` is removed only when it is unnecessary - the shard doesn't needs to be synced to its home.",
            "params": [
                {
                    "name": "cb",
                    "description": "",
                    "type": "Function(err, shardMaster)"
                }
            ],
            "itemtype": "method",
            "name": "linkMaster",
            "async": 1,
            "class": "ose.lib.shard",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/shard/master.js",
            "line": 23,
            "description": "Close handler",
            "itemtype": "method",
            "name": "close",
            "class": "ose.lib.shard.master",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/shard/master.js",
            "line": 47,
            "description": "Error handler",
            "params": [
                {
                    "name": "err",
                    "description": "Error object",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "error",
            "class": "ose.lib.shard.master",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/shard/master.js",
            "line": 67,
            "description": "Command handler executing a command on a target entry",
            "params": [
                {
                    "name": "req",
                    "description": "Request object",
                    "type": "Object",
                    "props": [
                        {
                            "name": "target",
                            "description": "Target entry id",
                            "type": "String"
                        },
                        {
                            "name": "name",
                            "description": "Command name",
                            "type": "String"
                        },
                        {
                            "name": "data",
                            "description": "Optional data",
                            "type": "*",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "socket",
                    "description": "Client socket",
                    "type": "Object",
                    "optional": true
                }
            ],
            "itemtype": "method",
            "name": "command",
            "class": "ose.lib.shard.master",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/shard/master.js",
            "line": 96,
            "description": "Handler called when a slave shard attempts to create a link to an entry",
            "params": [
                {
                    "name": "req",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "entry",
                            "description": "Requested entry id",
                            "type": "String"
                        },
                        {
                            "name": "what",
                            "description": "Request to be sent to `shard.link()`",
                            "type": "Object"
                        }
                    ]
                },
                {
                    "name": "socket",
                    "description": "Slave entry socket",
                    "type": "Object",
                    "optional": true
                }
            ],
            "itemtype": "method",
            "name": "entry",
            "class": "ose.lib.shard.master",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/shard/master.js",
            "line": 112,
            "description": "Handler called a slave shard requests a view",
            "params": [
                {
                    "name": "req",
                    "description": "Request to be sent to `shard.getView()`",
                    "type": "Object"
                },
                {
                    "name": "socket",
                    "description": "Slave entry socket",
                    "type": "Object"
                }
            ],
            "class": "ose.lib.shard.master",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/shard/slave.js",
            "line": 24,
            "description": "Class constructor called from `space.sync()`. Sends request to the master\nshard to establish a link.",
            "params": [
                {
                    "name": "shard",
                    "description": "Slave shard",
                    "type": "Object"
                },
                {
                    "name": "peer",
                    "description": "Shard's home peer",
                    "type": "Object"
                },
                {
                    "name": "cb",
                    "description": "Callback to be called after the link is established",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "init",
            "async": 1,
            "class": "ose.lib.shard.slave",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/shard/slave.js",
            "line": 55,
            "description": "Open handler",
            "params": [
                {
                    "name": "data",
                    "description": "Response object",
                    "type": "Object",
                    "props": [
                        {
                            "name": "synced",
                            "description": "Whether it is possible to communicate with the `home`",
                            "type": "Boolean"
                        }
                    ]
                }
            ],
            "itemtype": "method",
            "name": "open",
            "class": "ose.lib.shard.slave",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/shard/slave.js",
            "line": 78,
            "description": "Close handler",
            "itemtype": "method",
            "name": "close",
            "class": "ose.lib.shard.slave",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/shard/slave.js",
            "line": 92,
            "description": "Error handler",
            "params": [
                {
                    "name": "err",
                    "description": "Error object",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "error",
            "class": "ose.lib.shard.slave",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/shard/slave.js",
            "line": 108,
            "description": "Synced handler",
            "params": [
                {
                    "name": "data",
                    "description": "Whether it is possible to communicate with the `home`.",
                    "type": "Boolean"
                }
            ],
            "itemtype": "method",
            "name": "synced",
            "class": "ose.lib.shard.slave",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/space/index.js",
            "line": 85,
            "description": "Unique space name",
            "itemtype": "property",
            "name": "name",
            "type": "String",
            "class": "ose.lib.space",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/space/index.js",
            "line": 92,
            "description": "Home peer",
            "itemtype": "property",
            "name": "home",
            "type": "Object",
            "class": "ose.lib.space",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/space/index.js",
            "line": 99,
            "description": "Object containing shards indexed by `sid`",
            "itemtype": "property",
            "name": "shards",
            "type": "Object",
            "class": "ose.lib.space",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/space/index.js",
            "line": 108,
            "description": "Class constructor",
            "itemtype": "method",
            "name": "init",
            "class": "ose.lib.space",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/space/index.js",
            "line": 118,
            "description": "Plugin configuration method",
            "params": [
                {
                    "name": "name",
                    "description": "Configuration name",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "Plugin configuration",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "config",
            "class": "ose.lib.space",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/space/index.js",
            "line": 141,
            "description": "Fills the configuration object for the browser.",
            "params": [
                {
                    "name": "config",
                    "description": "Plugin configuration",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "browserConfig",
            "class": "ose.lib.space",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/space/index.js",
            "line": 167,
            "description": "Finds a shard by shard id (sid)",
            "params": [
                {
                    "name": "sid",
                    "description": "Shard id",
                    "type": "Number|String"
                },
                {
                    "name": "cb",
                    "description": "Response callback",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "getShard",
            "async": 1,
            "class": "ose.lib.space",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/space/index.js",
            "line": 187,
            "description": "Finds a shard by shard alias",
            "params": [
                {
                    "name": "sid",
                    "description": "Shard alias",
                    "type": "String"
                },
                {
                    "name": "cb",
                    "description": "Response callback",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "getShardAlias",
            "async": 1,
            "class": "ose.lib.space",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/space/index.js",
            "line": 211,
            "description": "Finds a shard by id or alias in the current space or by an\nidentification object in another space",
            "params": [
                {
                    "name": "req",
                    "description": "Requested shard (sid or alias) in the current space or object also specifying another space.",
                    "type": "Number|String|Object",
                    "props": [
                        {
                            "name": "space",
                            "description": "Space name",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "shard",
                            "description": "Shard id or alias",
                            "type": "Number|String",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "cb",
                    "description": "Response callback",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "findShard",
            "async": 1,
            "class": "ose.lib.space",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/space/index.js",
            "line": 256,
            "description": "Calls a callback for each shard matching filtering criteria.",
            "params": [
                {
                    "name": "filter",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "cb",
                    "description": "callback",
                    "type": "Function (shard)"
                }
            ],
            "itemtype": "method",
            "name": "eachShard",
            "async": 1,
            "class": "ose.lib.space",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/space/index.js",
            "line": 300,
            "description": "Builds a new `link` to an `entry`.",
            "params": [
                {
                    "name": "entry",
                    "description": "Entry identification",
                    "type": "Object"
                },
                {
                    "name": "req",
                    "description": "Request",
                    "type": "Object"
                },
                {
                    "name": "socket",
                    "description": "Slave socket instance",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "link",
            "class": "ose.lib.space",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/space/list.js",
            "line": 24,
            "description": "Add a space",
            "params": [
                {
                    "name": "space",
                    "description": "Space",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "add",
            "class": "ose.lib.space.list",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/space/list.js",
            "line": 40,
            "description": "Attempts to find requested space.",
            "params": [
                {
                    "name": "req",
                    "description": "Request",
                    "type": "Object"
                },
                {
                    "name": "cb",
                    "description": "Callback",
                    "type": "Function (err, space)"
                }
            ],
            "async": 1,
            "itemtype": "method",
            "name": "get",
            "class": "ose.lib.space.list",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/space/list.js",
            "line": 60,
            "description": "Calls callback for each space matching filtering criteria.",
            "params": [
                {
                    "name": "cb",
                    "description": "callback",
                    "type": "Function (space)"
                }
            ],
            "itemtype": "method",
            "name": "each",
            "class": "ose.lib.space.list",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/space/list.js",
            "line": 76,
            "description": "Builds a new `link` to an `entry`.",
            "params": [
                {
                    "name": "entry",
                    "description": "Entry identification",
                    "type": "Object"
                },
                {
                    "name": "req",
                    "description": "Request",
                    "type": "Object"
                },
                {
                    "name": "socket",
                    "description": "Slave socket instance",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "link",
            "class": "ose.lib.space.list",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/space/list.js",
            "line": 98,
            "description": "Attempts to find requested shard.",
            "params": [
                {
                    "name": "req",
                    "description": "Shard request.",
                    "type": "String"
                },
                {
                    "name": "cb",
                    "description": "Callback",
                    "type": "Function (err, shard)"
                }
            ],
            "async": 1,
            "itemtype": "method",
            "name": "findShard",
            "class": "ose.lib.space.list",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/space/list.js",
            "line": 124,
            "description": "Attempts to find requested shard.",
            "params": [
                {
                    "name": "req",
                    "description": "Shard request.",
                    "type": "String"
                },
                {
                    "name": "cb",
                    "description": "Callback",
                    "type": "Function (err, shard)"
                }
            ],
            "async": 1,
            "itemtype": "method",
            "name": "getShard",
            "class": "ose.lib.space.list",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/ws/index.js",
            "line": 37,
            "description": "Returns identification object",
            "return": {
                "description": "Identification object",
                "type": "Object"
            },
            "itemtype": "method",
            "name": "identify",
            "class": "ose.lib.ws",
            "module": "ose",
            "submodule": "ose.peer"
        },
        {
            "file": "../ose/lib/ws/index.js",
            "line": 52,
            "description": "Close WebSocket object, send a `disconnect` error to all peers, clean\nhandlers, deregister from peer.",
            "itemtype": "method",
            "name": "close",
            "class": "ose.lib.ws",
            "module": "ose",
            "submodule": "ose.peer"
        },
        {
            "file": "../ose/lib/ws/index.js",
            "line": 96,
            "description": "Assign a WebSocket object to this wrapper.",
            "params": [
                {
                    "name": "ws",
                    "description": "WebSocket object",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "setWs",
            "class": "ose.lib.ws",
            "module": "ose",
            "submodule": "ose.peer"
        },
        {
            "file": "../ose/lib/ws/index.js",
            "line": 111,
            "description": "WebSocket object open handler, called after a WebSocket is opened.",
            "itemtype": "method",
            "name": "wsOpen",
            "class": "ose.lib.ws",
            "module": "ose",
            "submodule": "ose.peer"
        },
        {
            "file": "../ose/lib/ws/index.js",
            "line": 121,
            "description": "WebSocket object close handler, called after a WebSocket is closed.",
            "itemtype": "method",
            "name": "wsOpen",
            "class": "ose.lib.ws",
            "module": "ose",
            "submodule": "ose.peer"
        },
        {
            "file": "../ose/lib/ws/index.js",
            "line": 133,
            "description": "WebSocket object error handler, called on WebSocket error.",
            "params": [
                {
                    "name": "err",
                    "description": "Error instance",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "wsError",
            "class": "ose.lib.ws",
            "module": "ose",
            "submodule": "ose.peer"
        },
        {
            "file": "../ose/lib/ws/index.js",
            "line": 155,
            "description": "Register a new [link]",
            "params": [
                {
                    "name": "socket",
                    "description": "`Socket` instance - one end of the `link`.",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "addLink",
            "class": "ose.lib.ws",
            "module": "ose",
            "submodule": "ose.peer"
        },
        {
            "file": "../ose/lib/ws/index.js",
            "line": 202,
            "description": "Deregister the `link` identified by `lid`",
            "params": [
                {
                    "name": "lid",
                    "description": "Ose.link id of the `link` to deregister.",
                    "type": "Number"
                }
            ],
            "itemtype": "method",
            "name": "delLid",
            "class": "ose.lib.ws",
            "module": "ose",
            "submodule": "ose.peer"
        },
        {
            "file": "../ose/lib/ws/index.js",
            "line": 228,
            "description": "Transmit data to peer via WebSocket object.",
            "params": [
                {
                    "name": "data",
                    "description": "Data to be sent",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "tx",
            "class": "ose.lib.ws",
            "module": "ose",
            "submodule": "ose.peer"
        },
        {
            "file": "../ose/lib/ws/index.js",
            "line": 267,
            "description": "Send error message to peer via the WebSocket object.",
            "params": [
                {
                    "name": "lid",
                    "description": "Ose.link id",
                    "type": "Number"
                },
                {
                    "name": "err",
                    "description": "`Error` instance",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "txError",
            "class": "ose.lib.ws",
            "module": "ose",
            "submodule": "ose.peer"
        },
        {
            "file": "../ose/lib/ws/index.js",
            "line": 289,
            "description": "Check whether the WebSocket object is connected",
            "itemtype": "method",
            "name": "isConnected",
            "class": "ose.lib.ws",
            "module": "ose",
            "submodule": "ose.peer"
        },
        {
            "file": "../ose/lib/ws/index.js",
            "line": 299,
            "description": "Regularly check the socket state and take according actions. Timer\nis defined by parts of this class dependent on the runtime environment.",
            "itemtype": "method",
            "name": "onTime",
            "class": "ose.lib.ws",
            "module": "ose",
            "submodule": "ose.peer"
        },
        {
            "file": "../ose/lib/browser.js",
            "line": 31,
            "description": "Cached modules, `require()` was already called on them",
            "itemtype": "property",
            "name": "Cache",
            "type": "Object",
            "class": "ose.lib.browser",
            "module": "ose"
        },
        {
            "file": "../ose/lib/browser.js",
            "line": 39,
            "description": "Registered, but not yet created modules",
            "itemtype": "property",
            "name": "Modules",
            "type": "Object",
            "class": "ose.lib.browser",
            "module": "ose"
        },
        {
            "file": "../ose/lib/browser.js",
            "line": 47,
            "description": "CommonJS Require emulation. Register module wrapped by function `init`.",
            "params": [
                {
                    "name": "id",
                    "description": "Module id",
                    "type": "String"
                },
                {
                    "name": "filename",
                    "description": "Module filename",
                    "type": "String"
                },
                {
                    "name": "init",
                    "description": "Module initialization",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "window.ose",
            "class": "ose.lib.browser",
            "module": "ose"
        },
        {
            "file": "../ose/lib/browser.js",
            "line": 87,
            "description": "Make this module available via `require(\"ose/lib/browser\")`",
            "class": "ose.lib.browser",
            "module": "ose"
        },
        {
            "file": "../ose/lib/browser.js",
            "line": 101,
            "description": "Setup OSE framework and intialize plugins.",
            "itemtype": "method",
            "name": "run",
            "class": "ose.lib.browser",
            "module": "ose"
        },
        {
            "file": "../ose/lib/browser.js",
            "line": 131,
            "description": "Emulate CommonJS \"require\".\n`this` is bound to the calling module.",
            "params": [
                {
                    "name": "id",
                    "description": "Module to be required",
                    "type": "String"
                }
            ],
            "itemtype": "method",
            "name": "require",
            "class": "ose.lib.browser",
            "module": "ose"
        },
        {
            "file": "../ose/lib/browser.js",
            "line": 185,
            "description": "Initialize and move module from `Modules` to `Cache`.",
            "params": [
                {
                    "name": "id",
                    "description": "Module to be cached",
                    "type": "String"
                }
            ],
            "itemtype": "method",
            "name": "cache",
            "class": "ose.lib.browser",
            "module": "ose"
        },
        {
            "file": "../ose/lib/counter.js",
            "line": 20,
            "description": "Final callback",
            "itemtype": "property",
            "name": "cb",
            "type": "Function (err)",
            "class": "ose.lib.counter",
            "module": "ose"
        },
        {
            "file": "../ose/lib/counter.js",
            "line": 26,
            "description": "Timeout in milliseconds",
            "itemtype": "property",
            "name": "timeout",
            "type": "Number",
            "class": "ose.lib.counter",
            "module": "ose"
        },
        {
            "file": "../ose/lib/counter.js",
            "line": 34,
            "description": "Class constructor, sets up `cb` and `count = 1`",
            "params": [
                {
                    "name": "cb",
                    "description": "Callback",
                    "type": "Function (err)"
                }
            ],
            "itemtype": "method",
            "name": "init",
            "is_constructor": 1,
            "class": "ose.lib.counter",
            "module": "ose"
        },
        {
            "file": "../ose/lib/counter.js",
            "line": 49,
            "description": "Sets up `timeout` and `cb` properties and decrements a counter.",
            "params": [
                {
                    "name": "timeout",
                    "description": "Timeout in milliseconds",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "cb",
                    "description": "Callback",
                    "type": "Function (err)"
                }
            ],
            "itemtype": "method",
            "name": "done",
            "class": "ose.lib.counter",
            "module": "ose"
        },
        {
            "file": "../ose/lib/counter.js",
            "line": 69,
            "description": "Increments counter by count.",
            "params": [
                {
                    "name": "count",
                    "description": "Count to increment counter by",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                }
            ],
            "return": {
                "description": "Counter object",
                "type": "Object"
            },
            "chainable": 1,
            "itemtype": "method",
            "name": "inc",
            "class": "ose.lib.counter",
            "module": "ose"
        },
        {
            "file": "../ose/lib/counter.js",
            "line": 90,
            "description": "Decrements counter by one.",
            "params": [
                {
                    "name": "err",
                    "description": "Error object",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "key",
                    "description": "Key of a call",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "resp",
                    "description": "Response for a `key`",
                    "type": "*",
                    "optional": true
                }
            ],
            "itemtype": "method",
            "name": "dec",
            "class": "ose.lib.counter",
            "module": "ose"
        },
        {
            "file": "../ose/lib/counter.js",
            "line": 145,
            "description": "Increments a counter and returns method to be called after task has been done.",
            "params": [
                {
                    "name": "key",
                    "description": "Key, to identify a task",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": ""
            },
            "class": "ose.lib.counter",
            "module": "ose"
        },
        {
            "file": "../ose/lib/index.js",
            "line": 75,
            "description": "Predefined class names and constructors",
            "itemtype": "property",
            "name": "classes",
            "type": "Object",
            "class": "ose.core",
            "module": "ose"
        },
        {
            "file": "../ose/lib/index.js",
            "line": 83,
            "description": "Sets up OSE framework",
            "params": [
                {
                    "name": "runtime",
                    "description": "(`\"browser\"` | `\"node\"`) Runtime environment",
                    "type": "String"
                }
            ],
            "itemtype": "method",
            "name": "setup",
            "class": "ose.core",
            "module": "ose"
        },
        {
            "file": "../ose/lib/index.js",
            "line": 97,
            "description": "Return new string based on `val` with diacriticts transformed to ascii.",
            "params": [
                {
                    "name": "val",
                    "description": "Value to transform.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Transformed string.",
                "type": "String"
            },
            "itemtype": "method",
            "name": "dia",
            "class": "ose.core",
            "module": "ose"
        },
        {
            "file": "../ose/lib/index.js",
            "line": 149,
            "description": "OSE plugin configuration method.",
            "params": [
                {
                    "name": "data",
                    "description": "Configuration data",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "config",
            "class": "ose.core",
            "module": "ose"
        },
        {
            "file": "../ose/lib/index.js",
            "line": 166,
            "description": "Prepare configuration for the browser.",
            "params": [
                {
                    "name": "config",
                    "description": "Configuration object",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "browserConfig",
            "class": "ose.core",
            "module": "ose"
        },
        {
            "file": "../ose/lib/index.js",
            "line": 233,
            "description": "Creates `Error` instance and appends a subject and data to it.\n\nSee [logging].",
            "params": [
                {
                    "name": "subject",
                    "description": "Subject of the error",
                    "type": "*",
                    "optional": true
                },
                {
                    "name": "code",
                    "description": "Error code",
                    "type": "String"
                },
                {
                    "name": "message",
                    "description": "Error message",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "data",
                    "description": "Optional data describing error",
                    "type": "Object",
                    "optional": true
                }
            ],
            "class": "ose.core",
            "module": "ose"
        },
        {
            "file": "../ose/lib/index.js",
            "line": 328,
            "description": "Add a class constructor `ctor` into predefined `classes`.",
            "params": [
                {
                    "name": "name",
                    "description": "Class name",
                    "type": "String"
                },
                {
                    "name": "ctor",
                    "description": "Class constructor",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "addClass",
            "class": "ose.core",
            "module": "ose"
        },
        {
            "file": "../ose/lib/index.js",
            "line": 357,
            "description": "Return current time in unix timestamp format in microseconds",
            "return": {
                "description": "Current timestamp in microseconds",
                "type": "Number"
            },
            "itemtype": "method",
            "name": "getTime",
            "class": "ose.core",
            "module": "ose"
        },
        {
            "file": "../ose/lib/index.js",
            "line": 375,
            "description": "Parses booleans",
            "params": [
                {
                    "name": "val",
                    "description": "Value to parse",
                    "type": "Undefined|null|String|Number|Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "itemtype": "method",
            "name": "parseBool",
            "class": "ose.core",
            "module": "ose"
        },
        {
            "file": "../ose/lib/index.js",
            "line": 419,
            "description": "Creates a new counter. If \"cb\" is already a counter instance, it only increments it.\nCounters are used for multiple asynchronous operations with one final callback.",
            "params": [
                {
                    "name": "cb",
                    "description": "Final callback",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Counter with callback",
                "type": "Object"
            },
            "itemtype": "method",
            "name": "counter",
            "class": "ose.core",
            "module": "ose"
        },
        {
            "file": "../ose/lib/index.js",
            "line": 439,
            "description": "Creates a new scope instance of a given name or returns an existing one.",
            "params": [
                {
                    "name": "name",
                    "description": "Name of a scope",
                    "type": "String"
                }
            ],
            "return": {
                "description": "`Scope` instance",
                "type": "Object"
            },
            "itemtype": "method",
            "name": "scope",
            "class": "ose.core",
            "module": "ose"
        },
        {
            "file": "../ose/lib/index.js",
            "line": 457,
            "description": "Call all methods with name \"method\" in \"subject\"s prototype chain.\n\n\"method\" is called with arguments specified after argument \"method\".",
            "params": [
                {
                    "name": "subject",
                    "description": "",
                    "type": "Subject"
                },
                {
                    "name": "method",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "arg",
                    "description": "Optional arguments to send to subject's init function.",
                    "type": "*",
                    "optional": true,
                    "multiple": true
                }
            ],
            "itemtype": "method",
            "name": "callProtoChain",
            "class": "ose.core",
            "module": "ose"
        },
        {
            "file": "../ose/lib/kind.js",
            "line": 27,
            "description": "Initializes an entry in the home OSE instance",
            "params": [
                {
                    "name": "entry",
                    "description": "Entry to initialize",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "homeInit",
            "virtual": "",
            "class": "ose.lib.kind",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/kind.js",
            "line": 36,
            "description": "Scope to which the kind is assigned",
            "itemtype": "property",
            "name": "scope",
            "type": "Object",
            "class": "ose.lib.kind",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/kind.js",
            "line": 43,
            "description": "Kind name unique within a scope",
            "itemtype": "property",
            "name": "name",
            "type": "String",
            "class": "ose.lib.kind",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/kind.js",
            "line": 52,
            "description": "Kind constructor",
            "params": [
                {
                    "name": "scope",
                    "description": "Scope to which assign the kind",
                    "type": "Object|String"
                },
                {
                    "name": "name",
                    "description": "Unique kind name within the scope",
                    "type": "String"
                }
            ],
            "itemtype": "method",
            "name": "init",
            "class": "ose.lib.kind",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/kind.js",
            "line": 74,
            "description": "Dependency initialization",
            "params": [
                {
                    "name": "cb",
                    "description": "Callback",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "afterInit",
            "access": "private",
            "tagname": "",
            "class": "ose.lib.kind",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/kind.js",
            "line": 89,
            "description": "Returns identification object",
            "return": {
                "description": "Identification object",
                "type": "Object"
            },
            "itemtype": "method",
            "name": "identify",
            "class": "ose.lib.kind",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/kind.js",
            "line": 104,
            "description": "Returns entry caption",
            "params": [
                {
                    "name": "entry",
                    "description": "`Entry` instance",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Entry caption",
                "type": "String"
            },
            "itemtype": "method",
            "name": "getCaption",
            "class": "ose.lib.kind",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/kind.js",
            "line": 118,
            "description": "Registers a command handler",
            "params": [
                {
                    "name": "name",
                    "description": "Name of handler",
                    "type": "String"
                },
                {
                    "name": "handler",
                    "description": "Handler",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "on",
            "class": "ose.lib.kind",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/kind.js",
            "line": 127,
            "description": "Registers command handlers",
            "params": [
                {
                    "name": "name",
                    "description": "Object containing handler or module name with handlers",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "on",
            "class": "ose.lib.kind",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/kind.js",
            "line": 171,
            "description": "Finds the right module for a given page and layout",
            "params": [
                {
                    "name": "page",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "layout",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Module",
                "type": "Object"
            },
            "itemtype": "method",
            "name": "getLayout",
            "class": "ose.lib.kind",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/link.js",
            "line": 162,
            "description": "Call by the response side to open a link. On both the response and\nclient side, the other socket is assigned to the `link` property\n(e.g. `client.link = response`). The `open(data)` handler on the\nclient side is invoked.",
            "params": [
                {
                    "name": "socket",
                    "description": "Reponse socket",
                    "type": "Object"
                },
                {
                    "name": "client",
                    "description": "Client socket",
                    "type": "Object"
                },
                {
                    "name": "data",
                    "description": "Data to be sent to the client",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "open",
            "class": "ose.lib.link",
            "module": "ose",
            "submodule": "ose.link"
        },
        {
            "file": "../ose/lib/link.js",
            "line": 212,
            "description": "Call to gracefully close a link. This method invokes `close(data)`\nhandlers on both the client and response side.",
            "params": [
                {
                    "name": "socket",
                    "description": "Socket to be closed",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "data",
                    "description": "Data sent to the close handler",
                    "type": "Object",
                    "optional": true
                }
            ],
            "itemtype": "method",
            "name": "close",
            "class": "ose.lib.link",
            "module": "ose",
            "submodule": "ose.link"
        },
        {
            "file": "../ose/lib/link.js",
            "line": 267,
            "description": "Call to close a link with an error. This method invokes\n`error(data)` handlers on both the client and response side.",
            "params": [
                {
                    "name": "socket",
                    "description": "Socket object",
                    "type": "Object"
                },
                {
                    "name": "err",
                    "description": "`Error` instance",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "error",
            "class": "ose.lib.link",
            "module": "ose",
            "submodule": "ose.link"
        },
        {
            "file": "../ose/lib/link.js",
            "line": 405,
            "description": "Relay `req` to `ws`.",
            "class": "ose.lib.link",
            "module": "ose",
            "submodule": "ose.link"
        },
        {
            "file": "../ose/lib/link.js",
            "line": 433,
            "description": "An array of handler names that can't be used.",
            "itemtype": "property",
            "name": "forbiddenNames",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "class": "ose.lib.link",
            "module": "ose",
            "submodule": "ose.link"
        },
        {
            "file": "../ose/lib/logger.js",
            "line": 69,
            "description": "Logging namespace",
            "itemtype": "property",
            "name": "context",
            "type": "String",
            "class": "ose.lib.logger",
            "module": "ose",
            "submodule": "ose.logger"
        },
        {
            "file": "../ose/lib/logger.js",
            "line": 80,
            "description": "Class constructor",
            "params": [
                {
                    "name": "context",
                    "description": "Context of logger instance",
                    "type": "String"
                }
            ],
            "itemtype": "method",
            "name": "init",
            "class": "ose.lib.logger",
            "module": "ose",
            "submodule": "ose.logger"
        },
        {
            "file": "../ose/lib/logger.js",
            "line": 92,
            "params": [
                {
                    "name": "message",
                    "description": "Message to log",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "Optional data to be logged",
                    "type": "*",
                    "optional": true
                }
            ],
            "itemtype": "method",
            "name": "interval",
            "class": "ose.lib.logger",
            "module": "ose",
            "submodule": "ose.logger"
        },
        {
            "file": "../ose/lib/logger.js",
            "line": 110,
            "description": "Use when obsolete code is executed.\nDisplays message with data and stack trace.",
            "params": [
                {
                    "name": "message",
                    "description": "Message to log",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "Optional data to be logged",
                    "type": "*",
                    "optional": true
                }
            ],
            "itemtype": "method",
            "name": "obsolete",
            "class": "ose.lib.logger",
            "module": "ose",
            "submodule": "ose.logger"
        },
        {
            "file": "../ose/lib/logger.js",
            "line": 141,
            "description": "Use when something is missing.\nDisplays message with data and stack trace.",
            "params": [
                {
                    "name": "message",
                    "description": "Message to log",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "Optional data to be logged",
                    "type": "*",
                    "optional": true
                }
            ],
            "itemtype": "method",
            "name": "missing",
            "class": "ose.lib.logger",
            "module": "ose",
            "submodule": "ose.logger"
        },
        {
            "file": "../ose/lib/logger.js",
            "line": 156,
            "description": "Use when an error object is caught",
            "params": [
                {
                    "name": "err",
                    "description": "Error object",
                    "type": "Object"
                },
                {
                    "name": "message",
                    "description": "Message to log",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "Optional data to be logged",
                    "type": "*",
                    "optional": true
                }
            ],
            "itemtype": "method",
            "name": "caught",
            "class": "ose.lib.logger",
            "module": "ose",
            "submodule": "ose.logger"
        },
        {
            "file": "../ose/lib/logger.js",
            "line": 174,
            "description": "Creates logging function",
            "params": [
                {
                    "name": "severity",
                    "description": "Text indicating everity",
                    "type": "String"
                },
                {
                    "name": "message",
                    "description": "Message to log",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "Optional data to be logged",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Logging function",
                "type": "Function"
            },
            "itemtype": "method",
            "name": "bind",
            "class": "ose.lib.logger",
            "module": "ose",
            "submodule": "ose.logger"
        },
        {
            "file": "../ose/lib/logger.js",
            "line": 193,
            "description": "Logs message with 'debug' severity.",
            "params": [
                {
                    "name": "message",
                    "description": "Message to log",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "Optional data to be logged",
                    "type": "*",
                    "optional": true
                }
            ],
            "itemtype": "method",
            "name": "debug",
            "class": "ose.lib.logger",
            "module": "ose",
            "submodule": "ose.logger"
        },
        {
            "file": "../ose/lib/logger.js",
            "line": 206,
            "description": "Logs message with 'info' severity.",
            "params": [
                {
                    "name": "message",
                    "description": "Message to log",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "Optional data to be logged",
                    "type": "*",
                    "optional": true
                }
            ],
            "itemtype": "method",
            "name": "info",
            "class": "ose.lib.logger",
            "module": "ose",
            "submodule": "ose.logger"
        },
        {
            "file": "../ose/lib/logger.js",
            "line": 219,
            "description": "Logs message with 'notice' severity.",
            "params": [
                {
                    "name": "message",
                    "description": "Message to log",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "Optional data to be logged",
                    "type": "*",
                    "optional": true
                }
            ],
            "itemtype": "method",
            "name": "notice",
            "class": "ose.lib.logger",
            "module": "ose",
            "submodule": "ose.logger"
        },
        {
            "file": "../ose/lib/logger.js",
            "line": 232,
            "description": "Logs message with 'warning' severity.",
            "params": [
                {
                    "name": "message",
                    "description": "Message to log",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "Optional data to be logged",
                    "type": "*",
                    "optional": true
                }
            ],
            "itemtype": "method",
            "name": "warning",
            "class": "ose.lib.logger",
            "module": "ose",
            "submodule": "ose.logger"
        },
        {
            "file": "../ose/lib/logger.js",
            "line": 245,
            "description": "Logs error object with optional data",
            "params": [
                {
                    "name": "err",
                    "description": "Error object",
                    "type": "Object"
                },
                {
                    "name": "data",
                    "description": "Optional data to be logged",
                    "type": "*",
                    "optional": true
                }
            ],
            "itemtype": "method",
            "name": "error",
            "class": "ose.lib.logger",
            "module": "ose",
            "submodule": "ose.logger"
        },
        {
            "file": "../ose/lib/logger.js",
            "line": 293,
            "description": "Logs unhandled error object  with optional data",
            "params": [
                {
                    "name": "message",
                    "description": "Message to be logged",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "Optional data to be logged",
                    "type": "*",
                    "optional": true
                }
            ],
            "itemtype": "method",
            "name": "unhandled",
            "deprecated": true,
            "class": "ose.lib.logger",
            "module": "ose",
            "submodule": "ose.logger"
        },
        {
            "file": "../ose/lib/logger.js",
            "line": 308,
            "description": "Displays log message to stdout",
            "params": [
                {
                    "name": "severity",
                    "description": "Text indicating everity",
                    "type": "String"
                },
                {
                    "name": "message",
                    "description": "Message to log",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "Optional data to be logged",
                    "type": "*",
                    "optional": true
                }
            ],
            "itemtype": "method",
            "name": "log",
            "class": "ose.lib.logger",
            "module": "ose",
            "submodule": "ose.logger"
        },
        {
            "file": "../ose/lib/node.js",
            "line": 31,
            "description": "Fired when an uncaught exception occurs. Logs an error and exits process.",
            "itemtype": "event",
            "name": "uncaughtException",
            "class": "ose.lib.node",
            "module": "ose"
        },
        {
            "file": "../ose/lib/plugins.js",
            "line": 330,
            "description": "Adds configuration item to configuration object for the browser.",
            "params": [
                {
                    "name": "key",
                    "description": "Configuration name",
                    "type": "String"
                },
                {
                    "name": "plugin",
                    "description": "Plugin",
                    "type": "Object"
                },
                {
                    "name": "data",
                    "description": "Configuration data",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "push",
            "class": "ose.lib.plugins",
            "module": "ose",
            "submodule": "ose.plugin"
        },
        {
            "file": "../ose/lib/scope.js",
            "line": 23,
            "description": "Scope name",
            "itemtype": "property",
            "name": "name",
            "type": "String",
            "class": "ose.lib.scope",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/scope.js",
            "line": 32,
            "description": "Class constructor",
            "params": [
                {
                    "name": "name",
                    "description": "Scope name",
                    "type": "String"
                }
            ],
            "itemtype": "method",
            "name": "constructor",
            "class": "ose.lib.scope",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/scope.js",
            "line": 49,
            "description": "Returns scope identification. This object consists of `space name`\nand `shards sid`.",
            "return": {
                "description": "Scope identification object.",
                "type": "Object"
            },
            "itemtype": "method",
            "name": "identify",
            "class": "ose.lib.scope",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/scope.js",
            "line": 62,
            "description": "Adds a kind to this scope",
            "params": [
                {
                    "name": "kind",
                    "description": "Kind to be added",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "add",
            "class": "ose.lib.scope",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/scope.js",
            "line": 80,
            "description": "Creates a view based on params",
            "params": [
                {
                    "name": "kind",
                    "description": "Kind",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "params",
                    "description": "View parameters",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "Callback",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "getView",
            "class": "ose.lib.scope",
            "module": "ose",
            "submodule": "ose.data"
        },
        {
            "file": "../ose/lib/wrap.js",
            "line": 322,
            "description": "[Property descriptor]\n(https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object/defineProperty)\ntypes enumeration.",
            "class": "ose.wrap.common",
            "module": "ose",
            "submodule": "ose.wrap"
        },
        {
            "file": "../ose/lib/wrap.js",
            "line": 336,
            "description": "Sets up module wrapper of this module",
            "itemtype": "method",
            "name": "setup",
            "class": "ose.wrap.common",
            "module": "ose",
            "submodule": "ose.wrap"
        },
        {
            "file": "../ose/lib/wrap.js",
            "line": 526,
            "description": "Return identification object",
            "result": "{Object}",
            "itemtype": "method",
            "name": "identify",
            "class": "ose.wrap.singleton",
            "module": "ose",
            "submodule": "ose.wrap"
        },
        {
            "file": "../ose/lib/wrap.js",
            "line": 541,
            "description": "Return property descriptor type of \"prop\". (exports.pdType.data || exports.pdType.accessor || exports.pdType.object)",
            "class": "ose.wrap.singleton",
            "module": "ose",
            "submodule": "ose.wrap"
        },
        {
            "file": "../ose/lib/wrap.js",
            "line": 628,
            "description": "Copy and convert property definitions from \"src\" class definition\nto \"dst\" class definition.",
            "params": [
                {
                    "name": "src",
                    "description": "Source object",
                    "type": "Object"
                },
                {
                    "name": "dst",
                    "description": "Destination definition object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "`dst`",
                "type": "Object"
            },
            "itemtype": "method",
            "name": "object2Def",
            "access": "private",
            "tagname": "",
            "class": "ose.wrap.singleton",
            "module": "ose",
            "submodule": "ose.wrap"
        },
        {
            "file": "../ose/lib/wrap.js",
            "line": 1001,
            "description": "TODO",
            "params": [
                {
                    "name": "extend",
                    "description": "Extension to be mixed into wrapped class or singleton.",
                    "type": "String|Array"
                }
            ],
            "itemtype": "method",
            "name": "prepend",
            "class": "ose.wrap.singleton",
            "module": "ose",
            "submodule": "ose.wrap"
        },
        {
            "file": "../ose/lib/wrap.js",
            "line": 1034,
            "params": [
                {
                    "name": "extend",
                    "description": "TODO",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "",
            "class": "ose.wrap.singleton",
            "module": "ose",
            "submodule": "ose.wrap"
        },
        {
            "file": "../ose/lib/wrap.js",
            "line": 1066,
            "description": "Tests whether `desc` is descendant of `sup`. When called with one argument, this argument is assigned to `desc` and super is `this.ctor`",
            "params": [
                {
                    "name": "sup",
                    "description": "Super",
                    "type": "String|Object|Function"
                },
                {
                    "name": "desc",
                    "description": "Descendant",
                    "type": "String|Object|Function"
                }
            ],
            "return": {
                "description": "isSuper",
                "type": "Boolean"
            },
            "itemtype": "method",
            "name": "isSuper",
            "class": "ose.wrap.singleton",
            "module": "ose",
            "submodule": "ose.wrap"
        },
        {
            "file": "../bb/lib/box/content.js",
            "line": 27,
            "description": "Box initialization",
            "itemtype": "method",
            "name": "init",
            "class": "bb.lib.box.content",
            "module": "bb",
            "submodule": "bb.box"
        },
        {
            "file": "../bb/lib/box/content.js",
            "line": 37,
            "description": "Creates HTML representation of content box",
            "return": {
                "description": "Section jQuery element",
                "type": "Object"
            },
            "class": "bb.lib.box.content",
            "module": "bb",
            "submodule": "bb.box"
        },
        {
            "file": "../bb/lib/box/content.js",
            "line": 64,
            "description": "Displays content based on stateObj",
            "params": [
                {
                    "name": "stateObj",
                    "description": "Object defining what is to be displayed",
                    "type": "Object"
                },
                {
                    "name": "source",
                    "description": "Where this method is called from",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Pagelet",
                "type": "Object"
            },
            "itemtype": "method",
            "name": "display",
            "class": "bb.lib.box.content",
            "module": "bb",
            "submodule": "bb.box"
        },
        {
            "file": "../bb/lib/box/content.js",
            "line": 102,
            "description": "Creates pagelet based on stateObj",
            "params": [
                {
                    "name": "stateObj",
                    "description": "Object defining what is to be displayed",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Pagelet",
                "type": "Object"
            },
            "itemtype": "method",
            "name": "pagelet",
            "class": "bb.lib.box.content",
            "module": "bb",
            "submodule": "bb.box"
        },
        {
            "file": "../bb/lib/box/content.js",
            "line": 147,
            "description": "Activates pagelet",
            "params": [
                {
                    "name": "pagelet",
                    "description": "Pagelet instance",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "setActive",
            "class": "bb.lib.box.content",
            "module": "bb",
            "submodule": "bb.box"
        },
        {
            "file": "../bb/lib/box/left.js",
            "line": 27,
            "description": "Box initialization",
            "itemtype": "method",
            "name": "init",
            "class": "bb.lib.box.left",
            "module": "bb",
            "submodule": "bb.box"
        },
        {
            "file": "../bb/lib/box/left.js",
            "line": 38,
            "description": "Creates HTML representation of left box",
            "return": {
                "description": "Section jQuery element",
                "type": "Object"
            },
            "class": "bb.lib.box.left",
            "module": "bb",
            "submodule": "bb.box"
        },
        {
            "file": "../bb/lib/box/left.js",
            "line": 56,
            "description": "Appends menu item to left box",
            "params": [
                {
                    "name": "caption",
                    "description": "Text to display",
                    "type": "String"
                },
                {
                    "name": "name",
                    "description": "Name of menu item",
                    "type": "Object"
                },
                {
                    "name": "onTap",
                    "description": "Handler for click event",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "addLink",
            "class": "bb.lib.box.left",
            "module": "bb",
            "submodule": "bb.box"
        },
        {
            "file": "../bb/lib/box/left.js",
            "line": 75,
            "description": "Tells whether the box is visible.",
            "return": {
                "description": "Visibility state",
                "type": "Boolean"
            },
            "itemtype": "method",
            "name": "visible",
            "class": "bb.lib.box.left",
            "module": "bb",
            "submodule": "bb.box"
        },
        {
            "file": "../bb/lib/box/left.js",
            "line": 87,
            "description": "Shows box",
            "itemtype": "method",
            "name": "show",
            "class": "bb.lib.box.left",
            "module": "bb",
            "submodule": "bb.box"
        },
        {
            "file": "../bb/lib/box/left.js",
            "line": 106,
            "description": "Hides box",
            "params": [
                {
                    "name": "noBack",
                    "description": "If true, do not revert history state.",
                    "type": "Boolean"
                }
            ],
            "itemtype": "method",
            "name": "hide",
            "class": "bb.lib.box.left",
            "module": "bb",
            "submodule": "bb.box"
        },
        {
            "file": "../bb/lib/box/left.js",
            "line": 126,
            "description": "Show or hide the box",
            "itemtype": "method",
            "name": "toggle",
            "class": "bb.lib.box.left",
            "module": "bb",
            "submodule": "bb.box"
        },
        {
            "file": "../bb/lib/box/left.js",
            "line": 140,
            "description": "Binds \"this\" to the toggle method",
            "return": {
                "description": "Bound version of the toggle method",
                "type": "Function"
            },
            "itemtype": "method",
            "name": "bindToggle",
            "class": "bb.lib.box.left",
            "module": "bb",
            "submodule": "bb.box"
        },
        {
            "file": "../bb/lib/box/left.js",
            "line": 152,
            "description": "Registers handlers for swipes and slides pertaining to the box.",
            "deprecated": true,
            "itemtype": "method",
            "name": "registerEdgeEvents",
            "class": "bb.lib.box.left",
            "module": "bb",
            "submodule": "bb.box"
        },
        {
            "file": "../bb/lib/pagelet/dashboard.js",
            "line": 23,
            "description": "Has a new list widget created and appends it to the main pagelet\nelement. It also calls the \"Ose.ui.dashboard()\"\nmethod. \"Ose.ui.dashboard()\" governs what is diaplayed on the\ndashboard.",
            "itemtype": "method",
            "name": "loadData",
            "class": "bb.lib.pagelet.dashboard",
            "module": "bb",
            "submodule": "bb.pagelet"
        },
        {
            "file": "../bb/lib/pagelet/dashboard.js",
            "line": 55,
            "description": "Adds an item to the dashboard.",
            "params": [
                {
                    "name": "caption",
                    "description": "Text to be displayed",
                    "type": "String"
                },
                {
                    "name": "stateObj",
                    "description": "State object that should be displayed when the user taps on this item.",
                    "type": "Object"
                }
            ],
            "class": "bb.lib.pagelet.dashboard",
            "module": "bb",
            "submodule": "bb.pagelet"
        },
        {
            "file": "../bb/lib/pagelet/dashboard.js",
            "line": 66,
            "description": "Adds items to the dashboard.",
            "params": [
                {
                    "name": "data",
                    "description": "Array of items",
                    "type": "Array"
                }
            ],
            "class": "bb.lib.pagelet.dashboard",
            "module": "bb",
            "submodule": "bb.pagelet"
        },
        {
            "file": "../bb/lib/pagelet/dashboard.js",
            "line": 80,
            "description": "Adds an item to the dashboard.",
            "params": [
                {
                    "name": "caption",
                    "description": "Text to be displayed",
                    "type": "String"
                },
                {
                    "name": "onTap",
                    "description": "Function to be called when the user taps on this item.",
                    "type": "Function"
                }
            ],
            "class": "bb.lib.pagelet.dashboard",
            "module": "bb",
            "submodule": "bb.pagelet"
        },
        {
            "file": "../bb/lib/pagelet/dashboard.js",
            "line": 96,
            "description": "Adds an item to the dashboardk.",
            "params": [
                {
                    "name": "caption",
                    "description": "Text to be displayed",
                    "type": "String"
                },
                {
                    "name": "cb",
                    "description": "Function to be called when the user taps on this item.",
                    "type": "Function"
                }
            ],
            "class": "bb.lib.pagelet.dashboard",
            "module": "bb",
            "submodule": "bb.pagelet"
        },
        {
            "file": "../bb/lib/pagelet/dashboard.js",
            "line": 117,
            "description": "Verifies that data correspond to the displayed pagelet.",
            "params": [
                {
                    "name": "data",
                    "description": "State object to be compared",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Whether data correspond to the displayed pagelet",
                "type": "Boolean"
            },
            "itemtype": "method",
            "name": "verifyStateObj",
            "class": "bb.lib.pagelet.dashboard",
            "module": "bb",
            "submodule": "bb.pagelet"
        },
        {
            "file": "../bb/lib/pagelet/detail.js",
            "line": 25,
            "description": "The layout that extends this pagelet",
            "type": "String",
            "itemtype": "property",
            "name": "layout",
            "class": "bb.lib.pagelet.detail",
            "module": "bb",
            "submodule": "bb.pagelet"
        },
        {
            "file": "../bb/lib/pagelet/detail.js",
            "line": 138,
            "description": "Displays entry data based on \"this.profile\". This method gets\ncalled once after entry data are loaded. It can be overridden in\nthe layout file for custom data display.",
            "itemtype": "method",
            "name": "displayData",
            "class": "bb.lib.pagelet.detail",
            "module": "bb",
            "submodule": "bb.pagelet"
        },
        {
            "file": "../bb/lib/pagelet/detail.js",
            "line": 186,
            "description": "Updates the information displayed with updated entry data.",
            "params": [
                {
                    "name": "data",
                    "description": "Updated entry data",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "updateData",
            "class": "bb.lib.pagelet.detail",
            "module": "bb",
            "submodule": "bb.pagelet"
        },
        {
            "file": "../bb/lib/pagelet/detail.js",
            "line": 276,
            "params": [
                {
                    "name": "this",
                    "description": "Pagelet",
                    "type": "Object"
                }
            ],
            "class": "bb.lib.pagelet.detail",
            "module": "bb",
            "submodule": "bb.pagelet"
        },
        {
            "file": "../bb/lib/pagelet/gesture.js",
            "line": 72,
            "description": "Clears the canvas",
            "itemtype": "method",
            "name": "clearCanvas",
            "class": "bb.lib.pagelet.gesture",
            "module": "bb",
            "submodule": "bb.pagelet"
        },
        {
            "file": "../bb/lib/pagelet/gesture.js",
            "line": 84,
            "description": "Debug aid method",
            "params": [
                {
                    "name": "message",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "log",
            "class": "bb.lib.pagelet.gesture",
            "module": "bb",
            "submodule": "bb.pagelet"
        },
        {
            "file": "../bb/lib/pagelet/index.js",
            "line": 41,
            "description": "Fired when pagelet is shown.",
            "itemtype": "event",
            "name": "show",
            "class": "bb.lib.pagelet",
            "module": "bb",
            "submodule": "bb.pagelet"
        },
        {
            "file": "../bb/lib/pagelet/index.js",
            "line": 47,
            "description": "Fired when pagelet is hidden.",
            "itemtype": "event",
            "name": "hide",
            "class": "bb.lib.pagelet",
            "module": "bb",
            "submodule": "bb.pagelet"
        },
        {
            "file": "../bb/lib/pagelet/index.js",
            "line": 53,
            "description": "Fired when pagelet is removed..",
            "itemtype": "event",
            "name": "remove",
            "class": "bb.lib.pagelet",
            "module": "bb",
            "submodule": "bb.pagelet"
        },
        {
            "file": "../bb/lib/pagelet/index.js",
            "line": 59,
            "description": "Each Pagelet descendant should define a \"html\" method. This method\nreturns the main pagelet element. It should be called by the code\ncreating the pagelet, and this code should also append the element\nto the right place in the <body>.",
            "itemtype": "method",
            "name": "html",
            "abstract": "",
            "class": "bb.lib.pagelet",
            "module": "bb",
            "submodule": "bb.pagelet"
        },
        {
            "file": "../bb/lib/pagelet/index.js",
            "line": 69,
            "description": "Each Pagelet descendant should define a \"loadData\" method. This\nmethod should be called by the code creating the pagelet and should\nensure that data displayed by the pagelet are loaded.",
            "itemtype": "method",
            "name": "loadData",
            "abstract": "",
            "class": "bb.lib.pagelet",
            "module": "bb",
            "submodule": "bb.pagelet"
        },
        {
            "file": "../bb/lib/pagelet/index.js",
            "line": 78,
            "description": "Pagelets can define an \"onSearch\" method, which gets called when\nthe user performs a search.",
            "params": [
                {
                    "name": "value",
                    "description": "Search string",
                    "type": "String"
                }
            ],
            "itemtype": "method",
            "name": "onSearch",
            "abstract": "",
            "class": "bb.lib.pagelet",
            "module": "bb",
            "submodule": "bb.pagelet"
        },
        {
            "file": "../bb/lib/pagelet/index.js",
            "line": 88,
            "description": "Each Pagelet descendant should define a \"verifyStateObj\"\nmethod. This method compares the supplied state object with the\ncurrently displayed one.",
            "params": [
                {
                    "name": "data",
                    "description": "State object to be compared",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Whether data correspond to the displayed pagelet",
                "type": "Boolean"
            },
            "itemtype": "method",
            "name": "verifyStateObj",
            "abstract": "",
            "class": "bb.lib.pagelet",
            "module": "bb",
            "submodule": "bb.pagelet"
        },
        {
            "file": "../bb/lib/pagelet/index.js",
            "line": 101,
            "description": "Defines the layout which extends this pagelet. Layouts are defined\nin modules located in the \"bb\" subdirectory of the entry kind\ndirectory. .",
            "itemtype": "property",
            "name": "layout",
            "type": "String",
            "abstract": "",
            "class": "bb.lib.pagelet",
            "module": "bb",
            "submodule": "bb.pagelet"
        },
        {
            "file": "../bb/lib/pagelet/index.js",
            "line": 145,
            "description": "Is called after a pagelet is displayed.\n\nThe function creating a pagelet receives a callback as one of its\nparameters. This callback is assigned to\n\"this.doAfterDisplay\". This method ensures that\n\"this.doAfterDisplay\" is called only once.",
            "return": {
                "description": "Whether \"this.doAfterDisplay\" has run.",
                "type": "Boolean"
            },
            "itemtype": "method",
            "name": "afterDisplay",
            "class": "bb.lib.pagelet",
            "module": "bb",
            "submodule": "bb.pagelet"
        },
        {
            "file": "../bb/lib/pagelet/list.js",
            "line": 123,
            "description": "Call to update list",
            "params": [
                {
                    "name": "stateObj",
                    "description": "New state object",
                    "type": "Object"
                },
                {
                    "name": "force",
                    "description": "If true, perform update even though stateObj is unchanged.",
                    "type": "Boolean"
                },
                {
                    "name": "keep",
                    "description": "Keep non-persistent list items.",
                    "type": "Boolean"
                }
            ],
            "itemtype": "method",
            "name": "update",
            "class": "bb.lib.pagelet.list",
            "module": "bb",
            "submodule": "bb.pagelet"
        },
        {
            "file": "../bb/lib/pagelet/list.js",
            "line": 186,
            "description": "Prints entry list item",
            "params": [
                {
                    "name": "entry",
                    "description": "Entry instance to be printed",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "printListEntry",
            "class": "bb.lib.pagelet.list",
            "module": "bb",
            "submodule": "bb.pagelet"
        },
        {
            "file": "../bb/lib/pagelet/list.js",
            "line": 217,
            "description": "Prints list header",
            "itemtype": "method",
            "name": "printHeader",
            "class": "bb.lib.pagelet.list",
            "module": "bb",
            "submodule": "bb.pagelet"
        },
        {
            "file": "../bb/lib/pagelet/listItem.js",
            "line": 55,
            "description": "Called when user taps on a list item",
            "itemtype": "method",
            "name": "tapItem",
            "type": "Object",
            "class": "bb.lib.pagelet.listItem",
            "module": "bb",
            "submodule": "bb.pagelet"
        },
        {
            "file": "../bb/lib/widget/index.js",
            "line": 30,
            "description": "Creates a jQuery object representing widget.",
            "return": {
                "description": "jQuery object representing widget",
                "type": "Object"
            },
            "itemtype": "method",
            "name": "html",
            "abstract": "",
            "class": "bb.lib.widget",
            "module": "bb",
            "submodule": "bb.widget"
        },
        {
            "file": "../bb/lib/widget/index.js",
            "line": 38,
            "description": "ID of widget",
            "itemtype": "property",
            "name": "id",
            "type": "String",
            "class": "bb.lib.widget",
            "module": "bb",
            "submodule": "bb.widget"
        },
        {
            "file": "../bb/lib/widget/index.js",
            "line": 47,
            "description": "Finds elements within current widget using a \"selector\".  It\nconcatenates \"this.id\" with the selector and uses jQuery \"$()\". If\nthe \"selector\" is empty, it returns the main jQuery element.",
            "params": [
                {
                    "name": "selector",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "jQuery element.",
                "type": "Object"
            },
            "itemtype": "method",
            "name": "$",
            "class": "bb.lib.widget",
            "module": "bb",
            "submodule": "bb.widget"
        },
        {
            "file": "../bb/lib/widget/index.js",
            "line": 63,
            "description": "TODO Rename to isVisible?",
            "itemtype": "method",
            "name": "visible",
            "class": "bb.lib.widget",
            "module": "bb",
            "submodule": "bb.widget"
        },
        {
            "file": "../bb/lib/widget/index.js",
            "line": 73,
            "description": "Shows widget.",
            "itemtype": "method",
            "name": "show",
            "class": "bb.lib.widget",
            "module": "bb",
            "submodule": "bb.widget"
        },
        {
            "file": "../bb/lib/widget/index.js",
            "line": 83,
            "description": "Hides widget",
            "itemtype": "method",
            "name": "hide",
            "class": "bb.lib.widget",
            "module": "bb",
            "submodule": "bb.widget"
        },
        {
            "file": "../bb/lib/widget/index.js",
            "line": 93,
            "description": "Removes widget and all its listeners",
            "itemtype": "method",
            "name": "remove",
            "class": "bb.lib.widget",
            "module": "bb",
            "submodule": "bb.widget"
        },
        {
            "file": "../bb/lib/widget/index.js",
            "line": 103,
            "description": "Test whether element has been removed from the <body>\n\nTODO: rename to isRemoved",
            "itemtype": "method",
            "name": "removed",
            "class": "bb.lib.widget",
            "module": "bb",
            "submodule": "bb.widget"
        },
        {
            "file": "../bb/lib/widget/index.js",
            "line": 115,
            "description": "Creates new pagelet",
            "params": [
                {
                    "name": "stateObj",
                    "description": "State object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Newly created pagelet element",
                "type": "Object"
            },
            "itemtype": "method",
            "name": "newPagelet",
            "class": "bb.lib.widget",
            "module": "bb",
            "submodule": "bb.widget"
        },
        {
            "file": "../bb/lib/widget/index.js",
            "line": 145,
            "description": "Creates new widget",
            "params": [
                {
                    "name": "type",
                    "description": "Widget type",
                    "type": "String"
                },
                {
                    "name": "id",
                    "description": "Widget ID",
                    "type": "String"
                },
                {
                    "name": "prop",
                    "description": "Properties",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Newly created widget element",
                "type": "Object"
            },
            "itemtype": "method",
            "name": "newWidget",
            "class": "bb.lib.widget",
            "module": "bb",
            "submodule": "bb.widget"
        },
        {
            "file": "../bb/lib/widget/index.js",
            "line": 184,
            "description": "Updates a widget or returns widget value",
            "params": [
                {
                    "name": "id",
                    "description": "Widget ID",
                    "type": "String"
                },
                {
                    "name": "prop",
                    "description": "Properties",
                    "type": "Object"
                },
                {
                    "name": "origin",
                    "description": "Origin of the call",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Value",
                "type": "*"
            },
            "itemtype": "method",
            "name": "widget",
            "class": "bb.lib.widget",
            "module": "bb",
            "submodule": "bb.widget"
        },
        {
            "file": "../bb/lib/widget/search.js",
            "line": 32,
            "description": "Widget initialization",
            "itemtype": "method",
            "name": "init",
            "class": "bb.lib.widget.search",
            "module": "bb",
            "submodule": "bb.widget"
        },
        {
            "file": "../bb/lib/widget/search.js",
            "line": 43,
            "description": "Creates search button",
            "return": {
                "description": "jQuery object representing button.",
                "type": "Object"
            },
            "itemtype": "method",
            "name": "button",
            "class": "bb.lib.widget.search",
            "module": "bb",
            "submodule": "bb.widget"
        },
        {
            "file": "../bb/lib/widget/search.js",
            "line": 58,
            "description": "Creates search form",
            "return": {
                "description": "jQuery object representing search form.",
                "type": "Object"
            },
            "itemtype": "method",
            "name": "form",
            "class": "bb.lib.widget.search",
            "module": "bb",
            "submodule": "bb.widget"
        },
        {
            "file": "../bb/lib/widget/search.js",
            "line": 126,
            "description": "Shows search form",
            "itemtype": "method",
            "name": "show",
            "class": "bb.lib.widget.search",
            "module": "bb",
            "submodule": "bb.widget"
        },
        {
            "file": "../bb/lib/widget/search.js",
            "line": 149,
            "description": "Hides search form",
            "params": [
                {
                    "name": "noBack",
                    "description": "If true, do not go back in history.",
                    "type": "Boolean"
                }
            ],
            "itemtype": "method",
            "name": "hide",
            "class": "bb.lib.widget.search",
            "module": "bb",
            "submodule": "bb.widget"
        },
        {
            "file": "../bb/lib/widget/search.js",
            "line": 170,
            "description": "TODO: Rename to isVisible\nCheck if the search widget is visible.",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "itemtype": "method",
            "name": "visible",
            "class": "bb.lib.widget.search",
            "module": "bb",
            "submodule": "bb.widget"
        },
        {
            "file": "../bb/lib/browser.js",
            "line": 12,
            "description": "Last displayed \"page bit\" key object.",
            "itemtype": "property",
            "name": "lastStateObj",
            "type": "Object",
            "class": "bb.lib",
            "module": "bb"
        },
        {
            "file": "../bb/lib/browser.js",
            "line": 20,
            "description": "Pagelet displayed by default",
            "itemtype": "property",
            "name": "defaultContent",
            "type": "Object",
            "class": "bb.lib",
            "module": "bb"
        },
        {
            "file": "../bb/lib/browser.js",
            "line": 27,
            "description": "Fired when UI is initialized",
            "itemtype": "event",
            "name": "initialized",
            "class": "bb.lib",
            "module": "bb"
        },
        {
            "file": "../bb/lib/browser.js",
            "line": 34,
            "description": "OSE plugin configuration method.",
            "params": [
                {
                    "name": "name",
                    "description": "Configuration name",
                    "type": "Object"
                },
                {
                    "name": "data",
                    "description": "Configuration data",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "config",
            "class": "bb.lib",
            "module": "bb"
        },
        {
            "file": "../bb/lib/browser.js",
            "line": 54,
            "description": "Internal OSE UI startup method\nEmits the \"initialized\" event",
            "itemtype": "method",
            "name": "run",
            "class": "bb.lib",
            "module": "bb"
        },
        {
            "file": "../bb/lib/browser.js",
            "line": 117,
            "description": "Creates a new empty state item to the browser's history",
            "itemtype": "method",
            "name": "newHistory",
            "class": "bb.lib",
            "module": "bb"
        },
        {
            "file": "../bb/lib/browser.js",
            "line": 129,
            "description": "Updates the last history item with the current state object",
            "itemtype": "method",
            "name": "updateHistory",
            "class": "bb.lib",
            "module": "bb"
        },
        {
            "file": "../bb/lib/browser.js",
            "line": 141,
            "description": "Displays or updates ui based on the state object.",
            "params": [
                {
                    "name": "stateObj",
                    "description": "State object",
                    "type": "Object"
                },
                {
                    "name": "source",
                    "description": "Source of the call",
                    "type": "String 'user'|'history'"
                }
            ],
            "itemtype": "method",
            "name": "display",
            "class": "bb.lib",
            "module": "bb"
        },
        {
            "file": "../bb/lib/browser.js",
            "line": 199,
            "description": "Creates new event handler that calls the \"Ose.ui.display(stateObj)\"",
            "params": [
                {
                    "name": "stateObj",
                    "description": "State object to be displayed",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Event handler calling \"Ose.ui.display(stateObj)\"",
                "type": "Function"
            },
            "itemtype": "method",
            "name": "bindContent",
            "class": "bb.lib",
            "module": "bb"
        },
        {
            "file": "../bb/lib/browser.js",
            "line": 217,
            "description": "Scroll element to the top of the screen.",
            "params": [
                {
                    "name": "el",
                    "description": "jQuery element to be scrolled to the top",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "scrollToTop",
            "class": "bb.lib",
            "module": "bb"
        },
        {
            "file": "../bb/lib/browser.js",
            "line": 233,
            "description": "Handle hovering",
            "params": [
                {
                    "name": "el",
                    "description": "jQuery element",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "TODO"
            },
            "itemtype": "method",
            "name": "handleHover",
            "class": "bb.lib",
            "module": "bb"
        },
        {
            "file": "../bb/lib/browser.js",
            "line": 261,
            "description": "Creates and displays a new dialog.",
            "params": [
                {
                    "name": "type",
                    "description": "Dialog type",
                    "type": "String"
                },
                {
                    "name": "prop",
                    "description": "Properties object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Dialog instance object",
                "type": "Object"
            },
            "itemtype": "method",
            "name": "newDialog",
            "class": "bb.lib",
            "module": "bb"
        },
        {
            "file": "../bb/lib/browser.js",
            "line": 297,
            "description": "Closes a dialog",
            "itemtype": "method",
            "name": "closeDialog",
            "type": "Object",
            "class": "bb.lib",
            "module": "bb"
        },
        {
            "file": "../bb/lib/browser.js",
            "line": 311,
            "description": "Gets state object",
            "return": {
                "description": "State object",
                "type": "Object"
            },
            "itemtype": "method",
            "name": "getStateObj",
            "class": "bb.lib",
            "module": "bb"
        },
        {
            "file": "../bb/lib/browser.js",
            "line": 338,
            "description": "Tests whether the UI is displayed in a mobile browser",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "itemtype": "method",
            "name": "isMobile",
            "class": "bb.lib",
            "module": "bb"
        },
        {
            "file": "../bb/lib/browser.js",
            "line": 372,
            "description": "Checks browser orientation",
            "itemtype": "method",
            "name": "checkOrientation",
            "class": "bb.lib",
            "module": "bb"
        },
        {
            "file": "../bb/lib/browser.js",
            "line": 398,
            "description": "Switch to portrait mode",
            "itemtype": "method",
            "name": "portrait",
            "class": "bb.lib",
            "module": "bb"
        },
        {
            "file": "../bb/lib/browser.js",
            "line": 409,
            "description": "Switch to landscape mode",
            "itemtype": "method",
            "name": "landscape",
            "class": "bb.lib",
            "module": "bb"
        },
        {
            "file": "../boards/lib/relay/index.js",
            "line": 9,
            "caption": "Relay board kind",
            "readme": "Relay board is OSE board with four relays.",
            "class": "boards.lib",
            "module": "bb"
        },
        {
            "file": "../boards/lib/relay/socket.js",
            "line": 6,
            "caption": "Relay board-to-controller client socket",
            "class": "boards.lib",
            "module": "bb"
        },
        {
            "file": "../control/lib/din/index.js",
            "line": 29,
            "description": "Entry data object",
            "itemtype": "property",
            "name": "data",
            "type": "Object",
            "class": "control.lib.din",
            "module": "boards",
            "submodule": "control.distributor"
        },
        {
            "file": "../control/lib/din/index.js",
            "line": 36,
            "description": "Identification of entry representing a physical device.",
            "itemtype": "property",
            "name": "data.master",
            "type": "String | Object",
            "class": "control.lib.din",
            "module": "boards",
            "submodule": "control.distributor"
        },
        {
            "file": "../control/lib/din/index.js",
            "line": 43,
            "description": "The pin index of the corresponding pin on the controller.",
            "itemtype": "property",
            "name": "data.pin",
            "type": "String",
            "class": "control.lib.din",
            "module": "boards",
            "submodule": "control.distributor"
        },
        {
            "file": "../control/lib/din/pin.js",
            "line": 23,
            "description": "Class constructor",
            "params": [
                {
                    "name": "entry",
                    "description": "Digital input entry",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "constructor",
            "class": "control.lib.din.pin",
            "module": "boards",
            "submodule": "control.pin"
        },
        {
            "file": "../control/lib/din/pin.js",
            "line": 44,
            "description": "Broken link handler",
            "itemtype": "method",
            "name": "end",
            "class": "control.lib.din.pin",
            "module": "boards",
            "submodule": "control.pin"
        },
        {
            "file": "../control/lib/din/pin.js",
            "line": 65,
            "description": "Sync handler",
            "itemtype": "method",
            "name": "sync",
            "class": "control.lib.din.pin",
            "module": "boards",
            "submodule": "control.pin"
        },
        {
            "file": "../control/lib/din/pin.js",
            "line": 80,
            "description": "Update handler called when the state of a physical pin changes on\nthe master side",
            "params": [
                {
                    "name": "req",
                    "description": "Update request data",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "update",
            "class": "control.lib.din.pin",
            "module": "boards",
            "submodule": "control.pin"
        },
        {
            "file": "../control/lib/door/index.js",
            "line": 30,
            "description": "Controller entry identification object.\n\nThe switch entry establishes a new link to this controller.",
            "itemtype": "property",
            "name": "data.master",
            "type": "String | Object",
            "class": "control.lib.door",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/door/index.js",
            "line": 39,
            "description": "Master pin index\n\nIndex of digital input pin on the master controller",
            "itemtype": "property",
            "name": "data.pin",
            "type": "String",
            "class": "control.lib.door",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/door/index.js",
            "line": 48,
            "description": "Debounce timeout\n\nDefines debounce timeout of the digital input in milliseconds.\n\nThe default value is `M.consts.switchDebounce`.",
            "itemtype": "property",
            "name": "data.debounce",
            "type": "Number",
            "class": "control.lib.door",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/door/index.js",
            "line": 59,
            "description": "Current switch state value",
            "itemtype": "property",
            "name": "state.value",
            "type": "Number (0, 1)",
            "class": "control.lib.door",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/door/index.js",
            "line": 66,
            "description": "Timestamp of the last switch change.",
            "itemtype": "property",
            "name": "state.at",
            "type": "Number",
            "class": "control.lib.door",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/door/index.js",
            "line": 73,
            "description": "Debounce timeout\n\nDefines debounce timeout of the digital input in milliseconds. The\nvalue is taken from `data.debounce`.",
            "itemtype": "property",
            "name": "state.debounce",
            "type": "Number",
            "class": "control.lib.door",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/door/index.js",
            "line": 83,
            "description": "Open event\n\nFired when a \"door open\" event is detected.",
            "itemtype": "event",
            "name": "open",
            "class": "control.lib.door",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/door/index.js",
            "line": 91,
            "description": "Close event\n\nFired when a \"door close\" event is detected.",
            "itemtype": "event",
            "name": "close",
            "class": "control.lib.door",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/door/pin.js",
            "line": 24,
            "description": "Socket constructor",
            "params": [
                {
                    "name": "entry",
                    "description": "Door entry",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "constructor",
            "class": "control.lib.door.pin",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/door/pin.js",
            "line": 45,
            "description": "Sync handler",
            "params": [
                {
                    "name": "req",
                    "description": "Request data",
                    "type": "*"
                }
            ],
            "itemtype": "method",
            "name": "sync",
            "class": "control.lib.door.pin",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/door/pin.js",
            "line": 59,
            "description": "Update handler",
            "params": [
                {
                    "name": "req",
                    "description": "Update request",
                    "type": "Object",
                    "props": [
                        {
                            "name": "value",
                            "description": "(0, 1) Current pin state",
                            "type": "Number"
                        },
                        {
                            "name": "at",
                            "description": "Timestamp of the update",
                            "type": "Number"
                        }
                    ]
                }
            ],
            "itemtype": "method",
            "name": "update",
            "class": "control.lib.door.pin",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/heater/index.js",
            "line": 29,
            "description": "Controller entry identification object.\n\nThe heater entry establishes a new link to the controller.",
            "itemtype": "property",
            "name": "data.master",
            "type": "String | Object",
            "class": "control.lib.heater",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/heater/index.js",
            "line": 38,
            "description": "Master pin index\n\nIndex of digital input pin on the master controller",
            "itemtype": "property",
            "name": "data.pin",
            "type": "String",
            "class": "control.lib.heater",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/heater/index.js",
            "line": 47,
            "description": "Tariff entry identification object.\n\nIf specified, the heater establishes a new link to the\n`data.tariff` entry and gets controlled by it.",
            "itemtype": "property",
            "name": "data.tariff",
            "type": "String | Object",
            "class": "control.lib.heater",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/heater/index.js",
            "line": 84,
            "description": "Invoked on entry state change.",
            "params": [
                {
                    "name": "this",
                    "description": "Entry",
                    "type": "Object"
                }
            ],
            "class": "control.lib.heater",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/heater/index.js",
            "line": 99,
            "description": "Invoked on entry state change.",
            "params": [
                {
                    "name": "this",
                    "description": "Entry",
                    "type": "Object"
                }
            ],
            "class": "control.lib.heater",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/heater/index.js",
            "line": 119,
            "description": "Command handler. Sets up heater power to specified value.",
            "params": [
                {
                    "name": "this",
                    "description": "Context",
                    "type": "Object",
                    "props": [
                        {
                            "name": "entry",
                            "description": "Target entry.",
                            "type": "Object"
                        }
                    ]
                },
                {
                    "name": "req",
                    "description": "Value between 0..1",
                    "type": "Boolean | Number | String"
                }
            ],
            "itemtype": "method",
            "name": "power",
            "class": "control.lib.heater",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/heater/pin.js",
            "line": 24,
            "description": "Socket constructor",
            "itemtype": "method",
            "name": "constructor",
            "class": "control.lib.heater.pin",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/heater/pin.js",
            "line": 42,
            "description": "Broken link handler",
            "params": [
                {
                    "name": "err",
                    "description": "[Error] instance",
                    "type": "Object"
                },
                {
                    "name": "resp",
                    "description": "Response data",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "end",
            "class": "control.lib.heater.pin",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/heater/pin.js",
            "line": 63,
            "description": "Sync handler",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "itemtype": "method",
            "name": "sync",
            "class": "control.lib.heater.pin",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/heater/pin.js",
            "line": 79,
            "description": "Update handler",
            "params": [
                {
                    "name": "req",
                    "description": "Update request",
                    "type": "Object",
                    "props": [
                        {
                            "name": "value",
                            "description": "(0, 1) Current pin state",
                            "type": "Number"
                        },
                        {
                            "name": "at",
                            "description": "Timestamp of the update",
                            "type": "Number"
                        }
                    ]
                }
            ],
            "itemtype": "method",
            "name": "update",
            "class": "control.lib.heater.pin",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/heater/tariff.js",
            "line": 22,
            "description": "Socket constructor",
            "params": [
                {
                    "name": "entry",
                    "description": "Heater entry",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "constructor",
            "class": "control.lib.heater.tariff",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/heater/tariff.js",
            "line": 45,
            "description": "Open handler",
            "params": [
                {
                    "name": "req",
                    "description": "Open request",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "open",
            "class": "control.lib.heater.tariff",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/heater/tariff.js",
            "line": 57,
            "description": "Close handler",
            "params": [
                {
                    "name": "req",
                    "description": "Request data",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "close",
            "class": "control.lib.heater.tariff",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/heater/tariff.js",
            "line": 69,
            "description": "Error handler",
            "params": [
                {
                    "name": "err",
                    "description": "[Error] instance",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "error",
            "class": "control.lib.heater.tariff",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/heater/tariff.js",
            "line": 82,
            "description": "Update handler",
            "params": [
                {
                    "name": "req",
                    "description": "Update request",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "update",
            "class": "control.lib.heater.tariff",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/light/index.js",
            "line": 45,
            "description": "Light channels\n\nA light entry can consist of one or more channels. An example light\ncan have 3 LED strips (warm white, cold white and RGB). The entry\ndescribing such a light consists of 5 independently controllable\nchannels (warm, cold, red, green and blue).\n\nEach property of `data.channels` is one channel. The key is a\nchannel name and the value is the pin index on the `data.master`\ncontroller.",
            "example": [
                "\n    data.channels = {\n      warm: 0,\n      cold: 1,\n      red: 2,\n      green: 3,\n      blue: 4\n    }"
            ],
            "itemtype": "property",
            "name": "data.channels",
            "type": "Object",
            "class": "control.lib.light",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/light/index.js",
            "line": 70,
            "description": "Controller entry identification object.\n\nThe light entry establishes a new link to the controller.",
            "itemtype": "property",
            "name": "data.master",
            "type": "String | Object",
            "class": "control.lib.light",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/light/index.js",
            "line": 79,
            "description": "Each property of this object defines one profile of the\nlight. There are predefined profiles `\"off\"`, `\"on\"` and `\"full\"`.\n\nDefault values are:\n- `\"off\": 0`\n- `\"on\": M.consts.lightDefaultOn`\n- `\"full\": 1`",
            "itemtype": "property",
            "name": "data.main",
            "type": "Object",
            "class": "control.lib.light",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/light/index.js",
            "line": 92,
            "description": "Switch entry identification object.\n\nIf specified, the light establishes a new link to a switch and gets\ncontrolled by it.",
            "itemtype": "property",
            "name": "data.switch",
            "type": "String | Object",
            "class": "control.lib.light",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/light/index.js",
            "line": 102,
            "description": "Auto off value\n\nDefines how long the light will wait before it starts dimming and\nthe speed of the dimming. The auto off timer is enabled each time\nany light channel is changed.\n\nThe value can be one of the following:\n- `true`: Enable auto off with default values\n- `false`: Disable auto off\n- Number: Wait timeout in seconds\n- Object: `{wait: <seconds>, speed: <milliseconds>}`\n\nDefault values:\n- `data.autoOff.wait: M.consts.lightAutoOffWait`\n- `data.autoOff.speed: M.consts.lightAutoOffSpeed`",
            "itemtype": "property",
            "name": "data.autoOff",
            "type": "Boolean | Number | Object",
            "class": "control.lib.light",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/light/index.js",
            "line": 192,
            "description": "[Command handler].\n\nSets light profile.",
            "params": [
                {
                    "name": "req",
                    "description": "Sets the light to the value specified. Simple profile name can be specified.",
                    "type": "Object|String",
                    "props": [
                        {
                            "name": "name",
                            "description": "Profile name",
                            "type": "String"
                        },
                        {
                            "name": "speed",
                            "description": "Speed of change",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                }
            ],
            "itemtype": "method",
            "name": "profile",
            "class": "control.lib.light",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/light/index.js",
            "line": 221,
            "description": "[Command handler].\n\nSwitch between on or off profiles.",
            "params": [
                {
                    "name": "req",
                    "description": "Sets the light to the value specified. If `req` is not an object `req` is replaced with `{type: req, speed: M.consts.lightDimSpeed}`",
                    "type": "Object",
                    "props": [
                        {
                            "name": "type",
                            "description": "\n- `false`: Switch all channels off\n- `true`: Switch all channels to profile \"on\"\n- `\"off\"`: Switch all channels off\n- `\"on\"`: Switch all channels to profile \"on\"",
                            "type": "Null | Boolean | Number, String"
                        },
                        {
                            "name": "speed",
                            "description": "Speed of change",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                }
            ],
            "itemtype": "method",
            "name": "switch",
            "class": "control.lib.light",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/light/index.js",
            "line": 278,
            "description": "[Command handler].\n\nSets all channels.",
            "params": [
                {
                    "name": "req",
                    "description": "Sets the light to the value specified. `req` can be one of the following:\n- Number: Switch all channels to this value. It should be number between 0 .. 1\n- Object: Sets channels to requested value. Channels not listed will be switched off",
                    "type": "Number | Object"
                },
                {
                    "name": "socket",
                    "description": "Response [socket]",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "set",
            "class": "control.lib.light",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/light/index.js",
            "line": 342,
            "description": "[Command handler].\n\nKeep all channels at their current value.",
            "params": [
                {
                    "name": "req",
                    "description": "Unused",
                    "type": "*",
                    "optional": true
                },
                {
                    "name": "socket",
                    "description": "Response [socket]",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "set",
            "class": "control.lib.light",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/light/index.js",
            "line": 369,
            "description": "[Command handler]\n\nUpdate requested channels.",
            "params": [
                {
                    "name": "req",
                    "description": "Delta",
                    "type": "String | Number"
                },
                {
                    "name": "socket",
                    "description": "Response [socket]",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "delta",
            "class": "control.lib.light",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/light/index.js",
            "line": 466,
            "description": "[Command handler]\n\nUpdate requested channels.",
            "params": [
                {
                    "name": "req",
                    "description": "List of channels with their requested values.",
                    "type": "Number|Object"
                },
                {
                    "name": "socket",
                    "description": "Response [socket]",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "update",
            "class": "control.lib.light",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/light/index.js",
            "line": 533,
            "description": "[Command handler].\n\nLock or unlock a light. Locked light cannot be changed via its command handlers.",
            "params": [
                {
                    "name": "req",
                    "description": "Unused",
                    "type": "Boolean",
                    "optional": true
                },
                {
                    "name": "socket",
                    "description": "Response [socket]",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "lock",
            "class": "control.lib.light",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/light/index.js",
            "line": 563,
            "description": "[Command handler]\n\nChange auto off behaviour.",
            "params": [
                {
                    "name": "req",
                    "description": "Auto off configuration conforming to [data.autoOff].",
                    "type": "Boolean | Number | Object"
                },
                {
                    "name": "socket",
                    "description": "Response [socket]",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "autoOff",
            "class": "control.lib.light",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/light/pin.js",
            "line": 23,
            "description": "Socket constructor",
            "itemtype": "method",
            "name": "constructor",
            "class": "control.lib.light.pin",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/light/pin.js",
            "line": 48,
            "description": "Sync handler",
            "params": [
                {
                    "name": "state",
                    "description": "Whether this socket is synced",
                    "type": "Boolean"
                },
                {
                    "name": "data",
                    "description": "Optional open data",
                    "type": "Object",
                    "optional": true
                }
            ],
            "itemtype": "method",
            "name": "sync",
            "class": "control.lib.light.pin",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/light/pin.js",
            "line": 72,
            "description": "Update handler",
            "params": [
                {
                    "name": "req",
                    "description": "Update request",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "update",
            "class": "control.lib.light.pin",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/light/remote.js",
            "line": 23,
            "description": "Class constructor",
            "itemtype": "method",
            "name": "constructor",
            "class": "control.lib.light.remote",
            "module": "control",
            "submodule": "control.remote"
        },
        {
            "file": "../control/lib/light/remote.js",
            "line": 40,
            "description": "Call to add a light to this group of commands.",
            "params": [
                {
                    "name": "index",
                    "description": "Index of light",
                    "type": "Number"
                },
                {
                    "name": "target",
                    "description": "Light entry identification",
                    "type": "Number | String | Object"
                }
            ],
            "itemtype": "method",
            "name": "constructor",
            "class": "control.lib.light.remote",
            "module": "control",
            "submodule": "control.remote"
        },
        {
            "file": "../control/lib/light/switch.js",
            "line": 22,
            "description": "Socket constructor",
            "itemtype": "method",
            "name": "constructor",
            "class": "control.lib.light.switch",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/light/switch.js",
            "line": 32,
            "description": "Error handler",
            "params": [
                {
                    "name": "err",
                    "description": "[Error] instance",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "error",
            "class": "control.lib.light.switch",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/light/switch.js",
            "line": 45,
            "description": "Press handler",
            "itemtype": "method",
            "name": "press",
            "class": "control.lib.light.switch",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/light/switch.js",
            "line": 55,
            "description": "Release handler",
            "itemtype": "method",
            "name": "release",
            "class": "control.lib.light.switch",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/light/switch.js",
            "line": 65,
            "description": "Tap handler",
            "params": [
                {
                    "name": "count",
                    "description": "Count of presses within `M.consts.switchTapTimeout`.",
                    "type": "Number"
                }
            ],
            "itemtype": "method",
            "name": "tap",
            "class": "control.lib.light.switch",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/light/switch.js",
            "line": 89,
            "description": "Hold handler",
            "itemtype": "method",
            "name": "hold",
            "class": "control.lib.light.switch",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/pin/commands.js",
            "line": 20,
            "description": "[Command handler]",
            "params": [
                {
                    "name": "req",
                    "description": "Request relayed to [pin list `register`]",
                    "type": "Object"
                },
                {
                    "name": "socket",
                    "description": "Slave socket",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "registerPin",
            "class": "control.lib.pin.commands",
            "module": "control",
            "submodule": "control.pin"
        },
        {
            "file": "../control/lib/pin/index.js",
            "line": 106,
            "description": "Owning [pin list] reference",
            "itemtype": "property",
            "name": "index",
            "type": "String",
            "class": "control.lib.pin",
            "module": "control",
            "submodule": "control.pin"
        },
        {
            "file": "../control/lib/pin/index.js",
            "line": 113,
            "description": "Pin index\n\nPin index within master [entry]",
            "aliases": "pinIndex",
            "itemtype": "property",
            "name": "index",
            "type": "String",
            "class": "control.lib.pin",
            "module": "control",
            "submodule": "control.pin"
        },
        {
            "file": "../control/lib/pin/index.js",
            "line": 123,
            "description": "Pin type\n\nPin type reference",
            "aliases": "pinType pinTypes",
            "itemtype": "property",
            "name": "type",
            "type": "Object",
            "class": "control.lib.pin",
            "module": "control",
            "submodule": "control.pin"
        },
        {
            "file": "../control/lib/pin/index.js",
            "line": 133,
            "description": "Pin flavour\n\nPin flavour name",
            "aliases": "pinFlavour pinFlavours",
            "itemtype": "property",
            "name": "flavour",
            "type": "String",
            "class": "control.lib.pin",
            "module": "control",
            "submodule": "control.pin"
        },
        {
            "file": "../control/lib/pin/index.js",
            "line": 143,
            "description": "Pin capabilities reference.\n\nPin capabilities are defined by the master entry for each pin and\npin type.",
            "itemtype": "property",
            "name": "caps",
            "type": "Object",
            "class": "control.lib.pin",
            "module": "control",
            "submodule": "control.pin"
        },
        {
            "file": "../control/lib/pin/index.js",
            "line": 155,
            "description": "Class constructor",
            "params": [
                {
                    "name": "pins",
                    "description": "[Pin list]",
                    "type": "Object"
                },
                {
                    "name": "index",
                    "description": "Pin index",
                    "type": "String"
                },
                {
                    "name": "type",
                    "description": "[Pin type]",
                    "type": "Object"
                },
                {
                    "name": "caps",
                    "description": "[Pin capabilities]",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "constructor",
            "class": "control.lib.pin",
            "module": "control",
            "submodule": "control.pin"
        },
        {
            "file": "../control/lib/pin/index.js",
            "line": 175,
            "description": "Close handler",
            "itemtype": "method",
            "name": "close",
            "class": "control.lib.pin",
            "module": "control",
            "submodule": "control.pin"
        },
        {
            "file": "../control/lib/pin/index.js",
            "line": 185,
            "description": "Error handler",
            "params": [
                {
                    "name": "err",
                    "description": "[Error] object",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "error",
            "class": "control.lib.pin",
            "module": "control",
            "submodule": "control.pin"
        },
        {
            "file": "../control/lib/pin/index.js",
            "line": 199,
            "description": "Read request handler",
            "params": [
                {
                    "name": "req",
                    "description": "Request data",
                    "type": "Object"
                },
                {
                    "name": "socket",
                    "description": "Optional response socket only for this\n  request. After the read request is processed, `socket.close()` is\n  invoked with the response. Pin changes are always sent to the\n  client by a `link.update()` call.",
                    "type": "Object",
                    "optional": true
                }
            ],
            "itemtype": "method",
            "name": "read",
            "class": "control.lib.pin",
            "module": "control",
            "submodule": "control.pin"
        },
        {
            "file": "../control/lib/pin/index.js",
            "line": 224,
            "description": "Update request handler, calls `this.type.write()` to change\nphysical pin value.  This method can be overridden by individual pin\nflavours.",
            "params": [
                {
                    "name": "req",
                    "description": "Request data",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "update",
            "class": "control.lib.pin",
            "module": "control",
            "submodule": "control.pin"
        },
        {
            "file": "../control/lib/pin/light.js",
            "line": 29,
            "description": "This method is assigned to the `Pin` instance and replaces the\noriginal `send()` method.  `this` is a `Pin` instance.",
            "class": "control.lib.pin.light",
            "module": "control",
            "submodule": "control.pin"
        },
        {
            "file": "../control/lib/pin/light.js",
            "line": 41,
            "description": "This method is assigned to the `Pin` instance and replaces the\noriginal `update()` method.  `this` is a `Pin` instance.",
            "class": "control.lib.pin.light",
            "module": "control",
            "submodule": "control.pin"
        },
        {
            "file": "../control/lib/pin/light.js",
            "line": 132,
            "description": "Call to update PWM board entry state of individual pin and invoke\n`link.update()`",
            "params": [
                {
                    "name": "pin",
                    "description": "Pin instance",
                    "type": "Object"
                },
                {
                    "name": "rval",
                    "description": "Raw value of controller pin",
                    "type": "Number"
                },
                {
                    "name": "val",
                    "description": "Value between 0 and 1",
                    "type": "Number"
                },
                {
                    "name": "at",
                    "description": "Timestamp of request",
                    "type": "Number"
                },
                {
                    "name": "raim",
                    "description": "Requested raw value of controller pin",
                    "type": "Number"
                },
                {
                    "name": "aim",
                    "description": "Requested value between 0 and 1",
                    "type": "Number"
                },
                {
                    "name": "time",
                    "description": "Time in milliseconds the change should take",
                    "type": "Number"
                }
            ],
            "class": "control.lib.pin.light",
            "module": "control",
            "submodule": "control.pin"
        },
        {
            "file": "../control/lib/pin/light.js",
            "line": 166,
            "description": "Dim light from `state.last.raw` to `stat.raw`.",
            "params": [
                {
                    "name": "state",
                    "description": "Contain change info. Do not change this object",
                    "type": "Object"
                }
            ],
            "class": "control.lib.pin.light",
            "module": "control",
            "submodule": "control.pin"
        },
        {
            "file": "../control/lib/pin/light.js",
            "line": 217,
            "description": "Transform value comming from a light.",
            "class": "control.lib.pin.light",
            "module": "control",
            "submodule": "control.pin"
        },
        {
            "file": "../control/lib/pin/light.js",
            "line": 235,
            "description": "Transform value before sending to a light.",
            "class": "control.lib.pin.light",
            "module": "control",
            "submodule": "control.pin"
        },
        {
            "file": "../control/lib/pin/list.js",
            "line": 22,
            "description": "Controller entry",
            "itemtype": "property",
            "name": "master",
            "type": "Object",
            "class": "control.lib.pin.list",
            "module": "control",
            "submodule": "control.pin"
        },
        {
            "file": "../control/lib/pin/list.js",
            "line": 29,
            "description": "List of connected sockets to individual pins",
            "itemtype": "property",
            "name": "pins",
            "type": "Object",
            "class": "control.lib.pin.list",
            "module": "control",
            "submodule": "control.pin"
        },
        {
            "file": "../control/lib/pin/list.js",
            "line": 36,
            "description": "List of pin types",
            "itemtype": "property",
            "name": "types",
            "type": "Object",
            "class": "control.lib.pin.list",
            "module": "control",
            "submodule": "control.pin"
        },
        {
            "file": "../control/lib/pin/list.js",
            "line": 43,
            "description": "List of available pins with their capabilities",
            "itemtype": "property",
            "name": "pinCaps",
            "type": "Object",
            "class": "control.lib.pin.list",
            "module": "control",
            "submodule": "control.pin"
        },
        {
            "file": "../control/lib/pin/list.js",
            "line": 52,
            "description": "Constructor",
            "params": [
                {
                    "name": "master",
                    "description": "Controller entry",
                    "type": "Object"
                },
                {
                    "name": "types",
                    "description": "List of pin types",
                    "type": "Object"
                },
                {
                    "name": "pins",
                    "description": "List of pins",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "init",
            "class": "control.lib.pin.list",
            "module": "control",
            "submodule": "control.pin"
        },
        {
            "file": "../control/lib/pin/list.js",
            "line": 91,
            "description": "Register a pin.",
            "params": [
                {
                    "name": "req",
                    "description": "TODO request",
                    "type": "Object",
                    "props": [
                        {
                            "name": "index",
                            "description": "Index of pin to be registered",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "Pin type",
                            "type": "String"
                        },
                        {
                            "name": "flavour",
                            "description": "Pin flavour",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "socket",
                    "description": "TODO socket",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Pin instance",
                "type": "Object"
            },
            "itemtype": "method",
            "name": "register",
            "class": "control.lib.pin.list",
            "module": "control",
            "submodule": "control.pin"
        },
        {
            "file": "../control/lib/pin/list.js",
            "line": 180,
            "description": "Removes pin",
            "params": [
                {
                    "name": "Pin",
                    "description": "to be removed",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "remove",
            "class": "control.lib.pin.list",
            "module": "control",
            "submodule": "control.pin"
        },
        {
            "file": "../control/lib/pin/list.js",
            "line": 215,
            "description": "Called from master entry (device), when a pin value change is\ndetected",
            "params": [
                {
                    "name": "index",
                    "description": "Index of pin to be updated",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "Value of physical pin",
                    "type": "Number"
                }
            ],
            "itemtype": "method",
            "name": "update",
            "class": "control.lib.pin.list",
            "module": "control",
            "submodule": "control.pin"
        },
        {
            "file": "../control/lib/pin/list.js",
            "line": 248,
            "description": "Read raw values of all registered pins",
            "itemtype": "method",
            "name": "readAll",
            "class": "control.lib.pin.list",
            "module": "control",
            "submodule": "control.pin"
        },
        {
            "file": "../control/lib/room/index.js",
            "line": 55,
            "description": "Activity\n\nCurrently selected room activity",
            "itemtype": "property",
            "name": "state.activity",
            "type": "Object",
            "class": "control.lib.room",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/room/index.js",
            "line": 64,
            "description": "Activity name\n\nCurrently selected room activity name",
            "itemtype": "property",
            "name": "state.activity.name",
            "type": "String",
            "class": "control.lib.room",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/room/index.js",
            "line": 73,
            "description": "Configurations of activities for current room. Keys are names, and\nvalues are optional configuration objects.",
            "itemtype": "property",
            "name": "data.activities",
            "type": "Object",
            "class": "control.lib.room",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/room/index.js",
            "line": 81,
            "description": "Initialization methods for activities. Keys are names, and values\nare functions.",
            "itemtype": "property",
            "name": "activities",
            "type": "{Object}",
            "class": "control.lib.room",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/room/index.js",
            "line": 102,
            "description": "[Command handler] changes room activity.",
            "params": [
                {
                    "name": "req",
                    "description": "Request object or activity name",
                    "type": "String | Object",
                    "props": [
                        {
                            "name": "name",
                            "description": "Activity name",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "socket",
                    "description": "Optional response socket",
                    "type": "Object",
                    "optional": true
                }
            ],
            "class": "control.lib.room",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/switch/index.js",
            "line": 42,
            "description": "Controller entry identification object.\n\nThe switch entry establishes a new link to this controller.",
            "itemtype": "property",
            "name": "data.master",
            "type": "String | Object",
            "class": "control.lib.switch",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/switch/index.js",
            "line": 51,
            "description": "Master pin index\n\nIndex of digital input pin on the master controller",
            "itemtype": "property",
            "name": "data.pin",
            "type": "String",
            "class": "control.lib.switch",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/switch/index.js",
            "line": 60,
            "description": "Debounce timeout\n\nDefines debounce timeout of the digital input in milliseconds.\n\nDefault value is `M.consts.switchDebounce`.",
            "itemtype": "property",
            "name": "data.debounce",
            "type": "Number",
            "class": "control.lib.switch",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/switch/index.js",
            "line": 71,
            "description": "Hold timeout\n\nDefines hold timeout of the switch in milliseconds.\n\nDefault value is `M.consts.switchHold`.",
            "itemtype": "property",
            "name": "data.hold",
            "type": "Number",
            "class": "control.lib.switch",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/switch/index.js",
            "line": 82,
            "description": "Tap timeout\n\nDefines tap timeout of the switch in milliseconds.\n\nDefault value is `M.consts.switchTap`.",
            "itemtype": "property",
            "name": "data.tap",
            "type": "Number",
            "class": "control.lib.switch",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/switch/index.js",
            "line": 93,
            "description": "Current switch state value",
            "itemtype": "property",
            "name": "state.value",
            "type": "Number (0, 1)",
            "class": "control.lib.switch",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/switch/index.js",
            "line": 100,
            "description": "Timestamp of the last switch change.",
            "itemtype": "property",
            "name": "state.at",
            "type": "Number",
            "class": "control.lib.switch",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/switch/index.js",
            "line": 107,
            "description": "Debounce timeout\n\nDefines the debounce timeout of the digital input in\nmiliseconds. The value is taken from `data.debounce`.",
            "itemtype": "property",
            "name": "state.debounce",
            "type": "Number",
            "class": "control.lib.switch",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/switch/index.js",
            "line": 117,
            "description": "Hold timeout\n\nDefines the hold timeout of the switch in milliseconds. The value is\ntaken from `data.hold`.",
            "itemtype": "property",
            "name": "state.hold",
            "type": "Number",
            "class": "control.lib.switch",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/switch/index.js",
            "line": 127,
            "description": "Tap timeout\n\nDefines the tap timeout of the switch in milliseconds. The value is\ntaken from `data.tap`.",
            "itemtype": "property",
            "name": "state.tap",
            "type": "Number",
            "class": "control.lib.switch",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/switch/index.js",
            "line": 137,
            "description": "Press event\n\nFired when a switch press is detected.",
            "itemtype": "event",
            "name": "press",
            "class": "control.lib.switch",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/switch/index.js",
            "line": 145,
            "description": "Release event\n\nFired when a switch release is detected.",
            "itemtype": "event",
            "name": "release",
            "class": "control.lib.switch",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/switch/index.js",
            "line": 153,
            "description": "Tap event\n\nFired when a switch tap is detected.",
            "params": [
                {
                    "name": "count",
                    "description": "Tap count within tap timeout."
                }
            ],
            "itemtype": "event",
            "name": "tap",
            "class": "control.lib.switch",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/switch/index.js",
            "line": 163,
            "description": "Hold event\n\nFired when a switch hold is detected.",
            "itemtype": "event",
            "name": "hold",
            "class": "control.lib.switch",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/switch/pin.js",
            "line": 24,
            "description": "Socket constructor",
            "params": [
                {
                    "name": "entry",
                    "description": "Switch entry",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "constructor",
            "class": "control.lib.switch.socket",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/switch/pin.js",
            "line": 48,
            "description": "Broken link handler",
            "params": [
                {
                    "name": "err",
                    "description": "[Error] instance",
                    "type": "Object"
                },
                {
                    "name": "resp",
                    "description": "Response",
                    "type": "*"
                }
            ],
            "itemtype": "method",
            "name": "end",
            "class": "control.lib.switch.socket",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/switch/pin.js",
            "line": 69,
            "description": "Sync handler",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "itemtype": "method",
            "name": "sync",
            "class": "control.lib.switch.socket",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/switch/pin.js",
            "line": 81,
            "description": "Press handler",
            "itemtype": "method",
            "name": "press",
            "class": "control.lib.switch.socket",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/switch/pin.js",
            "line": 97,
            "description": "Release handler",
            "itemtype": "method",
            "name": "release",
            "class": "control.lib.switch.socket",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/switch/pin.js",
            "line": 113,
            "description": "Tap handler",
            "params": [
                {
                    "name": "count",
                    "description": "Tap counts within `state.tap` timeout",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "tap",
            "class": "control.lib.switch.socket",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/switch/pin.js",
            "line": 127,
            "description": "Hold handler",
            "itemtype": "method",
            "name": "hold",
            "class": "control.lib.switch.socket",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/switch/relay.js",
            "line": 22,
            "description": "Socket constructor",
            "params": [
                {
                    "name": "entry",
                    "description": "Switch entry",
                    "type": "Object"
                },
                {
                    "name": "socket",
                    "description": "Client socket",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "constructor",
            "class": "control.lib.switch.relay",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/switch/relay.js",
            "line": 42,
            "description": "Close handler",
            "params": [
                {
                    "name": "req",
                    "description": "",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "close",
            "class": "control.lib.switch.relay",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/switch/relay.js",
            "line": 57,
            "description": "Error handler",
            "params": [
                {
                    "name": "err",
                    "description": "[Error] instance",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "error",
            "class": "control.lib.switch.relay",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/activity.js",
            "line": 24,
            "description": "Class constructor",
            "params": [
                {
                    "name": "name",
                    "description": "Activity name",
                    "type": "String"
                },
                {
                    "name": "entry",
                    "description": "Room entry",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "constructor",
            "class": "control.lib.activity",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/activity.js",
            "line": 42,
            "description": "Creates a new scheduled job",
            "params": [
                {
                    "name": "name",
                    "description": "Name of job",
                    "type": "String"
                },
                {
                    "name": "rule",
                    "description": "Schedule information",
                    "type": "Object"
                },
                {
                    "name": "cb",
                    "description": "Callback",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "job",
            "class": "control.lib.activity",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/activity.js",
            "line": 61,
            "description": "Creates a new daily job",
            "params": [
                {
                    "name": "name",
                    "description": "Name of job",
                    "type": "String"
                },
                {
                    "name": "hour",
                    "description": "Hour",
                    "type": "Number"
                },
                {
                    "name": "minute",
                    "description": "Minute",
                    "type": "Number"
                },
                {
                    "name": "cb",
                    "description": "Callback",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "daily",
            "class": "control.lib.activity",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/activity.js",
            "line": 99,
            "description": "Called when an activity is selected",
            "params": [
                {
                    "name": "req",
                    "description": "Request data",
                    "type": "*"
                },
                {
                    "name": "socket",
                    "description": "Client socket",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "start",
            "class": "control.lib.activity",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/activity.js",
            "line": 112,
            "description": "Called when another activity is selected",
            "itemtype": "method",
            "name": "stop",
            "class": "control.lib.activity",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/activity.js",
            "line": 127,
            "description": "Called when an activity is selected or updated",
            "params": [
                {
                    "name": "req",
                    "description": "Request data",
                    "type": "*"
                },
                {
                    "name": "socket",
                    "description": "Client socket",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "update",
            "class": "control.lib.activity",
            "module": "control",
            "submodule": "control.room"
        },
        {
            "file": "../control/lib/remote.js",
            "line": 37,
            "description": "Sets up default command group",
            "params": [
                {
                    "name": "entry",
                    "description": "Remote controller receiver entry",
                    "type": "Object"
                },
                {
                    "name": "key",
                    "description": "Remote command name",
                    "type": "String"
                },
                {
                    "name": "group",
                    "description": "Group of remote commands",
                    "type": "Number"
                }
            ],
            "itemtype": "method",
            "name": "defaults",
            "class": "control.lib.remote",
            "module": "control",
            "submodule": "control.remote"
        },
        {
            "file": "../control/lib/remote.js",
            "line": 54,
            "description": "Adds new command group",
            "params": [
                {
                    "name": "entry",
                    "description": "Remote controller receiver entry",
                    "type": "Object"
                },
                {
                    "name": "key",
                    "description": "Remote command name",
                    "type": "String"
                },
                {
                    "name": "group",
                    "description": "Group of remote commands",
                    "type": "Number"
                }
            ],
            "itemtype": "method",
            "name": "addGroup",
            "class": "control.lib.remote",
            "module": "control",
            "submodule": "control.remote"
        },
        {
            "file": "../control/lib/remote.js",
            "line": 94,
            "description": "Adds an action to the group assigned to the remote command",
            "params": [
                {
                    "name": "group",
                    "description": "Group of remote commands",
                    "type": "Object"
                },
                {
                    "name": "key",
                    "description": "Remote command name",
                    "type": "Number"
                },
                {
                    "name": "data",
                    "description": "Action to be taken",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "add",
            "class": "control.lib.remote",
            "module": "control",
            "submodule": "control.remote"
        },
        {
            "file": "../control/lib/remote.js",
            "line": 116,
            "description": "Assigns key to group",
            "params": [
                {
                    "name": "entry",
                    "description": "Remote controller receiver entry",
                    "type": "Object"
                },
                {
                    "name": "master",
                    "description": "Master group",
                    "type": "Object"
                },
                {
                    "name": "key",
                    "description": "Remote command name",
                    "type": "String"
                },
                {
                    "name": "group",
                    "description": "Group of remote commands",
                    "type": "Number"
                }
            ],
            "itemtype": "method",
            "name": "groupKey",
            "class": "control.lib.remote",
            "module": "control",
            "submodule": "control.remote"
        },
        {
            "file": "../control/lib/remote.js",
            "line": 148,
            "description": "Activates group",
            "params": [
                {
                    "name": "entry",
                    "description": "Remote controller receiver entry",
                    "type": "Object"
                },
                {
                    "name": "group",
                    "description": "Group of remote commands",
                    "type": "Number"
                }
            ],
            "itemtype": "method",
            "name": "selectGroup",
            "class": "control.lib.remote",
            "module": "control",
            "submodule": "control.remote"
        },
        {
            "file": "../control/lib/remote.js",
            "line": 175,
            "description": "Called by remote controller receiver entry when a key is pressed",
            "params": [
                {
                    "name": "entry",
                    "description": "Remote controller receiver entry",
                    "type": "Object"
                },
                {
                    "name": "data",
                    "description": "Data object",
                    "type": "Object",
                    "props": [
                        {
                            "name": "key",
                            "description": "Key name",
                            "type": "String"
                        },
                        {
                            "name": "count",
                            "description": "Number of repeats",
                            "type": "Number"
                        }
                    ]
                }
            ],
            "itemtype": "method",
            "name": "receive",
            "class": "control.lib.remote",
            "module": "control",
            "submodule": "control.remote"
        },
        {
            "file": "../control/lib/remote.js",
            "line": 207,
            "description": "Next channel handler",
            "params": [
                {
                    "name": "entry",
                    "description": "Remote controller receiver entry",
                    "type": "Object"
                },
                {
                    "name": "data",
                    "description": "Data object",
                    "type": "Object",
                    "props": [
                        {
                            "name": "key",
                            "description": "Key name",
                            "type": "String"
                        },
                        {
                            "name": "count",
                            "description": "Number of repeats",
                            "type": "Number"
                        },
                        {
                            "name": "number",
                            "description": "Resulting decimal number",
                            "type": "Number"
                        }
                    ]
                }
            ],
            "itemtype": "method",
            "name": "next",
            "class": "control.lib.remote",
            "module": "control",
            "submodule": "control.remote"
        },
        {
            "file": "../control/lib/remote.js",
            "line": 225,
            "description": "Previous channel handler",
            "params": [
                {
                    "name": "entry",
                    "description": "Remote controller receiver entry",
                    "type": "Object"
                },
                {
                    "name": "data",
                    "description": "Data object",
                    "type": "Object",
                    "props": [
                        {
                            "name": "key",
                            "description": "Key name",
                            "type": "String"
                        },
                        {
                            "name": "count",
                            "description": "Number of repeats",
                            "type": "Number"
                        },
                        {
                            "name": "number",
                            "description": "Resulting decimal number",
                            "type": "Number"
                        }
                    ]
                }
            ],
            "itemtype": "method",
            "name": "prev",
            "class": "control.lib.remote",
            "module": "control",
            "submodule": "control.remote"
        },
        {
            "file": "../control/lib/remote.js",
            "line": 255,
            "description": "Reset current group after timeout to last group without timeout.",
            "class": "control.lib.remote",
            "module": "control",
            "submodule": "control.remote"
        },
        {
            "file": "../icecast/lib/radio/index.js",
            "line": 30,
            "description": "Send media item to to playback",
            "params": [
                {
                    "name": "player",
                    "description": "Media player entry",
                    "type": "Object"
                },
                {
                    "name": "item",
                    "description": "Media item entry",
                    "type": "Object"
                }
            ],
            "class": "icecast.lib.stream",
            "module": "icecast"
        },
        {
            "file": "../media/lib/player/commands.js",
            "line": 23,
            "description": "[Command handler]\n\nToggle mute",
            "params": [
                {
                    "name": "req",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "itemtype": "method",
            "name": "mute",
            "class": "media.lib.player.commands",
            "module": "media",
            "submodule": "media.player"
        },
        {
            "file": "../media/lib/player/commands.js",
            "line": 41,
            "description": "[Command handler]\n\nChange volume",
            "params": [
                {
                    "name": "req",
                    "description": "(0 .. 1)",
                    "type": "Number"
                }
            ],
            "itemtype": "method",
            "name": "volume",
            "class": "media.lib.player.commands",
            "module": "media",
            "submodule": "media.player"
        },
        {
            "file": "../media/lib/player/commands.js",
            "line": 76,
            "description": "[Command handler]\n\nPlay DVB media item.",
            "params": [
                {
                    "name": "req",
                    "description": "DVB data",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "playDvb",
            "class": "media.lib.player.commands",
            "module": "media",
            "submodule": "media.player"
        },
        {
            "file": "../media/lib/player/commands.js",
            "line": 109,
            "description": "[Command handler]\n\nPlay media item.",
            "params": [
                {
                    "name": "req",
                    "description": "Media item [entry identification].",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "playItem",
            "class": "media.lib.player.commands",
            "module": "media",
            "submodule": "media.player"
        },
        {
            "file": "../media/lib/player/commands.js",
            "line": 183,
            "description": "[Command handler]\n\nStop playback",
            "itemtype": "method",
            "name": "stop",
            "class": "media.lib.player.commands",
            "module": "media",
            "submodule": "media.player"
        },
        {
            "file": "../media/lib/player/commands.js",
            "line": 203,
            "description": "[Command handler]\n\nPause playback",
            "itemtype": "method",
            "name": "pause",
            "class": "media.lib.player.commands",
            "module": "media",
            "submodule": "media.player"
        },
        {
            "file": "../media/lib/player/commands.js",
            "line": 219,
            "description": "[Command handler]\n\nPlay or pause current media",
            "params": [
                {
                    "name": "req",
                    "description": "Media item [entry identification].",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "playPause",
            "class": "media.lib.player.commands",
            "module": "media",
            "submodule": "media.player"
        },
        {
            "file": "../media/lib/player/commands.js",
            "line": 241,
            "description": "[Command handler]\n\nPlay",
            "itemtype": "method",
            "name": "play",
            "class": "media.lib.player.commands",
            "module": "media",
            "submodule": "media.player"
        },
        {
            "file": "../media/lib/player/commands.js",
            "line": 259,
            "description": "[Command handler]\n\nToggle fullscreen",
            "params": [
                {
                    "name": "req",
                    "description": "Fullscreen? TODO",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "fullscreen",
            "class": "media.lib.player.commands",
            "module": "media",
            "submodule": "media.player"
        },
        {
            "file": "../media/lib/player/commands.js",
            "line": 277,
            "description": "[Command handler]\n\nPlay last media item",
            "params": [
                {
                    "name": "req",
                    "description": "Request object",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "playLast",
            "class": "media.lib.player.commands",
            "module": "media",
            "submodule": "media.player"
        },
        {
            "file": "../media/lib/player/commands.js",
            "line": 295,
            "description": "[Command handler]\n\nSkip to next media",
            "params": [
                {
                    "name": "req",
                    "description": "Request object TODO",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "next",
            "class": "media.lib.player.commands",
            "module": "media",
            "submodule": "media.player"
        },
        {
            "file": "../media/lib/player/commands.js",
            "line": 313,
            "description": "[Command handler]\n\nSkip to previous media",
            "params": [
                {
                    "name": "req",
                    "description": "Request object TODO",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "previous",
            "class": "media.lib.player.commands",
            "module": "media",
            "submodule": "media.player"
        },
        {
            "file": "../media/lib/player/commands.js",
            "line": 331,
            "description": "[Command handler]\n\nToggle shuffle",
            "params": [
                {
                    "name": "req",
                    "description": "Shuffle?",
                    "type": "Boolean"
                }
            ],
            "itemtype": "method",
            "name": "shuffle",
            "class": "media.lib.player.commands",
            "module": "media",
            "submodule": "media.player"
        },
        {
            "file": "../media/lib/player/commands.js",
            "line": 351,
            "description": "[Command handler]\n\nChange current pos",
            "params": [
                {
                    "name": "req",
                    "description": "Position delta in microseconds",
                    "type": "Number"
                }
            ],
            "itemtype": "method",
            "name": "setPos",
            "class": "media.lib.player.commands",
            "module": "media",
            "submodule": "media.player"
        },
        {
            "file": "../media/lib/player/commands.js",
            "line": 378,
            "description": "[Command handler]\n\nSeek media",
            "params": [
                {
                    "name": "req",
                    "description": "Position in microseconds",
                    "type": "Number"
                }
            ],
            "itemtype": "method",
            "name": "seek",
            "class": "media.lib.player.commands",
            "module": "media",
            "submodule": "media.player"
        },
        {
            "file": "../media/lib/player/dvb.js",
            "line": 22,
            "description": "Socket constructor",
            "itemtype": "method",
            "name": "init",
            "is_constructor": 1,
            "class": "media.lib.player.dvb",
            "module": "media",
            "submodule": "media.player"
        },
        {
            "file": "../media/lib/player/dvb.js",
            "line": 43,
            "description": "Open handler",
            "params": [
                {
                    "name": "value",
                    "description": "Socket is linked to entry home.",
                    "type": "Boolean"
                }
            ],
            "itemtype": "method",
            "name": "open",
            "class": "media.lib.player.dvb",
            "module": "media",
            "submodule": "media.player"
        },
        {
            "file": "../media/lib/player/dvb.js",
            "line": 63,
            "description": "Close handler",
            "params": [
                {
                    "name": "req",
                    "description": "",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "end",
            "class": "media.lib.player.dvb",
            "module": "media",
            "submodule": "media.player"
        },
        {
            "file": "../media/lib/player/playback.js",
            "line": 22,
            "description": "Socket constructor",
            "itemtype": "method",
            "name": "init",
            "is_constructor": 1,
            "class": "media.lib.player.playback",
            "module": "media",
            "submodule": "media.player"
        },
        {
            "file": "../media/lib/player/playback.js",
            "line": 42,
            "description": "Open handler",
            "params": [
                {
                    "name": "req",
                    "description": "",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "open",
            "class": "media.lib.player.playback",
            "module": "media",
            "submodule": "media.player"
        },
        {
            "file": "../media/lib/player/playback.js",
            "line": 60,
            "description": "Close handler",
            "params": [
                {
                    "name": "req",
                    "description": "",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "close",
            "class": "media.lib.player.playback",
            "module": "media",
            "submodule": "media.player"
        },
        {
            "file": "../media/lib/player/playback.js",
            "line": 80,
            "description": "Error handler",
            "params": [
                {
                    "name": "err",
                    "description": "[Error] instance",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "error",
            "class": "media.lib.player.playback",
            "module": "media",
            "submodule": "media.player"
        },
        {
            "file": "../media/lib/player/playback.js",
            "line": 93,
            "description": "Synced handler",
            "params": [
                {
                    "name": "value",
                    "description": "Synced or not",
                    "type": "Boolean"
                }
            ],
            "itemtype": "method",
            "name": "synced",
            "class": "media.lib.player.playback",
            "module": "media",
            "submodule": "media.player"
        },
        {
            "file": "../media/lib/player/playback.js",
            "line": 107,
            "description": "Update handler",
            "params": [
                {
                    "name": "req",
                    "description": "Update request",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "update",
            "class": "media.lib.player.playback",
            "module": "media",
            "submodule": "media.player"
        },
        {
            "file": "../media/lib/player/volume.js",
            "line": 22,
            "description": "Socket constructor",
            "itemtype": "method",
            "name": "init",
            "is_constructor": 1,
            "class": "media.lib.player.volume",
            "module": "media",
            "submodule": "media.player"
        },
        {
            "file": "../media/lib/player/volume.js",
            "line": 42,
            "description": "Open handler",
            "params": [
                {
                    "name": "req",
                    "description": "",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "open",
            "class": "media.lib.player.volume",
            "module": "media",
            "submodule": "media.player"
        },
        {
            "file": "../media/lib/player/volume.js",
            "line": 58,
            "description": "Close handler",
            "params": [
                {
                    "name": "req",
                    "description": "",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "close",
            "class": "media.lib.player.volume",
            "module": "media",
            "submodule": "media.player"
        },
        {
            "file": "../media/lib/player/volume.js",
            "line": 77,
            "description": "Error handler",
            "params": [
                {
                    "name": "err",
                    "description": "[Error] instance",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "error",
            "class": "media.lib.player.volume",
            "module": "media",
            "submodule": "media.player"
        },
        {
            "file": "../media/lib/player/volume.js",
            "line": 90,
            "description": "Update handler",
            "params": [
                {
                    "name": "req",
                    "description": "Update request",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "update",
            "class": "media.lib.player.volume",
            "module": "media",
            "submodule": "media.player"
        },
        {
            "file": "../media/lib/stream/index.js",
            "line": 53,
            "description": "Returns an object containing information about media entry to\ndisplay in the player detail view.",
            "params": [
                {
                    "name": "entry",
                    "description": "Entry to display",
                    "type": "Object"
                }
            ],
            "result": "{Object} Media info keys.",
            "itemtype": "method",
            "name": "getMediaKeys",
            "class": "media.lib.stream",
            "module": "media",
            "submodule": "media.stream"
        },
        {
            "file": "../media/lib/stream/index.js",
            "line": 70,
            "description": "Send media item to to playback",
            "params": [
                {
                    "name": "player",
                    "description": "Media player entry",
                    "type": "Object"
                },
                {
                    "name": "item",
                    "description": "Media item entry",
                    "type": "Object"
                }
            ],
            "class": "media.lib.stream",
            "module": "media",
            "submodule": "media.stream"
        },
        {
            "file": "../media/lib/remote.js",
            "line": 61,
            "description": "Sets up a media source as a single remote controller group",
            "params": [
                {
                    "name": "group",
                    "description": "Group to be used",
                    "type": "Object"
                },
                {
                    "name": "space",
                    "description": "Space containing media shard",
                    "type": "String"
                },
                {
                    "name": "shard",
                    "description": "Media shard",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "List of media items",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "add",
            "class": "media.lib.sources",
            "module": "media"
        },
        {
            "file": "../media/lib/sources.js",
            "line": 41,
            "description": "Adds new media source",
            "params": [
                {
                    "name": "name",
                    "description": "Media source name",
                    "type": "String"
                },
                {
                    "name": "scope",
                    "description": "Media source scope",
                    "type": "String"
                },
                {
                    "name": "kind",
                    "description": "Media source kind",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Media source reference",
                "type": "Object"
            },
            "itemtype": "method",
            "name": "add",
            "class": "media.lib.sources",
            "module": "media",
            "submodule": "media.source"
        },
        {
            "file": "../media/lib/sources.js",
            "line": 61,
            "description": "Returns media source by name",
            "params": [
                {
                    "name": "name",
                    "description": "Media source name",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Media source reference",
                "type": "Object"
            },
            "itemtype": "method",
            "name": "get",
            "class": "media.lib.sources",
            "module": "media",
            "submodule": "media.source"
        },
        {
            "file": "../media/lib/sources.js",
            "line": 75,
            "description": "Iterates all media sources",
            "params": [
                {
                    "name": "cb",
                    "description": "Callback",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "each",
            "class": "media.lib.sources",
            "module": "media",
            "submodule": "media.source"
        },
        {
            "file": "../pa/lib/dbus/node.js",
            "line": 130,
            "description": "[Command handler] set volume to specified level.",
            "params": [
                {
                    "name": "value",
                    "description": "Number between 0..1 | \"down\" | \"up\"",
                    "type": "Number | String"
                }
            ],
            "itemtype": "method",
            "name": "volume",
            "class": "pa.lib",
            "module": "pa"
        },
        {
            "file": "../videolan/lib/dvblast/master.js",
            "line": 27,
            "description": "Socket constructor",
            "itemtype": "method",
            "name": "init",
            "is_constructor": 1,
            "class": "videolan.lib.dvblast.master",
            "module": "videolan"
        },
        {
            "file": "../videolan/lib/dvblast/master.js",
            "line": 42,
            "description": "Close handler",
            "params": [
                {
                    "name": "req",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "itemtype": "method",
            "name": "close",
            "class": "videolan.lib.dvblast.master",
            "module": "videolan"
        },
        {
            "file": "../videolan/lib/dvblast/master.js",
            "line": 57,
            "description": "Error handler",
            "params": [
                {
                    "name": "err",
                    "description": "[Error] instance",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "error",
            "class": "videolan.lib.dvblast.master",
            "module": "videolan"
        },
        {
            "file": "../videolan/lib/dvblast/master.js",
            "line": 69,
            "description": "`stream` [command handler]",
            "params": [
                {
                    "name": "req",
                    "description": "Stream to be connected to",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "stream",
            "class": "videolan.lib.dvblast.master",
            "module": "videolan"
        },
        {
            "file": "../videolan/lib/dvblast/master.js",
            "line": 81,
            "description": "`stream` [command handler]",
            "params": [
                {
                    "name": "req",
                    "description": "Stream to be connected to",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "stream",
            "class": "videolan.lib.dvblast.master",
            "module": "videolan"
        },
        {
            "file": "../videolan/lib/dvblast/node.js",
            "line": 28,
            "description": "Registers media player",
            "params": [
                {
                    "name": "req",
                    "description": "Request data",
                    "type": "Object"
                },
                {
                    "name": "socket",
                    "description": "Slave socket",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "register",
            "class": "videolan.lib.dvblast",
            "module": "videolan"
        },
        {
            "file": "../videolan/lib/vlc/home.js",
            "line": 72,
            "description": "[Command handler]\n\nPlay media from URI.",
            "params": [
                {
                    "name": "req",
                    "description": "Media URI",
                    "type": "String"
                }
            ],
            "itemtype": "method",
            "name": "playUri",
            "class": "videolan.lib.vlc",
            "module": "videolan"
        },
        {
            "file": "../videolan/lib/vlc/home.js",
            "line": 88,
            "description": "[Command handler]\n\nPlay",
            "itemtype": "method",
            "name": "play",
            "class": "videolan.lib.vlc",
            "module": "videolan"
        },
        {
            "file": "../videolan/lib/vlc/home.js",
            "line": 100,
            "description": "[Command handler]\n\nPause playback",
            "itemtype": "method",
            "name": "pause",
            "class": "videolan.lib.vlc",
            "module": "videolan"
        },
        {
            "file": "../videolan/lib/vlc/home.js",
            "line": 112,
            "description": "[Command handler]\n\nStop playback",
            "itemtype": "method",
            "name": "stop",
            "class": "videolan.lib.vlc",
            "module": "videolan"
        },
        {
            "file": "../videolan/lib/vlc/home.js",
            "line": 126,
            "description": "[Command handler]\n\nTurns the player off.",
            "params": [
                {
                    "name": "req",
                    "description": "None"
                }
            ],
            "itemtype": "method",
            "name": "turnOff",
            "class": "videolan.lib.vlc",
            "module": "videolan"
        },
        {
            "file": "../videolan/lib/vlc/home.js",
            "line": 140,
            "description": "[Command handler]\n\nSwitch fullscreen",
            "params": [
                {
                    "name": "req",
                    "description": "Fullscreen? TODO",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "fullscreen",
            "class": "videolan.lib.vlc",
            "module": "videolan"
        },
        {
            "file": "../videolan/lib/vlc/home.js",
            "line": 154,
            "description": "[Command handler]\n\nRaise window",
            "itemtype": "method",
            "name": "fullscreen",
            "class": "videolan.lib.vlc",
            "module": "videolan"
        },
        {
            "file": "../videolan/lib/vlc/home.js",
            "line": 166,
            "description": "[Command handler]\n\nSwitch shuffle",
            "params": [
                {
                    "name": "req",
                    "description": "Shuffle?",
                    "type": "Boolean"
                }
            ],
            "itemtype": "method",
            "name": "shuffle",
            "class": "videolan.lib.vlc",
            "module": "videolan"
        },
        {
            "file": "../videolan/lib/vlc/home.js",
            "line": 184,
            "description": "[Command handler]\n\nSeek media",
            "params": [
                {
                    "name": "req",
                    "description": "Position in microseconds",
                    "type": "Number"
                }
            ],
            "itemtype": "method",
            "name": "seek",
            "class": "videolan.lib.vlc",
            "module": "videolan"
        },
        {
            "file": "../videolan/lib/vlc/home.js",
            "line": 199,
            "description": "[Command handler]\n\nSkip to next media",
            "params": [
                {
                    "name": "req",
                    "description": "Request object TODO",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "next",
            "class": "videolan.lib.vlc",
            "module": "videolan"
        },
        {
            "file": "../videolan/lib/vlc/home.js",
            "line": 214,
            "description": "[Command handler]\n\nSkip to previous media",
            "params": [
                {
                    "name": "req",
                    "description": "Request object TODO",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "previous",
            "class": "videolan.lib.vlc",
            "module": "videolan"
        },
        {
            "file": "../videolan/lib/vlc/node.js",
            "line": 51,
            "description": "[Command handler]\n\nPlay media from URI.",
            "params": [
                {
                    "name": "req",
                    "description": "Media URI",
                    "type": "String"
                }
            ],
            "itemtype": "method",
            "name": "playUri",
            "class": "videolan.lib.dvblast",
            "module": "videolan"
        },
        {
            "file": "../videolan/lib/vlc/node.js",
            "line": 67,
            "description": "[Command handler]\n\nPlay",
            "itemtype": "method",
            "name": "play",
            "class": "videolan.lib.dvblast",
            "module": "videolan"
        },
        {
            "file": "../videolan/lib/vlc/node.js",
            "line": 79,
            "description": "[Command handler]\n\nPause playback",
            "itemtype": "method",
            "name": "pause",
            "class": "videolan.lib.dvblast",
            "module": "videolan"
        },
        {
            "file": "../videolan/lib/vlc/node.js",
            "line": 91,
            "description": "[Command handler]\n\nStop playback",
            "itemtype": "method",
            "name": "stop",
            "class": "videolan.lib.dvblast",
            "module": "videolan"
        },
        {
            "file": "../videolan/lib/vlc/node.js",
            "line": 105,
            "description": "[Command handler]\n\nTurns the player off.",
            "params": [
                {
                    "name": "req",
                    "description": "None"
                }
            ],
            "itemtype": "method",
            "name": "turnOff",
            "class": "videolan.lib.dvblast",
            "module": "videolan"
        },
        {
            "file": "../videolan/lib/vlc/node.js",
            "line": 119,
            "description": "[Command handler]\n\nSwitch fullscreen",
            "params": [
                {
                    "name": "req",
                    "description": "Fullscreen? TODO",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "fullscreen",
            "class": "videolan.lib.dvblast",
            "module": "videolan"
        },
        {
            "file": "../videolan/lib/vlc/node.js",
            "line": 133,
            "description": "[Command handler]\n\nRaise window",
            "itemtype": "method",
            "name": "fullscreen",
            "class": "videolan.lib.dvblast",
            "module": "videolan"
        },
        {
            "file": "../videolan/lib/vlc/node.js",
            "line": 145,
            "description": "[Command handler]\n\nSwitch shuffle",
            "params": [
                {
                    "name": "req",
                    "description": "Shuffle?",
                    "type": "Boolean"
                }
            ],
            "itemtype": "method",
            "name": "shuffle",
            "class": "videolan.lib.dvblast",
            "module": "videolan"
        },
        {
            "file": "../videolan/lib/vlc/node.js",
            "line": 163,
            "description": "[Command handler]\n\nSeek media",
            "params": [
                {
                    "name": "req",
                    "description": "Position in microseconds",
                    "type": "Number"
                }
            ],
            "itemtype": "method",
            "name": "seek",
            "class": "videolan.lib.dvblast",
            "module": "videolan"
        },
        {
            "file": "../videolan/lib/vlc/node.js",
            "line": 178,
            "description": "[Command handler]\n\nSkip to next media",
            "params": [
                {
                    "name": "req",
                    "description": "Request object TODO",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "next",
            "class": "videolan.lib.dvblast",
            "module": "videolan"
        },
        {
            "file": "../videolan/lib/vlc/node.js",
            "line": 193,
            "description": "[Command handler]\n\nSkip to previous media",
            "params": [
                {
                    "name": "req",
                    "description": "Request object TODO",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "previous",
            "class": "videolan.lib.dvblast",
            "module": "videolan"
        },
        {
            "file": "../youtube/lib/video/index.js",
            "line": 35,
            "description": "Send media item to to playback",
            "params": [
                {
                    "name": "player",
                    "description": "Media player entry",
                    "type": "Object"
                },
                {
                    "name": "item",
                    "description": "Media item entry",
                    "type": "Object"
                }
            ],
            "class": "youtube.lib.video",
            "module": "youtube"
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: caption",
            "line": " examples/media/config.js:7"
        },
        {
            "message": "unknown tag: readme",
            "line": " examples/media/config.js:7"
        },
        {
            "message": "unknown tag: caption",
            "line": " examples/media/run.js:9"
        },
        {
            "message": "unknown tag: readme",
            "line": " examples/media/run.js:9"
        },
        {
            "message": "unknown tag: caption",
            "line": " examples/media/run.js:123"
        },
        {
            "message": "unknown tag: readme",
            "line": " examples/media/run.js:123"
        },
        {
            "message": "unknown tag: caption",
            "line": " Gruntfile.js:7"
        },
        {
            "message": "unknown tag: readme",
            "line": " Gruntfile.js:7"
        },
        {
            "message": "unknown tag: caption",
            "line": " doc.js:19"
        },
        {
            "message": "unknown tag: readme",
            "line": " doc.js:19"
        },
        {
            "message": "unknown tag: caption",
            "line": " index.js:1"
        },
        {
            "message": "unknown tag: readme",
            "line": " index.js:1"
        },
        {
            "message": "unknown tag: getting_started",
            "line": " index.js:1"
        },
        {
            "message": "unknown tag: getting_started_link",
            "line": " index.js:1"
        },
        {
            "message": "unknown tag: contributions",
            "line": " index.js:1"
        },
        {
            "message": "unknown tag: status",
            "line": " index.js:1"
        },
        {
            "message": "unknown tag: license",
            "line": " index.js:1"
        },
        {
            "message": "unknown tag: documentation",
            "line": " index.js:1"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../ose/lib/entry/command.js:10"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../ose/lib/entry/command.js:10"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../ose/lib/entry/index.js:14"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../ose/lib/entry/index.js:14"
        },
        {
            "message": "unknown tag: aliases",
            "line": " ../ose/lib/entry/index.js:14"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../ose/lib/entry/index.js:538"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../ose/lib/entry/index.js:862"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../ose/lib/entry/master.js:11"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../ose/lib/entry/master.js:11"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../ose/lib/entry/slave.js:11"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../ose/lib/entry/slave.js:11"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../ose/lib/http/content.js:14"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../ose/lib/http/content.js:14"
        },
        {
            "message": "unknown tag: ose",
            "line": " ../ose/lib/http/content.js:14"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../ose/lib/http/index.js:11"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../ose/lib/http/index.js:11"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../ose/lib/http/index.js:29"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../ose/lib/http/index.js:29"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../ose/lib/peer/here.js:10"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../ose/lib/peer/here.js:10"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../ose/lib/peer/index.js:7"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../ose/lib/peer/index.js:7"
        },
        {
            "message": "unknown tag: aliases",
            "line": " ../ose/lib/peer/index.js:7"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../ose/lib/peer/list.js:14"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../ose/lib/peer/list.js:14"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../ose/lib/peer/remote.js:15"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../ose/lib/peer/remote.js:15"
        },
        {
            "message": "unknown tag: aliases",
            "line": " ../ose/lib/peer/remote.js:15"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../ose/lib/peer/rx.js:15"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../ose/lib/peer/rx.js:15"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../ose/lib/shard/index.js:17"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../ose/lib/shard/index.js:17"
        },
        {
            "message": "unknown tag: aliases",
            "line": " ../ose/lib/shard/index.js:17"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../ose/lib/shard/index.js:209"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../ose/lib/shard/index.js:286"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../ose/lib/shard/index.js:300"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../ose/lib/shard/index.js:569"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../ose/lib/shard/index.js:585"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../ose/lib/shard/master.js:11"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../ose/lib/shard/master.js:11"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../ose/lib/shard/slave.js:11"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../ose/lib/shard/slave.js:11"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../ose/lib/space/index.js:9"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../ose/lib/space/index.js:9"
        },
        {
            "message": "unknown tag: planned",
            "line": " ../ose/lib/space/index.js:9"
        },
        {
            "message": "unknown tag: aliases",
            "line": " ../ose/lib/space/index.js:9"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../ose/lib/space/index.js:72"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../ose/lib/space/index.js:72"
        },
        {
            "message": "unknown tag: aliases",
            "line": " ../ose/lib/space/index.js:72"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../ose/lib/space/list.js:12"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../ose/lib/space/list.js:12"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../ose/lib/ws/browser.js:10"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../ose/lib/ws/browser.js:10"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../ose/lib/ws/index.js:10"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../ose/lib/ws/index.js:10"
        },
        {
            "message": "unknown tag: aliases",
            "line": " ../ose/lib/ws/index.js:10"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../ose/lib/ws/master.js:11"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../ose/lib/ws/master.js:11"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../ose/lib/ws/node.js:11"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../ose/lib/ws/node.js:11"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../ose/lib/ws/relay.js:11"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../ose/lib/ws/relay.js:11"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../ose/lib/ws/slave.js:11"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../ose/lib/ws/slave.js:11"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../ose/lib/ws/worker.js:8"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../ose/lib/ws/worker.js:8"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../ose/lib/browser.js:7"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../ose/lib/browser.js:7"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " ../ose/lib/browser.js:47"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../ose/lib/cli.js:12"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../ose/lib/cli.js:12"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../ose/lib/counter.js:10"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../ose/lib/counter.js:10"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../ose/lib/index.js:8"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../ose/lib/index.js:8"
        },
        {
            "message": "unknown tag: features",
            "line": " ../ose/lib/index.js:8"
        },
        {
            "message": "unknown tag: planned",
            "line": " ../ose/lib/index.js:8"
        },
        {
            "message": "unknown tag: keywords",
            "line": " ../ose/lib/index.js:8"
        },
        {
            "message": "unknown tag: aliases",
            "line": " ../ose/lib/index.js:8"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../ose/lib/index.js:62"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../ose/lib/index.js:62"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../ose/lib/index.js:419"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../ose/lib/index.js:439"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../ose/lib/kind.js:11"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../ose/lib/kind.js:11"
        },
        {
            "message": "unknown tag: aliases",
            "line": " ../ose/lib/kind.js:11"
        },
        {
            "message": "unknown tag: virtual",
            "line": " ../ose/lib/kind.js:27"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../ose/lib/kind.js:89"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../ose/lib/kind.js:171"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../ose/lib/link.js:6"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../ose/lib/link.js:6"
        },
        {
            "message": "unknown tag: aliases",
            "line": " ../ose/lib/link.js:6"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../ose/lib/link.js:145"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../ose/lib/link.js:145"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../ose/lib/logger.js:6"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../ose/lib/logger.js:6"
        },
        {
            "message": "unknown tag: aliases",
            "line": " ../ose/lib/logger.js:6"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../ose/lib/logger.js:63"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../ose/lib/logger.js:174"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../ose/lib/node.js:21"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../ose/lib/node.js:21"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../ose/lib/plugins.js:7"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../ose/lib/plugins.js:7"
        },
        {
            "message": "unknown tag: aliases",
            "line": " ../ose/lib/plugins.js:7"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../ose/lib/plugins.js:112"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../ose/lib/plugins.js:112"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../ose/lib/scope.js:11"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../ose/lib/scope.js:11"
        },
        {
            "message": "unknown tag: aliases",
            "line": " ../ose/lib/scope.js:11"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../ose/lib/scope.js:49"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../ose/lib/wrap.js:6"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../ose/lib/wrap.js:6"
        },
        {
            "message": "unknown tag: aliases",
            "line": " ../ose/lib/wrap.js:6"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../ose/lib/wrap.js:348"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../ose/lib/wrap.js:348"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../ose/lib/wrap.js:370"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../ose/lib/wrap.js:370"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../ose/lib/wrap.js:412"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../ose/lib/wrap.js:412"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../ose/lib/wrap.js:431"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../ose/lib/wrap.js:431"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../ose/lib/wrap.js:480"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../ose/lib/wrap.js:480"
        },
        {
            "message": "unknown tag: result",
            "line": " ../ose/lib/wrap.js:526"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../ose/content.js:11"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../ose/content.js:11"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../bb/lib/box/content.js:11"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../bb/lib/box/content.js:11"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../bb/lib/box/index.js:1"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../bb/lib/box/index.js:1"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../bb/lib/box/left.js:11"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../bb/lib/box/left.js:11"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../bb/lib/box/left.js:75"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../bb/lib/dialog/action.js:11"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../bb/lib/dialog/action.js:11"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../bb/lib/dialog/confirm.js:11"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../bb/lib/dialog/confirm.js:11"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../bb/lib/dialog/index.js:1"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../bb/lib/dialog/index.js:1"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../bb/lib/dialog/index.js:14"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../bb/lib/dialog/index.js:14"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../bb/lib/dialog/info.js:11"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../bb/lib/dialog/info.js:11"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../bb/lib/dialog/valueSelector.js:11"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../bb/lib/dialog/valueSelector.js:11"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../bb/lib/pagelet/dashboard.js:10"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../bb/lib/pagelet/dashboard.js:10"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../bb/lib/pagelet/dashboard.js:117"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../bb/lib/pagelet/detail.js:12"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../bb/lib/pagelet/detail.js:12"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../bb/lib/pagelet/entry.js:10"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../bb/lib/pagelet/entry.js:10"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../bb/lib/pagelet/gesture.js:12"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../bb/lib/pagelet/gesture.js:12"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../bb/lib/pagelet/index.js:6"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../bb/lib/pagelet/index.js:6"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../bb/lib/pagelet/index.js:29"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../bb/lib/pagelet/index.js:29"
        },
        {
            "message": "unknown tag: abstract",
            "line": " ../bb/lib/pagelet/index.js:59"
        },
        {
            "message": "unknown tag: abstract",
            "line": " ../bb/lib/pagelet/index.js:69"
        },
        {
            "message": "unknown tag: abstract",
            "line": " ../bb/lib/pagelet/index.js:78"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../bb/lib/pagelet/index.js:88"
        },
        {
            "message": "unknown tag: abstract",
            "line": " ../bb/lib/pagelet/index.js:88"
        },
        {
            "message": "unknown tag: abstract",
            "line": " ../bb/lib/pagelet/index.js:101"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../bb/lib/pagelet/index.js:145"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../bb/lib/pagelet/list.js:10"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../bb/lib/pagelet/list.js:10"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../bb/lib/pagelet/listItem.js:12"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../bb/lib/pagelet/listItem.js:12"
        },
        {
            "message": "replacing incorrect tag: prop with property",
            "line": " ../bb/lib/pagelet/listItem.js:55"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../bb/lib/widget/button.js:10"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../bb/lib/widget/button.js:10"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../bb/lib/widget/checkbox.js:10"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../bb/lib/widget/checkbox.js:10"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../bb/lib/widget/index.js:6"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../bb/lib/widget/index.js:6"
        },
        {
            "message": "unknown tag: aliases",
            "line": " ../bb/lib/widget/index.js:6"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../bb/lib/widget/index.js:20"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../bb/lib/widget/index.js:20"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../bb/lib/widget/index.js:30"
        },
        {
            "message": "unknown tag: abstract",
            "line": " ../bb/lib/widget/index.js:30"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../bb/lib/widget/index.js:47"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../bb/lib/widget/index.js:115"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../bb/lib/widget/index.js:145"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../bb/lib/widget/index.js:184"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../bb/lib/widget/list.js:10"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../bb/lib/widget/list.js:10"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../bb/lib/widget/listItem.js:10"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../bb/lib/widget/listItem.js:10"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../bb/lib/widget/search.js:11"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../bb/lib/widget/search.js:11"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../bb/lib/widget/search.js:43"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../bb/lib/widget/search.js:58"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../bb/lib/widget/search.js:170"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../bb/lib/widget/slider.js:10"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../bb/lib/widget/slider.js:10"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../bb/lib/widget/slideswitch.js:10"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../bb/lib/widget/slideswitch.js:10"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../bb/lib/widget/toolbar.js:10"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../bb/lib/widget/toolbar.js:10"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../bb/lib/browser.js:199"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../bb/lib/browser.js:233"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../bb/lib/browser.js:261"
        },
        {
            "message": "replacing incorrect tag: prop with property",
            "line": " ../bb/lib/browser.js:297"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../bb/lib/browser.js:311"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../bb/lib/browser.js:338"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../bb/lib/index.js:7"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../bb/lib/index.js:7"
        },
        {
            "message": "unknown tag: features",
            "line": " ../bb/lib/index.js:7"
        },
        {
            "message": "unknown tag: aliases",
            "line": " ../bb/lib/index.js:7"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../bb/lib/index.js:55"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../bb/lib/index.js:55"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../bb/lib/stateObj.js:1"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../bb/lib/stateObj.js:1"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../bb/content.js:11"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../bb/content.js:11"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../boards/lib/relay/index.js:9"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../boards/lib/relay/index.js:9"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../boards/lib/relay/socket.js:6"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../boards/lib/index.js:7"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../boards/lib/index.js:7"
        },
        {
            "message": "unknown tag: aliases",
            "line": " ../boards/lib/index.js:7"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../boards/lib/index.js:26"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../boards/lib/index.js:26"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../boards/content.js:12"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../boards/content.js:12"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../control/lib/din/index.js:13"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../control/lib/din/index.js:13"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " ../control/lib/din/index.js:13"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../control/lib/din/pin.js:10"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../control/lib/din/pin.js:10"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../control/lib/distributor/index.js:7"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../control/lib/distributor/index.js:7"
        },
        {
            "message": "unknown tag: aliases",
            "line": " ../control/lib/distributor/index.js:7"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../control/lib/distributor/index.js:22"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../control/lib/distributor/index.js:22"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " ../control/lib/distributor/index.js:22"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../control/lib/door/index.js:13"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../control/lib/door/index.js:13"
        },
        {
            "message": "unknown tag: aliases",
            "line": " ../control/lib/door/index.js:13"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " ../control/lib/door/index.js:13"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../control/lib/door/pin.js:10"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../control/lib/door/pin.js:10"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../control/lib/flowMeter/index.js:11"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../control/lib/flowMeter/index.js:11"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " ../control/lib/flowMeter/index.js:11"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../control/lib/heater/index.js:14"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../control/lib/heater/index.js:14"
        },
        {
            "message": "unknown tag: aliases",
            "line": " ../control/lib/heater/index.js:14"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " ../control/lib/heater/index.js:14"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../control/lib/heater/pin.js:10"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../control/lib/heater/pin.js:10"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../control/lib/heater/tariff.js:10"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../control/lib/heater/tariff.js:10"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../control/lib/light/index.js:14"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../control/lib/light/index.js:14"
        },
        {
            "message": "unknown tag: aliases",
            "line": " ../control/lib/light/index.js:14"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " ../control/lib/light/index.js:14"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../control/lib/light/pin.js:10"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../control/lib/light/pin.js:10"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../control/lib/light/remote.js:10"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../control/lib/light/remote.js:10"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../control/lib/light/switch.js:10"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../control/lib/light/switch.js:10"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../control/lib/pin/commands.js:7"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../control/lib/pin/commands.js:7"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../control/lib/pin/counter.js:9"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../control/lib/pin/counter.js:9"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../control/lib/pin/din.js:9"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../control/lib/pin/din.js:9"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../control/lib/pin/dout.js:7"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../control/lib/pin/dout.js:7"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../control/lib/pin/index.js:6"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../control/lib/pin/index.js:6"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../control/lib/pin/index.js:93"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../control/lib/pin/index.js:93"
        },
        {
            "message": "unknown tag: aliases",
            "line": " ../control/lib/pin/index.js:93"
        },
        {
            "message": "unknown tag: aliases",
            "line": " ../control/lib/pin/index.js:113"
        },
        {
            "message": "unknown tag: aliases",
            "line": " ../control/lib/pin/index.js:123"
        },
        {
            "message": "unknown tag: aliases",
            "line": " ../control/lib/pin/index.js:133"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../control/lib/pin/light.js:9"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../control/lib/pin/light.js:9"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../control/lib/pin/list.js:12"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../control/lib/pin/list.js:12"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../control/lib/pin/list.js:91"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../control/lib/pin/pwm.js:7"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../control/lib/pin/pwm.js:7"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../control/lib/pin/switch.js:10"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../control/lib/pin/switch.js:10"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../control/lib/room/index.js:7"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../control/lib/room/index.js:7"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../control/lib/room/index.js:20"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../control/lib/room/index.js:20"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " ../control/lib/room/index.js:20"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../control/lib/switch/index.js:14"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../control/lib/switch/index.js:14"
        },
        {
            "message": "unknown tag: aliases",
            "line": " ../control/lib/switch/index.js:14"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " ../control/lib/switch/index.js:14"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../control/lib/switch/pin.js:10"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../control/lib/switch/pin.js:10"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " ../control/lib/switch/pin.js:10"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../control/lib/switch/relay.js:10"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../control/lib/switch/relay.js:10"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../control/lib/activity.js:12"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../control/lib/activity.js:12"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../control/lib/index.js:7"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../control/lib/index.js:7"
        },
        {
            "message": "unknown tag: features",
            "line": " ../control/lib/index.js:7"
        },
        {
            "message": "unknown tag: planned",
            "line": " ../control/lib/index.js:7"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../control/lib/index.js:46"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../control/lib/index.js:46"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../control/lib/remote.js:6"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../control/lib/remote.js:6"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../control/lib/remote.js:26"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../control/lib/remote.js:26"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../control/content.js:12"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../control/content.js:12"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../dvb/lib/channel/index.js:11"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../dvb/lib/channel/index.js:11"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " ../dvb/lib/channel/index.js:11"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../dvb/lib/index.js:7"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../dvb/lib/index.js:7"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../dvb/lib/index.js:25"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../dvb/lib/index.js:25"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../dvb/content.js:12"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../dvb/content.js:12"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../fs/lib/dir/index.js:11"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../fs/lib/dir/index.js:11"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " ../fs/lib/dir/index.js:11"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../fs/lib/file/index.js:11"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../fs/lib/file/index.js:11"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " ../fs/lib/file/index.js:11"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../fs/lib/index.js:7"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../fs/lib/index.js:7"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../fs/lib/index.js:19"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../fs/lib/index.js:19"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../fs/content.js:12"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../fs/content.js:12"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../icecast/lib/radio/index.js:11"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../icecast/lib/radio/index.js:11"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " ../icecast/lib/radio/index.js:11"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../icecast/lib/index.js:7"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../icecast/lib/index.js:7"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../icecast/lib/index.js:21"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../icecast/lib/index.js:21"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../icecast/content.js:12"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../icecast/content.js:12"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../media/lib/item/index.js:7"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../media/lib/item/index.js:7"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../media/lib/item/index.js:19"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../media/lib/item/index.js:19"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " ../media/lib/item/index.js:19"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../media/lib/player/commands.js:12"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../media/lib/player/commands.js:12"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../media/lib/player/dvb.js:10"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../media/lib/player/dvb.js:10"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../media/lib/player/index.js:11"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../media/lib/player/index.js:11"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../media/lib/player/index.js:27"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../media/lib/player/index.js:27"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " ../media/lib/player/index.js:27"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../media/lib/player/playback.js:10"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../media/lib/player/playback.js:10"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../media/lib/player/volume.js:10"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../media/lib/player/volume.js:10"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../media/lib/stream/index.js:7"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../media/lib/stream/index.js:7"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../media/lib/stream/index.js:19"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../media/lib/stream/index.js:19"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " ../media/lib/stream/index.js:19"
        },
        {
            "message": "unknown tag: result",
            "line": " ../media/lib/stream/index.js:53"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../media/lib/index.js:7"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../media/lib/index.js:7"
        },
        {
            "message": "unknown tag: features",
            "line": " ../media/lib/index.js:7"
        },
        {
            "message": "unknown tag: aliases",
            "line": " ../media/lib/index.js:7"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../media/lib/index.js:28"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../media/lib/index.js:28"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../media/lib/sources.js:3"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../media/lib/sources.js:3"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../media/lib/sources.js:29"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../media/lib/sources.js:29"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../media/content.js:12"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../media/content.js:12"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../lirc/lib/lirc/index.js:11"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../lirc/lib/lirc/index.js:11"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../lirc/lib/index.js:7"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../lirc/lib/index.js:7"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../lirc/lib/index.js:20"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../lirc/lib/index.js:20"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../lirc/content.js:12"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../lirc/content.js:12"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../pa/lib/dbus/index.js:11"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../pa/lib/dbus/index.js:11"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " ../pa/lib/dbus/index.js:11"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../pa/lib/index.js:7"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../pa/lib/index.js:7"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../pa/lib/index.js:17"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../pa/lib/index.js:17"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../pa/content.js:12"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../pa/content.js:12"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../rpi/lib/camera/index.js:11"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../rpi/lib/camera/index.js:11"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " ../rpi/lib/camera/index.js:11"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../rpi/lib/rpi/index.js:11"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../rpi/lib/rpi/index.js:11"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " ../rpi/lib/rpi/index.js:11"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../rpi/lib/index.js:7"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../rpi/lib/index.js:7"
        },
        {
            "message": "unknown tag: aliases",
            "line": " ../rpi/lib/index.js:7"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../rpi/lib/index.js:19"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../rpi/lib/index.js:19"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../rpi/content.js:12"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../rpi/content.js:12"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../videolan/lib/dvblast/index.js:11"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../videolan/lib/dvblast/index.js:11"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " ../videolan/lib/dvblast/index.js:11"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../videolan/lib/dvblast/master.js:13"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../videolan/lib/dvblast/master.js:13"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../videolan/lib/vlc/index.js:14"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../videolan/lib/vlc/index.js:14"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " ../videolan/lib/vlc/index.js:14"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../videolan/lib/index.js:7"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../videolan/lib/index.js:7"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../videolan/lib/index.js:21"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../videolan/lib/index.js:21"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../videolan/content.js:12"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../videolan/content.js:12"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../xorg/lib/xorg/index.js:11"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../xorg/lib/xorg/index.js:11"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " ../xorg/lib/xorg/index.js:11"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../xorg/lib/index.js:7"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../xorg/lib/index.js:7"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../xorg/lib/index.js:17"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../xorg/lib/index.js:17"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../xorg/content.js:12"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../xorg/content.js:12"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../yoctopuce/lib/hub/index.js:11"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../yoctopuce/lib/hub/index.js:11"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " ../yoctopuce/lib/hub/index.js:11"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../yoctopuce/lib/index.js:7"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../yoctopuce/lib/index.js:7"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../yoctopuce/lib/index.js:18"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../yoctopuce/lib/index.js:18"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../yoctopuce/content.js:12"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../yoctopuce/content.js:12"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../youtube/lib/video/index.js:11"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../youtube/lib/video/index.js:11"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " ../youtube/lib/video/index.js:11"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../youtube/lib/index.js:7"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../youtube/lib/index.js:7"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../youtube/lib/index.js:21"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../youtube/lib/index.js:21"
        },
        {
            "message": "unknown tag: caption",
            "line": " ../youtube/content.js:12"
        },
        {
            "message": "unknown tag: readme",
            "line": " ../youtube/content.js:12"
        },
        {
            "message": "Missing item type\nSet to TRUE when the entry is removed",
            "line": " ../ose/lib/entry/index.js:127"
        },
        {
            "message": "Missing item type\n- What can be doc child?\n  another object \n  array doc\n  field\n\n- Every child must have following properties:\n  name",
            "line": " ../ose/lib/field/object.js:8"
        },
        {
            "message": "Missing item type\nCalled, when received \"confirm\" message as a client.",
            "line": " ../ose/lib/peer/remote.js:281"
        },
        {
            "message": "Missing item type\nCalled, when received \"confirm\" message as a server.",
            "line": " ../ose/lib/peer/remote.js:297"
        },
        {
            "message": "Missing item type\nStandard peer to peer communication RX handler. This handler is assigned to ws.rx.",
            "line": " ../ose/lib/peer/remote.js:310"
        },
        {
            "message": "Missing item type\nHandler called a slave shard requests a view",
            "line": " ../ose/lib/shard/master.js:112"
        },
        {
            "message": "Missing item type\nMake this module available via `require(\"ose/lib/browser\")`",
            "line": " ../ose/lib/browser.js:87"
        },
        {
            "message": "Missing item type\nIncrements a counter and returns method to be called after task has been done.",
            "line": " ../ose/lib/counter.js:145"
        },
        {
            "message": "Missing item type\nCreates `Error` instance and appends a subject and data to it.\n\nSee [logging].",
            "line": " ../ose/lib/index.js:233"
        },
        {
            "message": "Missing item type\nRelay `req` to `ws`.",
            "line": " ../ose/lib/link.js:405"
        },
        {
            "message": "Missing item type\n[Property descriptor]\n(https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object/defineProperty)\ntypes enumeration.",
            "line": " ../ose/lib/wrap.js:322"
        },
        {
            "message": "Missing item type\nReturn property descriptor type of \"prop\". (exports.pdType.data || exports.pdType.accessor || exports.pdType.object)",
            "line": " ../ose/lib/wrap.js:541"
        },
        {
            "message": "Missing item type\nCreates HTML representation of content box",
            "line": " ../bb/lib/box/content.js:37"
        },
        {
            "message": "Missing item type\nCreates HTML representation of left box",
            "line": " ../bb/lib/box/left.js:38"
        },
        {
            "message": "Missing item type\nAdds an item to the dashboard.",
            "line": " ../bb/lib/pagelet/dashboard.js:55"
        },
        {
            "message": "Missing item type\nAdds items to the dashboard.",
            "line": " ../bb/lib/pagelet/dashboard.js:66"
        },
        {
            "message": "Missing item type\nAdds an item to the dashboard.",
            "line": " ../bb/lib/pagelet/dashboard.js:80"
        },
        {
            "message": "Missing item type\nAdds an item to the dashboardk.",
            "line": " ../bb/lib/pagelet/dashboard.js:96"
        },
        {
            "message": "Missing item type",
            "line": " ../bb/lib/pagelet/detail.js:276"
        },
        {
            "message": "Missing item type",
            "line": " ../boards/lib/relay/index.js:9"
        },
        {
            "message": "Missing item type",
            "line": " ../boards/lib/relay/socket.js:6"
        },
        {
            "message": "Missing item type\nInvoked on entry state change.",
            "line": " ../control/lib/heater/index.js:84"
        },
        {
            "message": "Missing item type\nInvoked on entry state change.",
            "line": " ../control/lib/heater/index.js:99"
        },
        {
            "message": "Missing item type\nThis method is assigned to the `Pin` instance and replaces the\noriginal `send()` method.  `this` is a `Pin` instance.",
            "line": " ../control/lib/pin/light.js:29"
        },
        {
            "message": "Missing item type\nThis method is assigned to the `Pin` instance and replaces the\noriginal `update()` method.  `this` is a `Pin` instance.",
            "line": " ../control/lib/pin/light.js:41"
        },
        {
            "message": "Missing item type\nCall to update PWM board entry state of individual pin and invoke\n`link.update()`",
            "line": " ../control/lib/pin/light.js:132"
        },
        {
            "message": "Missing item type\nDim light from `state.last.raw` to `stat.raw`.",
            "line": " ../control/lib/pin/light.js:166"
        },
        {
            "message": "Missing item type\nTransform value comming from a light.",
            "line": " ../control/lib/pin/light.js:217"
        },
        {
            "message": "Missing item type\nTransform value before sending to a light.",
            "line": " ../control/lib/pin/light.js:235"
        },
        {
            "message": "Missing item type\n[Command handler] changes room activity.",
            "line": " ../control/lib/room/index.js:102"
        },
        {
            "message": "Missing item type\nReset current group after timeout to last group without timeout.",
            "line": " ../control/lib/remote.js:255"
        },
        {
            "message": "Missing item type\nSend media item to to playback",
            "line": " ../icecast/lib/radio/index.js:30"
        },
        {
            "message": "Missing item type\nSend media item to to playback",
            "line": " ../media/lib/stream/index.js:70"
        },
        {
            "message": "Missing item type\nSend media item to to playback",
            "line": " ../youtube/lib/video/index.js:35"
        }
    ]
}